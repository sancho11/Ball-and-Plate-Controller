ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_X.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_X_Enable,"ax",%progbits
  20              		.align	1
  21              		.global	PWM_X_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	PWM_X_Enable, %function
  25              	PWM_X_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\PWM_X.c"
   1:Generated_Source\PSoC5/PWM_X.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_X.c **** * File Name: PWM_X.c
   3:Generated_Source\PSoC5/PWM_X.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_X.c **** *
   5:Generated_Source\PSoC5/PWM_X.c **** * Description:
   6:Generated_Source\PSoC5/PWM_X.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_X.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_X.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_X.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_X.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_X.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_X.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_X.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_X.c **** *
  15:Generated_Source\PSoC5/PWM_X.c **** * Note:
  16:Generated_Source\PSoC5/PWM_X.c **** *
  17:Generated_Source\PSoC5/PWM_X.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_X.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_X.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_X.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_X.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_X.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_X.c **** 
  24:Generated_Source\PSoC5/PWM_X.c **** #include "PWM_X.h"
  25:Generated_Source\PSoC5/PWM_X.c **** 
  26:Generated_Source\PSoC5/PWM_X.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_X.c **** #ifdef PWM_X_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_X.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_X.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_X.c **** #endif /* PWM_X_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 2


  31:Generated_Source\PSoC5/PWM_X.c **** 
  32:Generated_Source\PSoC5/PWM_X.c **** uint8 PWM_X_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_X.c **** 
  34:Generated_Source\PSoC5/PWM_X.c **** 
  35:Generated_Source\PSoC5/PWM_X.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_X.c **** * Function Name: PWM_X_Start
  37:Generated_Source\PSoC5/PWM_X.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_X.c **** *
  39:Generated_Source\PSoC5/PWM_X.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_X.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_X.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_X.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_X.c **** *
  44:Generated_Source\PSoC5/PWM_X.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_X.c **** *  None
  46:Generated_Source\PSoC5/PWM_X.c **** *
  47:Generated_Source\PSoC5/PWM_X.c **** * Return:
  48:Generated_Source\PSoC5/PWM_X.c **** *  None
  49:Generated_Source\PSoC5/PWM_X.c **** *
  50:Generated_Source\PSoC5/PWM_X.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_X.c **** *  PWM_X_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_X.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_X.c **** *
  54:Generated_Source\PSoC5/PWM_X.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_X.c **** void PWM_X_Start(void) 
  56:Generated_Source\PSoC5/PWM_X.c **** {
  57:Generated_Source\PSoC5/PWM_X.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_X.c ****     if(PWM_X_initVar == 0u)
  59:Generated_Source\PSoC5/PWM_X.c ****     {
  60:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_Init();
  61:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_initVar = 1u;
  62:Generated_Source\PSoC5/PWM_X.c ****     }
  63:Generated_Source\PSoC5/PWM_X.c ****     PWM_X_Enable();
  64:Generated_Source\PSoC5/PWM_X.c **** 
  65:Generated_Source\PSoC5/PWM_X.c **** }
  66:Generated_Source\PSoC5/PWM_X.c **** 
  67:Generated_Source\PSoC5/PWM_X.c **** 
  68:Generated_Source\PSoC5/PWM_X.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_X.c **** * Function Name: PWM_X_Init
  70:Generated_Source\PSoC5/PWM_X.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_X.c **** *
  72:Generated_Source\PSoC5/PWM_X.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_X.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_X.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_X.c **** *  PWM_X_Start().
  76:Generated_Source\PSoC5/PWM_X.c **** *
  77:Generated_Source\PSoC5/PWM_X.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_X.c **** *  None
  79:Generated_Source\PSoC5/PWM_X.c **** *
  80:Generated_Source\PSoC5/PWM_X.c **** * Return:
  81:Generated_Source\PSoC5/PWM_X.c **** *  None
  82:Generated_Source\PSoC5/PWM_X.c **** *
  83:Generated_Source\PSoC5/PWM_X.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_X.c **** void PWM_X_Init(void) 
  85:Generated_Source\PSoC5/PWM_X.c **** {
  86:Generated_Source\PSoC5/PWM_X.c ****     #if (PWM_X_UsingFixedFunction || PWM_X_UseControl)
  87:Generated_Source\PSoC5/PWM_X.c ****         uint8 ctrl;
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 3


  88:Generated_Source\PSoC5/PWM_X.c ****     #endif /* (PWM_X_UsingFixedFunction || PWM_X_UseControl) */
  89:Generated_Source\PSoC5/PWM_X.c **** 
  90:Generated_Source\PSoC5/PWM_X.c ****     #if(!PWM_X_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_X.c ****         #if(PWM_X_UseStatus)
  92:Generated_Source\PSoC5/PWM_X.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_X.c ****             uint8 PWM_X_interruptState;
  94:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_UseStatus) */
  95:Generated_Source\PSoC5/PWM_X.c ****     #endif /* (!PWM_X_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_X.c **** 
  97:Generated_Source\PSoC5/PWM_X.c ****     #if (PWM_X_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_X.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_CONTROL |= PWM_X_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_X.c ****         #if (PWM_X_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_CONTROL |= PWM_X_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_X.c **** 
 104:Generated_Source\PSoC5/PWM_X.c ****         ctrl = PWM_X_CONTROL3 & ((uint8 )(~PWM_X_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_CONTROL3 = ctrl | PWM_X_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_X.c **** 
 107:Generated_Source\PSoC5/PWM_X.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_RT1 &= ((uint8)(~PWM_X_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_RT1 |= PWM_X_SYNC;
 110:Generated_Source\PSoC5/PWM_X.c **** 
 111:Generated_Source\PSoC5/PWM_X.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_RT1 &= ((uint8)(~PWM_X_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_RT1 |= PWM_X_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_X.c **** 
 115:Generated_Source\PSoC5/PWM_X.c ****     #elif (PWM_X_UseControl)
 116:Generated_Source\PSoC5/PWM_X.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_X.c ****         ctrl = PWM_X_CONTROL & ((uint8)(~PWM_X_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_X.c ****                 ((uint8)(~PWM_X_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_CONTROL = ctrl | PWM_X_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_X.c ****                                    PWM_X_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_X.c ****     #endif /* (PWM_X_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_X.c **** 
 123:Generated_Source\PSoC5/PWM_X.c ****     #if (!PWM_X_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_X.c ****         #if (PWM_X_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_X.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_AUX_CONTROLDP0 |= (PWM_X_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_X.c ****         #else /* (PWM_X_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_X.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_AUX_CONTROLDP0 |= (PWM_X_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_AUX_CONTROLDP1 |= (PWM_X_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_X.c **** 
 133:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_WriteCounter(PWM_X_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM_X.c ****     #endif /* (!PWM_X_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_X.c **** 
 136:Generated_Source\PSoC5/PWM_X.c ****     PWM_X_WritePeriod(PWM_X_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/PWM_X.c **** 
 138:Generated_Source\PSoC5/PWM_X.c ****         #if (PWM_X_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_WriteCompare(PWM_X_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_X.c ****         #else
 141:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_WriteCompare1(PWM_X_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_WriteCompare2(PWM_X_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_X.c **** 
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 4


 145:Generated_Source\PSoC5/PWM_X.c ****         #if (PWM_X_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_WriteKillTime(PWM_X_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_X.c **** 
 149:Generated_Source\PSoC5/PWM_X.c ****         #if (PWM_X_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_WriteDeadTime(PWM_X_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_X.c **** 
 153:Generated_Source\PSoC5/PWM_X.c ****     #if (PWM_X_UseStatus || PWM_X_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_SetInterruptMode(PWM_X_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM_X.c ****     #endif /* (PWM_X_UseStatus || PWM_X_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_X.c **** 
 157:Generated_Source\PSoC5/PWM_X.c ****     #if (PWM_X_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_X.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_GLOBAL_ENABLE |= PWM_X_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_X.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_CONTROL2 |= PWM_X_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_X.c ****     #else
 163:Generated_Source\PSoC5/PWM_X.c ****         #if(PWM_X_UseStatus)
 164:Generated_Source\PSoC5/PWM_X.c **** 
 165:Generated_Source\PSoC5/PWM_X.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_X.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_X.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_STATUS_AUX_CTRL |= PWM_X_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_X.c **** 
 171:Generated_Source\PSoC5/PWM_X.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_X.c ****             CyExitCriticalSection(PWM_X_interruptState);
 173:Generated_Source\PSoC5/PWM_X.c **** 
 174:Generated_Source\PSoC5/PWM_X.c ****             /* Clear the FIFO to enable the PWM_X_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_X.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_UseStatus) */
 178:Generated_Source\PSoC5/PWM_X.c ****     #endif /* (PWM_X_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_X.c **** }
 180:Generated_Source\PSoC5/PWM_X.c **** 
 181:Generated_Source\PSoC5/PWM_X.c **** 
 182:Generated_Source\PSoC5/PWM_X.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_X.c **** * Function Name: PWM_X_Enable
 184:Generated_Source\PSoC5/PWM_X.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_X.c **** *
 186:Generated_Source\PSoC5/PWM_X.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_X.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_X.c **** *
 189:Generated_Source\PSoC5/PWM_X.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_X.c **** *  None
 191:Generated_Source\PSoC5/PWM_X.c **** *
 192:Generated_Source\PSoC5/PWM_X.c **** * Return:
 193:Generated_Source\PSoC5/PWM_X.c **** *  None
 194:Generated_Source\PSoC5/PWM_X.c **** *
 195:Generated_Source\PSoC5/PWM_X.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_X.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_X.c **** *
 198:Generated_Source\PSoC5/PWM_X.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_X.c **** void PWM_X_Enable(void) 
 200:Generated_Source\PSoC5/PWM_X.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/PWM_X.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_X.c ****     #if (PWM_X_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_GLOBAL_ENABLE |= PWM_X_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_GLOBAL_STBY_ENABLE |= PWM_X_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_X.c ****     #endif /* (PWM_X_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_X.c **** 
 207:Generated_Source\PSoC5/PWM_X.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_X.c ****     #if (PWM_X_UseControl || PWM_X_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_CONTROL |= PWM_X_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7B640040 		.word	1073767547
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	PWM_X_Enable, .-PWM_X_Enable
  46              		.section	.text.PWM_X_Stop,"ax",%progbits
  47              		.align	1
  48              		.global	PWM_X_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	PWM_X_Stop, %function
  52              	PWM_X_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/PWM_X.c ****     #endif /* (PWM_X_UseControl || PWM_X_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_X.c **** }
 212:Generated_Source\PSoC5/PWM_X.c **** 
 213:Generated_Source\PSoC5/PWM_X.c **** 
 214:Generated_Source\PSoC5/PWM_X.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_X.c **** * Function Name: PWM_X_Stop
 216:Generated_Source\PSoC5/PWM_X.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_X.c **** *
 218:Generated_Source\PSoC5/PWM_X.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_X.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_X.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_X.c **** *
 222:Generated_Source\PSoC5/PWM_X.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_X.c **** *  None
 224:Generated_Source\PSoC5/PWM_X.c **** *
 225:Generated_Source\PSoC5/PWM_X.c **** * Return:
 226:Generated_Source\PSoC5/PWM_X.c **** *  None
 227:Generated_Source\PSoC5/PWM_X.c **** *
 228:Generated_Source\PSoC5/PWM_X.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_X.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_X.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_X.c **** *
 232:Generated_Source\PSoC5/PWM_X.c **** *******************************************************************************/
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 6


 233:Generated_Source\PSoC5/PWM_X.c **** void PWM_X_Stop(void) 
 234:Generated_Source\PSoC5/PWM_X.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/PWM_X.c ****     #if (PWM_X_UseControl || PWM_X_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_CONTROL &= ((uint8)(~PWM_X_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7B640040 		.word	1073767547
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	PWM_X_Stop, .-PWM_X_Stop
  72              		.section	.text.PWM_X_WriteCounter,"ax",%progbits
  73              		.align	1
  74              		.global	PWM_X_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	PWM_X_WriteCounter, %function
  78              	PWM_X_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/PWM_X.c ****     #endif /* (PWM_X_UseControl || PWM_X_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_X.c **** 
 239:Generated_Source\PSoC5/PWM_X.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_X.c ****     #if (PWM_X_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_GLOBAL_ENABLE &= ((uint8)(~PWM_X_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_X_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_X.c ****     #endif /* (PWM_X_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_X.c **** }
 245:Generated_Source\PSoC5/PWM_X.c **** 
 246:Generated_Source\PSoC5/PWM_X.c **** #if (PWM_X_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_X.c ****     #if (PWM_X_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_X.c **** 
 249:Generated_Source\PSoC5/PWM_X.c **** 
 250:Generated_Source\PSoC5/PWM_X.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_X.c ****         * Function Name: PWM_X_SetCompareMode
 252:Generated_Source\PSoC5/PWM_X.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_X.c ****         *
 254:Generated_Source\PSoC5/PWM_X.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_X.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_X.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_X.c ****         *
 258:Generated_Source\PSoC5/PWM_X.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_X.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_X.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_X.c ****         *
 262:Generated_Source\PSoC5/PWM_X.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_X.c ****         *  None
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 7


 264:Generated_Source\PSoC5/PWM_X.c ****         *
 265:Generated_Source\PSoC5/PWM_X.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_X.c ****         void PWM_X_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_X.c ****         {
 268:Generated_Source\PSoC5/PWM_X.c ****             #if(PWM_X_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_X.c **** 
 270:Generated_Source\PSoC5/PWM_X.c ****                 #if(0 != PWM_X_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_X.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_X_CTRL_CMPMODE1_SH
 272:Generated_Source\PSoC5/PWM_X.c ****                 #else
 273:Generated_Source\PSoC5/PWM_X.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_X.c ****                 #endif /* (0 != PWM_X_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_X.c **** 
 276:Generated_Source\PSoC5/PWM_X.c ****                 PWM_X_CONTROL3 &= ((uint8)(~PWM_X_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/PWM_X.c ****                 PWM_X_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_X.c **** 
 279:Generated_Source\PSoC5/PWM_X.c ****             #elif (PWM_X_UseControl)
 280:Generated_Source\PSoC5/PWM_X.c **** 
 281:Generated_Source\PSoC5/PWM_X.c ****                 #if(0 != PWM_X_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_X.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_X_CTRL_CMPMODE1_S
 283:Generated_Source\PSoC5/PWM_X.c ****                                                 PWM_X_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_X.c ****                 #else
 285:Generated_Source\PSoC5/PWM_X.c ****                     uint8 comparemode1masked = comparemode & PWM_X_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_X.c ****                 #endif /* (0 != PWM_X_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_X.c **** 
 288:Generated_Source\PSoC5/PWM_X.c ****                 #if(0 != PWM_X_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_X.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_X_CTRL_CMPMODE2_S
 290:Generated_Source\PSoC5/PWM_X.c ****                                                PWM_X_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_X.c ****                 #else
 292:Generated_Source\PSoC5/PWM_X.c ****                     uint8 comparemode2masked = comparemode & PWM_X_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_X.c ****                 #endif /* (0 != PWM_X_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_X.c **** 
 295:Generated_Source\PSoC5/PWM_X.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_X.c ****                 PWM_X_CONTROL &= ((uint8)(~(PWM_X_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_X.c ****                                             PWM_X_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_X.c ****                 PWM_X_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_X.c **** 
 300:Generated_Source\PSoC5/PWM_X.c ****             #else
 301:Generated_Source\PSoC5/PWM_X.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_X.c ****             #endif /* (PWM_X_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_X.c ****         }
 304:Generated_Source\PSoC5/PWM_X.c ****     #endif /* PWM_X_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_X.c **** 
 306:Generated_Source\PSoC5/PWM_X.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_X.c **** 
 308:Generated_Source\PSoC5/PWM_X.c ****     #if (PWM_X_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_X.c **** 
 310:Generated_Source\PSoC5/PWM_X.c **** 
 311:Generated_Source\PSoC5/PWM_X.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_X.c ****         * Function Name: PWM_X_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_X.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_X.c ****         *
 315:Generated_Source\PSoC5/PWM_X.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_X.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_X.c ****         *
 318:Generated_Source\PSoC5/PWM_X.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_X.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_X.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 8


 321:Generated_Source\PSoC5/PWM_X.c ****         *
 322:Generated_Source\PSoC5/PWM_X.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_X.c ****         *  None
 324:Generated_Source\PSoC5/PWM_X.c ****         *
 325:Generated_Source\PSoC5/PWM_X.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_X.c ****         void PWM_X_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_X.c ****         {
 328:Generated_Source\PSoC5/PWM_X.c ****             #if(0 != PWM_X_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_X.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_X_CTRL_CMPMODE1_SHIFT)
 330:Generated_Source\PSoC5/PWM_X.c ****                                            PWM_X_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_X.c ****             #else
 332:Generated_Source\PSoC5/PWM_X.c ****                 uint8 comparemodemasked = comparemode & PWM_X_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_X.c ****             #endif /* (0 != PWM_X_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_X.c **** 
 335:Generated_Source\PSoC5/PWM_X.c ****             #if (PWM_X_UseControl)
 336:Generated_Source\PSoC5/PWM_X.c ****                 PWM_X_CONTROL &= ((uint8)(~PWM_X_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/PWM_X.c ****                 PWM_X_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_X.c ****             #endif /* (PWM_X_UseControl) */
 339:Generated_Source\PSoC5/PWM_X.c ****         }
 340:Generated_Source\PSoC5/PWM_X.c ****     #endif /* PWM_X_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_X.c **** 
 342:Generated_Source\PSoC5/PWM_X.c **** #if (PWM_X_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_X.c **** 
 344:Generated_Source\PSoC5/PWM_X.c **** 
 345:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_X.c ****     *
 349:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_X.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_X.c ****     *
 352:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_X.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_X.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_X.c ****     *
 356:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_X.c ****     *  None
 358:Generated_Source\PSoC5/PWM_X.c ****     *
 359:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_X.c ****     void PWM_X_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_X.c ****     {
 362:Generated_Source\PSoC5/PWM_X.c **** 
 363:Generated_Source\PSoC5/PWM_X.c ****         #if(0 != PWM_X_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_X.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_X_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/PWM_X.c ****                                                  PWM_X_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_X.c ****         #else
 367:Generated_Source\PSoC5/PWM_X.c ****             uint8 comparemodemasked = comparemode & PWM_X_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (0 != PWM_X_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_X.c **** 
 370:Generated_Source\PSoC5/PWM_X.c ****         #if (PWM_X_UseControl)
 371:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_CONTROL &= ((uint8)(~PWM_X_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_UseControl) */
 374:Generated_Source\PSoC5/PWM_X.c ****     }
 375:Generated_Source\PSoC5/PWM_X.c ****     #endif /*PWM_X_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_X.c **** 
 377:Generated_Source\PSoC5/PWM_X.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 9


 378:Generated_Source\PSoC5/PWM_X.c **** 
 379:Generated_Source\PSoC5/PWM_X.c **** 
 380:Generated_Source\PSoC5/PWM_X.c **** #if (!PWM_X_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_X.c **** 
 382:Generated_Source\PSoC5/PWM_X.c **** 
 383:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_WriteCounter
 385:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_X.c ****     *
 387:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_X.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_X.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_X.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_X.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_X.c ****     *
 393:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_X.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_X.c ****     *
 396:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_X.c ****     *  None
 398:Generated_Source\PSoC5/PWM_X.c ****     *
 399:Generated_Source\PSoC5/PWM_X.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_X.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_X.c ****     *
 402:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_X.c ****     void PWM_X_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/PWM_X.c ****                                        
 405:Generated_Source\PSoC5/PWM_X.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/PWM_X.c ****         CY_SET_REG16(PWM_X_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1880     		strh	r0, [r3]	@ movhi
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 14680040 		.word	1073768468
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	PWM_X_WriteCounter, .-PWM_X_WriteCounter
  97              		.section	.text.PWM_X_ReadCounter,"ax",%progbits
  98              		.align	1
  99              		.global	PWM_X_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	PWM_X_ReadCounter, %function
 103              	PWM_X_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/PWM_X.c ****     }
 408:Generated_Source\PSoC5/PWM_X.c **** 
 409:Generated_Source\PSoC5/PWM_X.c **** 
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 10


 410:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_ReadCounter
 412:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_X.c ****     *
 414:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_X.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_X.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_X.c ****     *
 418:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_X.c ****     *  None
 420:Generated_Source\PSoC5/PWM_X.c ****     *
 421:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_X.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_X.c ****     *
 424:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_X.c ****     uint16 PWM_X_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_X.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/PWM_X.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_X.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_X.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_X.c ****           (void)CY_GET_REG8(PWM_X_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/PWM_X.c **** 
 432:Generated_Source\PSoC5/PWM_X.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_X.c ****         return (CY_GET_REG16(PWM_X_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1888     		ldrh	r0, [r3]
 434:Generated_Source\PSoC5/PWM_X.c ****     }
 116              		.loc 1 434 0
 117 0008 80B2     		uxth	r0, r0
 118 000a 7047     		bx	lr
 119              	.L12:
 120              		.align	2
 121              	.L11:
 122 000c 1A640040 		.word	1073767450
 123 0010 B4680040 		.word	1073768628
 124              		.cfi_endproc
 125              	.LFE5:
 126              		.size	PWM_X_ReadCounter, .-PWM_X_ReadCounter
 127              		.section	.text.PWM_X_ClearFIFO,"ax",%progbits
 128              		.align	1
 129              		.global	PWM_X_ClearFIFO
 130              		.thumb
 131              		.thumb_func
 132              		.type	PWM_X_ClearFIFO, %function
 133              	PWM_X_ClearFIFO:
 134              	.LFB6:
 435:Generated_Source\PSoC5/PWM_X.c **** 
 436:Generated_Source\PSoC5/PWM_X.c ****     #if (PWM_X_UseStatus)
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 11


 437:Generated_Source\PSoC5/PWM_X.c **** 
 438:Generated_Source\PSoC5/PWM_X.c **** 
 439:Generated_Source\PSoC5/PWM_X.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_X.c ****         * Function Name: PWM_X_ClearFIFO
 441:Generated_Source\PSoC5/PWM_X.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_X.c ****         *
 443:Generated_Source\PSoC5/PWM_X.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_X.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_X.c ****         *
 446:Generated_Source\PSoC5/PWM_X.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_X.c ****         *  None
 448:Generated_Source\PSoC5/PWM_X.c ****         *
 449:Generated_Source\PSoC5/PWM_X.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_X.c ****         *  None
 451:Generated_Source\PSoC5/PWM_X.c ****         *
 452:Generated_Source\PSoC5/PWM_X.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_X.c ****         void PWM_X_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_X.c ****         {
 135              		.loc 1 454 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LBB16:
 141              	.LBB17:
 455:Generated_Source\PSoC5/PWM_X.c ****             while(0u != (PWM_X_ReadStatusRegister() & PWM_X_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_X.c ****             {
 457:Generated_Source\PSoC5/PWM_X.c ****                 (void)PWM_X_ReadCapture();
 458:Generated_Source\PSoC5/PWM_X.c ****             }
 459:Generated_Source\PSoC5/PWM_X.c ****         }
 460:Generated_Source\PSoC5/PWM_X.c **** 
 461:Generated_Source\PSoC5/PWM_X.c ****     #endif /* PWM_X_UseStatus */
 462:Generated_Source\PSoC5/PWM_X.c **** 
 463:Generated_Source\PSoC5/PWM_X.c **** #endif /* !PWM_X_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_X.c **** 
 465:Generated_Source\PSoC5/PWM_X.c **** 
 466:Generated_Source\PSoC5/PWM_X.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_X.c **** * Function Name: PWM_X_WritePeriod
 468:Generated_Source\PSoC5/PWM_X.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_X.c **** *
 470:Generated_Source\PSoC5/PWM_X.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_X.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_X.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_X.c **** *
 474:Generated_Source\PSoC5/PWM_X.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_X.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_X.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_X.c **** *
 478:Generated_Source\PSoC5/PWM_X.c **** * Return:
 479:Generated_Source\PSoC5/PWM_X.c **** *  None
 480:Generated_Source\PSoC5/PWM_X.c **** *
 481:Generated_Source\PSoC5/PWM_X.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_X.c **** void PWM_X_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/PWM_X.c **** {
 484:Generated_Source\PSoC5/PWM_X.c ****     #if(PWM_X_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_X.c ****         CY_SET_REG16(PWM_X_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_X.c ****     #else
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 12


 487:Generated_Source\PSoC5/PWM_X.c ****         CY_SET_REG16(PWM_X_PERIOD_LSB_PTR, period);
 488:Generated_Source\PSoC5/PWM_X.c ****     #endif /* (PWM_X_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_X.c **** }
 490:Generated_Source\PSoC5/PWM_X.c **** 
 491:Generated_Source\PSoC5/PWM_X.c **** #if (PWM_X_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_X.c **** 
 493:Generated_Source\PSoC5/PWM_X.c **** 
 494:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_WriteCompare
 496:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_X.c ****     *
 498:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_X.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_X.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_X.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_X.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_X.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_X.c ****     *
 505:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_X.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_X.c ****     *
 508:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_X.c ****     *  None
 510:Generated_Source\PSoC5/PWM_X.c ****     *
 511:Generated_Source\PSoC5/PWM_X.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_X.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_X.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_X.c ****     *
 515:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_X.c ****     void PWM_X_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/PWM_X.c ****                                        
 518:Generated_Source\PSoC5/PWM_X.c ****     {
 519:Generated_Source\PSoC5/PWM_X.c ****         #if(PWM_X_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_X.c ****             CY_SET_REG16(PWM_X_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_X.c ****         #else
 522:Generated_Source\PSoC5/PWM_X.c ****             CY_SET_REG16(PWM_X_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_X.c **** 
 525:Generated_Source\PSoC5/PWM_X.c ****         #if (PWM_X_PWMMode == PWM_X__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_X.c ****             #if(PWM_X_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_X.c ****                 CY_SET_REG16(PWM_X_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_X.c ****             #else
 529:Generated_Source\PSoC5/PWM_X.c ****                 CY_SET_REG16(PWM_X_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_X.c ****             #endif /* (PWM_X_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_PWMMode == PWM_X__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_X.c ****     }
 533:Generated_Source\PSoC5/PWM_X.c **** 
 534:Generated_Source\PSoC5/PWM_X.c **** 
 535:Generated_Source\PSoC5/PWM_X.c **** #else
 536:Generated_Source\PSoC5/PWM_X.c **** 
 537:Generated_Source\PSoC5/PWM_X.c **** 
 538:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_WriteCompare1
 540:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_X.c ****     *
 542:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_X.c ****     *  This funtion is used to change the compare1 value.  The compare output will
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 13


 544:Generated_Source\PSoC5/PWM_X.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_X.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_X.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_X.c ****     *
 548:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_X.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_X.c ****     *
 551:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_X.c ****     *  None
 553:Generated_Source\PSoC5/PWM_X.c ****     *
 554:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_X.c ****     void PWM_X_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/PWM_X.c ****                                         
 557:Generated_Source\PSoC5/PWM_X.c ****     {
 558:Generated_Source\PSoC5/PWM_X.c ****         #if(PWM_X_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_X.c ****             CY_SET_REG16(PWM_X_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_X.c ****         #else
 561:Generated_Source\PSoC5/PWM_X.c ****             CY_SET_REG16(PWM_X_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_X.c ****     }
 564:Generated_Source\PSoC5/PWM_X.c **** 
 565:Generated_Source\PSoC5/PWM_X.c **** 
 566:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_WriteCompare2
 568:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_X.c ****     *
 570:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_X.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_X.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_X.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_X.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_X.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_X.c ****     *
 577:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_X.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_X.c ****     *
 580:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_X.c ****     *  None
 582:Generated_Source\PSoC5/PWM_X.c ****     *
 583:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_X.c ****     void PWM_X_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/PWM_X.c ****                                         
 586:Generated_Source\PSoC5/PWM_X.c ****     {
 587:Generated_Source\PSoC5/PWM_X.c ****         #if(PWM_X_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_X.c ****             CY_SET_REG16(PWM_X_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_X.c ****         #else
 590:Generated_Source\PSoC5/PWM_X.c ****             CY_SET_REG16(PWM_X_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_X.c ****     }
 593:Generated_Source\PSoC5/PWM_X.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_X.c **** 
 595:Generated_Source\PSoC5/PWM_X.c **** #if (PWM_X_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_X.c **** 
 597:Generated_Source\PSoC5/PWM_X.c **** 
 598:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 14


 601:Generated_Source\PSoC5/PWM_X.c ****     *
 602:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_X.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_X.c ****     *
 605:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_X.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_X.c ****     *
 608:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_X.c ****     *  None
 610:Generated_Source\PSoC5/PWM_X.c ****     *
 611:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_X.c ****     void PWM_X_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_X.c ****     {
 614:Generated_Source\PSoC5/PWM_X.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_X.c ****         #if(!PWM_X_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_X.c ****             CY_SET_REG8(PWM_X_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_X.c ****         #else
 618:Generated_Source\PSoC5/PWM_X.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_X.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_DEADBAND_COUNT &= ((uint8)(~PWM_X_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_X.c **** 
 622:Generated_Source\PSoC5/PWM_X.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_X.c ****             #if(PWM_X_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_X.c ****                 PWM_X_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_X_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC5/PWM_X.c ****                                                     PWM_X_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_X.c ****             #else
 627:Generated_Source\PSoC5/PWM_X.c ****                 PWM_X_DEADBAND_COUNT |= deadtime & PWM_X_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_X.c ****             #endif /* (PWM_X_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_X.c **** 
 630:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (!PWM_X_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_X.c ****     }
 632:Generated_Source\PSoC5/PWM_X.c **** 
 633:Generated_Source\PSoC5/PWM_X.c **** 
 634:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_X.c ****     *
 638:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_X.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_X.c ****     *
 641:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_X.c ****     *  None
 643:Generated_Source\PSoC5/PWM_X.c ****     *
 644:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_X.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_X.c ****     *
 647:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_X.c ****     uint8 PWM_X_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_X.c ****     {
 650:Generated_Source\PSoC5/PWM_X.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_X.c ****         #if(!PWM_X_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_X.c ****             return (CY_GET_REG8(PWM_X_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_X.c ****         #else
 654:Generated_Source\PSoC5/PWM_X.c **** 
 655:Generated_Source\PSoC5/PWM_X.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_X.c ****             #if(PWM_X_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_X.c ****                 return ((uint8)(((uint8)(PWM_X_DEADBAND_COUNT & PWM_X_DEADBAND_COUNT_MASK)) >>
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 15


 658:Generated_Source\PSoC5/PWM_X.c ****                                                                            PWM_X_DEADBAND_COUNT_SHI
 659:Generated_Source\PSoC5/PWM_X.c ****             #else
 660:Generated_Source\PSoC5/PWM_X.c ****                 return (PWM_X_DEADBAND_COUNT & PWM_X_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_X.c ****             #endif /* (PWM_X_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (!PWM_X_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_X.c ****     }
 664:Generated_Source\PSoC5/PWM_X.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_X.c **** 
 666:Generated_Source\PSoC5/PWM_X.c **** #if (PWM_X_UseStatus || PWM_X_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_X.c **** 
 668:Generated_Source\PSoC5/PWM_X.c **** 
 669:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_X.c ****     *
 673:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_X.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_X.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_X.c ****     *
 677:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_X.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_X.c ****     *
 680:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_X.c ****     *  None
 682:Generated_Source\PSoC5/PWM_X.c ****     *
 683:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_X.c ****     void PWM_X_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_X.c ****     {
 686:Generated_Source\PSoC5/PWM_X.c ****         CY_SET_REG8(PWM_X_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC5/PWM_X.c ****     }
 688:Generated_Source\PSoC5/PWM_X.c **** 
 689:Generated_Source\PSoC5/PWM_X.c **** 
 690:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_X.c ****     *
 694:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_X.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_X.c ****     *
 697:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_X.c ****     *  None
 699:Generated_Source\PSoC5/PWM_X.c ****     *
 700:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_X.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_X.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_X.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_X.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_X.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_X.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_X.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_X.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_X.c ****     *
 710:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_X.c ****     uint8 PWM_X_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_X.c ****     {
 713:Generated_Source\PSoC5/PWM_X.c ****         return (CY_GET_REG8(PWM_X_STATUS_PTR));
 142              		.loc 1 713 0
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 16


 143 0000 034A     		ldr	r2, .L18
 144              	.LBE17:
 145              	.LBE16:
 146              	.LBB19:
 147              	.LBB20:
 714:Generated_Source\PSoC5/PWM_X.c ****     }
 715:Generated_Source\PSoC5/PWM_X.c **** 
 716:Generated_Source\PSoC5/PWM_X.c **** #endif /* (PWM_X_UseStatus || PWM_X_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_X.c **** 
 718:Generated_Source\PSoC5/PWM_X.c **** 
 719:Generated_Source\PSoC5/PWM_X.c **** #if (PWM_X_UseControl)
 720:Generated_Source\PSoC5/PWM_X.c **** 
 721:Generated_Source\PSoC5/PWM_X.c **** 
 722:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_X.c ****     *
 726:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_X.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_X.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_X.c ****     *
 730:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_X.c ****     *  None
 732:Generated_Source\PSoC5/PWM_X.c ****     *
 733:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_X.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_X.c ****     *
 736:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_X.c ****     uint8 PWM_X_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_X.c ****     {
 739:Generated_Source\PSoC5/PWM_X.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_X.c **** 
 741:Generated_Source\PSoC5/PWM_X.c ****         result = CY_GET_REG8(PWM_X_CONTROL_PTR);
 742:Generated_Source\PSoC5/PWM_X.c ****         return (result);
 743:Generated_Source\PSoC5/PWM_X.c ****     }
 744:Generated_Source\PSoC5/PWM_X.c **** 
 745:Generated_Source\PSoC5/PWM_X.c **** 
 746:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_X.c ****     *
 750:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_X.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_X.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_X.c ****     *
 754:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_X.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_X.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_X.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_X.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_X.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_X.c ****     *
 761:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_X.c ****     *  None
 763:Generated_Source\PSoC5/PWM_X.c ****     *
 764:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_X.c ****     void PWM_X_WriteControlRegister(uint8 control) 
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 17


 766:Generated_Source\PSoC5/PWM_X.c ****     {
 767:Generated_Source\PSoC5/PWM_X.c ****         CY_SET_REG8(PWM_X_CONTROL_PTR, control);
 768:Generated_Source\PSoC5/PWM_X.c ****     }
 769:Generated_Source\PSoC5/PWM_X.c **** 
 770:Generated_Source\PSoC5/PWM_X.c **** #endif /* (PWM_X_UseControl) */
 771:Generated_Source\PSoC5/PWM_X.c **** 
 772:Generated_Source\PSoC5/PWM_X.c **** 
 773:Generated_Source\PSoC5/PWM_X.c **** #if (!PWM_X_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_X.c **** 
 775:Generated_Source\PSoC5/PWM_X.c **** 
 776:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_ReadCapture
 778:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_X.c ****     *
 780:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_X.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_X.c ****     *
 783:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_X.c ****     *  None
 785:Generated_Source\PSoC5/PWM_X.c ****     *
 786:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_X.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_X.c ****     *
 789:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_X.c ****     uint16 PWM_X_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_X.c ****     {
 792:Generated_Source\PSoC5/PWM_X.c ****         return (CY_GET_REG16(PWM_X_CAPTURE_LSB_PTR));
 148              		.loc 1 792 0
 149 0002 0449     		ldr	r1, .L18+4
 150              	.L14:
 151              	.LBE20:
 152              	.LBE19:
 153              	.LBB22:
 154              	.LBB18:
 713:Generated_Source\PSoC5/PWM_X.c ****     }
 155              		.loc 1 713 0
 156 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 157              	.LBE18:
 158              	.LBE22:
 455:Generated_Source\PSoC5/PWM_X.c ****             while(0u != (PWM_X_ReadStatusRegister() & PWM_X_STATUS_FIFONEMPTY))
 159              		.loc 1 455 0
 160 0006 DB06     		lsls	r3, r3, #27
 161 0008 01D5     		bpl	.L17
 162              	.LBB23:
 163              	.LBB21:
 164              		.loc 1 792 0
 165 000a 0B88     		ldrh	r3, [r1]
 166 000c FAE7     		b	.L14
 167              	.L17:
 168              	.LBE21:
 169              	.LBE23:
 459:Generated_Source\PSoC5/PWM_X.c **** 
 170              		.loc 1 459 0
 171 000e 7047     		bx	lr
 172              	.L19:
 173              		.align	2
 174              	.L18:
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 18


 175 0010 6B640040 		.word	1073767531
 176 0014 B4680040 		.word	1073768628
 177              		.cfi_endproc
 178              	.LFE6:
 179              		.size	PWM_X_ClearFIFO, .-PWM_X_ClearFIFO
 180              		.section	.text.PWM_X_Init,"ax",%progbits
 181              		.align	1
 182              		.global	PWM_X_Init
 183              		.thumb
 184              		.thumb_func
 185              		.type	PWM_X_Init, %function
 186              	PWM_X_Init:
 187              	.LFB1:
  85:Generated_Source\PSoC5/PWM_X.c ****     #if (PWM_X_UsingFixedFunction || PWM_X_UseControl)
 188              		.loc 1 85 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/PWM_X.c ****                 ((uint8)(~PWM_X_CTRL_CMPMODE1_MASK));
 196              		.loc 1 117 0
 197 0002 174A     		ldr	r2, .L21
 130:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_Resolution == 8) */
 198              		.loc 1 130 0
 199 0004 174C     		ldr	r4, .L21+4
 117:Generated_Source\PSoC5/PWM_X.c ****                 ((uint8)(~PWM_X_CTRL_CMPMODE1_MASK));
 200              		.loc 1 117 0
 201 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 202              	.LVL1:
 203              	.LBB24:
 204              	.LBB25:
 686:Generated_Source\PSoC5/PWM_X.c ****     }
 205              		.loc 1 686 0
 206 0008 6FF47271 		mvn	r1, #968
 207              	.LBE25:
 208              	.LBE24:
 119:Generated_Source\PSoC5/PWM_X.c ****                                    PWM_X_DEFAULT_COMPARE1_MODE;
 209              		.loc 1 119 0
 210 000c 03F0C003 		and	r3, r3, #192
 211              	.LVL2:
 212 0010 43F00103 		orr	r3, r3, #1
 213 0014 1370     		strb	r3, [r2]
 129:Generated_Source\PSoC5/PWM_X.c ****             PWM_X_AUX_CONTROLDP1 |= (PWM_X_AUX_CTRL_FIFO0_CLR);
 214              		.loc 1 129 0
 215 0016 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 216 0018 43F00103 		orr	r3, r3, #1
 217 001c D377     		strb	r3, [r2, #31]
 130:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_Resolution == 8) */
 218              		.loc 1 130 0
 219 001e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 220 0020 43F00103 		orr	r3, r3, #1
 221 0024 2370     		strb	r3, [r4]
 222              	.LVL3:
 223              	.LBB27:
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 19


 224              	.LBB28:
 406:Generated_Source\PSoC5/PWM_X.c ****     }
 225              		.loc 1 406 0
 226 0026 44F61F63 		movw	r3, #19999
 227 002a A2F89933 		strh	r3, [r2, #921]	@ movhi
 228              	.LVL4:
 229              	.LBE28:
 230              	.LBE27:
 231              	.LBB29:
 232              	.LBB30:
 487:Generated_Source\PSoC5/PWM_X.c ****     #endif /* (PWM_X_UsingFixedFunction) */
 233              		.loc 1 487 0
 234 002e A2F81934 		strh	r3, [r2, #1049]	@ movhi
 235              	.LVL5:
 236              	.LBE30:
 237              	.LBE29:
 238              	.LBB31:
 239              	.LBB32:
 561:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_UsingFixedFunction) */
 240              		.loc 1 561 0
 241 0032 0D4B     		ldr	r3, .L21+8
 242 0034 4FF4B862 		mov	r2, #1472
 243 0038 1A80     		strh	r2, [r3]	@ movhi
 244              	.LVL6:
 245              	.LBE32:
 246              	.LBE31:
 247              	.LBB33:
 248              	.LBB34:
 590:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_UsingFixedFunction) */
 249              		.loc 1 590 0
 250 003a 4FF42F62 		mov	r2, #2800
 251 003e 1A84     		strh	r2, [r3, #32]	@ movhi
 252              	.LVL7:
 253              	.LBE34:
 254              	.LBE33:
 255              	.LBB35:
 256              	.LBB26:
 686:Generated_Source\PSoC5/PWM_X.c ****     }
 257              		.loc 1 686 0
 258 0040 0B44     		add	r3, r3, r1
 259 0042 0022     		movs	r2, #0
 260 0044 1A70     		strb	r2, [r3]
 261              	.LVL8:
 262              	.LBE26:
 263              	.LBE35:
 167:Generated_Source\PSoC5/PWM_X.c ****             /* Use the interrupt output of the status register for IRQ output */
 264              		.loc 1 167 0
 265 0046 FFF7FEFF 		bl	CyEnterCriticalSection
 266              	.LVL9:
 169:Generated_Source\PSoC5/PWM_X.c **** 
 267              		.loc 1 169 0
 268 004a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 269 004c 43F01003 		orr	r3, r3, #16
 270 0050 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC5/PWM_X.c **** 
 271              		.loc 1 172 0
 272 0052 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 20


 273              	.LVL10:
 179:Generated_Source\PSoC5/PWM_X.c **** 
 274              		.loc 1 179 0
 275 0056 BDE81040 		pop	{r4, lr}
 276              		.cfi_restore 14
 277              		.cfi_restore 4
 278              		.cfi_def_cfa_offset 0
 176:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_UseStatus) */
 279              		.loc 1 176 0
 280 005a FFF7FEBF 		b	PWM_X_ClearFIFO
 281              	.LVL11:
 282              	.L22:
 283 005e 00BF     		.align	2
 284              	.L21:
 285 0060 7B640040 		.word	1073767547
 286 0064 9B640040 		.word	1073767579
 287 0068 54680040 		.word	1073768532
 288              		.cfi_endproc
 289              	.LFE1:
 290              		.size	PWM_X_Init, .-PWM_X_Init
 291              		.section	.text.PWM_X_Start,"ax",%progbits
 292              		.align	1
 293              		.global	PWM_X_Start
 294              		.thumb
 295              		.thumb_func
 296              		.type	PWM_X_Start, %function
 297              	PWM_X_Start:
 298              	.LFB0:
  56:Generated_Source\PSoC5/PWM_X.c ****     /* If not Initialized then initialize all required hardware and software */
 299              		.loc 1 56 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 10B5     		push	{r4, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
 306              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/PWM_X.c ****     {
 307              		.loc 1 58 0
 308 0002 054C     		ldr	r4, .L25
 309 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 310 0006 1BB9     		cbnz	r3, .L24
  60:Generated_Source\PSoC5/PWM_X.c ****         PWM_X_initVar = 1u;
 311              		.loc 1 60 0
 312 0008 FFF7FEFF 		bl	PWM_X_Init
 313              	.LVL12:
  61:Generated_Source\PSoC5/PWM_X.c ****     }
 314              		.loc 1 61 0
 315 000c 0123     		movs	r3, #1
 316 000e 2370     		strb	r3, [r4]
 317              	.L24:
  65:Generated_Source\PSoC5/PWM_X.c **** 
 318              		.loc 1 65 0
 319 0010 BDE81040 		pop	{r4, lr}
 320              		.cfi_restore 14
 321              		.cfi_restore 4
 322              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 21


  63:Generated_Source\PSoC5/PWM_X.c **** 
 323              		.loc 1 63 0
 324 0014 FFF7FEBF 		b	PWM_X_Enable
 325              	.LVL13:
 326              	.L26:
 327              		.align	2
 328              	.L25:
 329 0018 00000000 		.word	.LANCHOR0
 330              		.cfi_endproc
 331              	.LFE0:
 332              		.size	PWM_X_Start, .-PWM_X_Start
 333              		.section	.text.PWM_X_WritePeriod,"ax",%progbits
 334              		.align	1
 335              		.global	PWM_X_WritePeriod
 336              		.thumb
 337              		.thumb_func
 338              		.type	PWM_X_WritePeriod, %function
 339              	PWM_X_WritePeriod:
 340              	.LFB7:
 483:Generated_Source\PSoC5/PWM_X.c ****     #if(PWM_X_UsingFixedFunction)
 341              		.loc 1 483 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 346              	.LVL14:
 487:Generated_Source\PSoC5/PWM_X.c ****     #endif /* (PWM_X_UsingFixedFunction) */
 347              		.loc 1 487 0
 348 0000 014B     		ldr	r3, .L28
 349 0002 1880     		strh	r0, [r3]	@ movhi
 350 0004 7047     		bx	lr
 351              	.L29:
 352 0006 00BF     		.align	2
 353              	.L28:
 354 0008 94680040 		.word	1073768596
 355              		.cfi_endproc
 356              	.LFE7:
 357              		.size	PWM_X_WritePeriod, .-PWM_X_WritePeriod
 358              		.section	.text.PWM_X_WriteCompare1,"ax",%progbits
 359              		.align	1
 360              		.global	PWM_X_WriteCompare1
 361              		.thumb
 362              		.thumb_func
 363              		.type	PWM_X_WriteCompare1, %function
 364              	PWM_X_WriteCompare1:
 365              	.LFB8:
 557:Generated_Source\PSoC5/PWM_X.c ****         #if(PWM_X_UsingFixedFunction)
 366              		.loc 1 557 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371              	.LVL15:
 561:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_UsingFixedFunction) */
 372              		.loc 1 561 0
 373 0000 014B     		ldr	r3, .L31
 374 0002 1880     		strh	r0, [r3]	@ movhi
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 22


 375 0004 7047     		bx	lr
 376              	.L32:
 377 0006 00BF     		.align	2
 378              	.L31:
 379 0008 54680040 		.word	1073768532
 380              		.cfi_endproc
 381              	.LFE8:
 382              		.size	PWM_X_WriteCompare1, .-PWM_X_WriteCompare1
 383              		.section	.text.PWM_X_WriteCompare2,"ax",%progbits
 384              		.align	1
 385              		.global	PWM_X_WriteCompare2
 386              		.thumb
 387              		.thumb_func
 388              		.type	PWM_X_WriteCompare2, %function
 389              	PWM_X_WriteCompare2:
 390              	.LFB9:
 586:Generated_Source\PSoC5/PWM_X.c ****         #if(PWM_X_UsingFixedFunction)
 391              		.loc 1 586 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396              	.LVL16:
 590:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_UsingFixedFunction) */
 397              		.loc 1 590 0
 398 0000 014B     		ldr	r3, .L34
 399 0002 1880     		strh	r0, [r3]	@ movhi
 400 0004 7047     		bx	lr
 401              	.L35:
 402 0006 00BF     		.align	2
 403              	.L34:
 404 0008 74680040 		.word	1073768564
 405              		.cfi_endproc
 406              	.LFE9:
 407              		.size	PWM_X_WriteCompare2, .-PWM_X_WriteCompare2
 408              		.section	.text.PWM_X_SetInterruptMode,"ax",%progbits
 409              		.align	1
 410              		.global	PWM_X_SetInterruptMode
 411              		.thumb
 412              		.thumb_func
 413              		.type	PWM_X_SetInterruptMode, %function
 414              	PWM_X_SetInterruptMode:
 415              	.LFB10:
 685:Generated_Source\PSoC5/PWM_X.c ****         CY_SET_REG8(PWM_X_STATUS_MASK_PTR, interruptMode);
 416              		.loc 1 685 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 421              	.LVL17:
 686:Generated_Source\PSoC5/PWM_X.c ****     }
 422              		.loc 1 686 0
 423 0000 014B     		ldr	r3, .L37
 424 0002 1870     		strb	r0, [r3]
 425 0004 7047     		bx	lr
 426              	.L38:
 427 0006 00BF     		.align	2
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 23


 428              	.L37:
 429 0008 8B640040 		.word	1073767563
 430              		.cfi_endproc
 431              	.LFE10:
 432              		.size	PWM_X_SetInterruptMode, .-PWM_X_SetInterruptMode
 433              		.section	.text.PWM_X_ReadStatusRegister,"ax",%progbits
 434              		.align	1
 435              		.global	PWM_X_ReadStatusRegister
 436              		.thumb
 437              		.thumb_func
 438              		.type	PWM_X_ReadStatusRegister, %function
 439              	PWM_X_ReadStatusRegister:
 440              	.LFB11:
 712:Generated_Source\PSoC5/PWM_X.c ****         return (CY_GET_REG8(PWM_X_STATUS_PTR));
 441              		.loc 1 712 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 713:Generated_Source\PSoC5/PWM_X.c ****     }
 446              		.loc 1 713 0
 447 0000 014B     		ldr	r3, .L40
 448 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/PWM_X.c **** 
 449              		.loc 1 714 0
 450 0004 7047     		bx	lr
 451              	.L41:
 452 0006 00BF     		.align	2
 453              	.L40:
 454 0008 6B640040 		.word	1073767531
 455              		.cfi_endproc
 456              	.LFE11:
 457              		.size	PWM_X_ReadStatusRegister, .-PWM_X_ReadStatusRegister
 458              		.section	.text.PWM_X_ReadControlRegister,"ax",%progbits
 459              		.align	1
 460              		.global	PWM_X_ReadControlRegister
 461              		.thumb
 462              		.thumb_func
 463              		.type	PWM_X_ReadControlRegister, %function
 464              	PWM_X_ReadControlRegister:
 465              	.LFB12:
 738:Generated_Source\PSoC5/PWM_X.c ****         uint8 result;
 466              		.loc 1 738 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 741:Generated_Source\PSoC5/PWM_X.c ****         return (result);
 471              		.loc 1 741 0
 472 0000 014B     		ldr	r3, .L43
 473 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 474              	.LVL18:
 743:Generated_Source\PSoC5/PWM_X.c **** 
 475              		.loc 1 743 0
 476 0004 7047     		bx	lr
 477              	.L44:
 478 0006 00BF     		.align	2
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 24


 479              	.L43:
 480 0008 7B640040 		.word	1073767547
 481              		.cfi_endproc
 482              	.LFE12:
 483              		.size	PWM_X_ReadControlRegister, .-PWM_X_ReadControlRegister
 484              		.section	.text.PWM_X_WriteControlRegister,"ax",%progbits
 485              		.align	1
 486              		.global	PWM_X_WriteControlRegister
 487              		.thumb
 488              		.thumb_func
 489              		.type	PWM_X_WriteControlRegister, %function
 490              	PWM_X_WriteControlRegister:
 491              	.LFB13:
 766:Generated_Source\PSoC5/PWM_X.c ****         CY_SET_REG8(PWM_X_CONTROL_PTR, control);
 492              		.loc 1 766 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496              		@ link register save eliminated.
 497              	.LVL19:
 767:Generated_Source\PSoC5/PWM_X.c ****     }
 498              		.loc 1 767 0
 499 0000 014B     		ldr	r3, .L46
 500 0002 1870     		strb	r0, [r3]
 501 0004 7047     		bx	lr
 502              	.L47:
 503 0006 00BF     		.align	2
 504              	.L46:
 505 0008 7B640040 		.word	1073767547
 506              		.cfi_endproc
 507              	.LFE13:
 508              		.size	PWM_X_WriteControlRegister, .-PWM_X_WriteControlRegister
 509              		.section	.text.PWM_X_ReadCapture,"ax",%progbits
 510              		.align	1
 511              		.global	PWM_X_ReadCapture
 512              		.thumb
 513              		.thumb_func
 514              		.type	PWM_X_ReadCapture, %function
 515              	PWM_X_ReadCapture:
 516              	.LFB14:
 791:Generated_Source\PSoC5/PWM_X.c ****         return (CY_GET_REG16(PWM_X_CAPTURE_LSB_PTR));
 517              		.loc 1 791 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 522              		.loc 1 792 0
 523 0000 014B     		ldr	r3, .L49
 524 0002 1888     		ldrh	r0, [r3]
 793:Generated_Source\PSoC5/PWM_X.c ****     }
 525              		.loc 1 793 0
 526 0004 80B2     		uxth	r0, r0
 527 0006 7047     		bx	lr
 528              	.L50:
 529              		.align	2
 530              	.L49:
 531 0008 B4680040 		.word	1073768628
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 25


 532              		.cfi_endproc
 533              	.LFE14:
 534              		.size	PWM_X_ReadCapture, .-PWM_X_ReadCapture
 535              		.section	.text.PWM_X_ReadCompare1,"ax",%progbits
 536              		.align	1
 537              		.global	PWM_X_ReadCompare1
 538              		.thumb
 539              		.thumb_func
 540              		.type	PWM_X_ReadCompare1, %function
 541              	PWM_X_ReadCompare1:
 542              	.LFB15:
 794:Generated_Source\PSoC5/PWM_X.c **** 
 795:Generated_Source\PSoC5/PWM_X.c **** #endif /* (!PWM_X_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_X.c **** 
 797:Generated_Source\PSoC5/PWM_X.c **** 
 798:Generated_Source\PSoC5/PWM_X.c **** #if (PWM_X_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_X.c **** 
 800:Generated_Source\PSoC5/PWM_X.c **** 
 801:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_ReadCompare
 803:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_X.c ****     *
 805:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_X.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_X.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_X.c ****     *
 809:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_X.c ****     *  None
 811:Generated_Source\PSoC5/PWM_X.c ****     *
 812:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_X.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_X.c ****     *
 815:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_X.c ****     uint16 PWM_X_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_X.c ****     {
 818:Generated_Source\PSoC5/PWM_X.c ****         #if(PWM_X_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_X.c ****             return ((uint16)CY_GET_REG16(PWM_X_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_X.c ****         #else
 821:Generated_Source\PSoC5/PWM_X.c ****             return (CY_GET_REG16(PWM_X_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM_X.c ****         #endif /* (PWM_X_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_X.c ****     }
 824:Generated_Source\PSoC5/PWM_X.c **** 
 825:Generated_Source\PSoC5/PWM_X.c **** #else
 826:Generated_Source\PSoC5/PWM_X.c **** 
 827:Generated_Source\PSoC5/PWM_X.c **** 
 828:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_ReadCompare1
 830:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_X.c ****     *
 832:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_X.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_X.c ****     *
 835:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_X.c ****     *  None
 837:Generated_Source\PSoC5/PWM_X.c ****     *
 838:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_X.c ****     *  uint8/uint16: Current compare value.
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 26


 840:Generated_Source\PSoC5/PWM_X.c ****     *
 841:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_X.c ****     uint16 PWM_X_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_X.c ****     {
 543              		.loc 1 843 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 844:Generated_Source\PSoC5/PWM_X.c ****         return (CY_GET_REG16(PWM_X_COMPARE1_LSB_PTR));
 548              		.loc 1 844 0
 549 0000 014B     		ldr	r3, .L52
 550 0002 1888     		ldrh	r0, [r3]
 845:Generated_Source\PSoC5/PWM_X.c ****     }
 551              		.loc 1 845 0
 552 0004 80B2     		uxth	r0, r0
 553 0006 7047     		bx	lr
 554              	.L53:
 555              		.align	2
 556              	.L52:
 557 0008 54680040 		.word	1073768532
 558              		.cfi_endproc
 559              	.LFE15:
 560              		.size	PWM_X_ReadCompare1, .-PWM_X_ReadCompare1
 561              		.section	.text.PWM_X_ReadCompare2,"ax",%progbits
 562              		.align	1
 563              		.global	PWM_X_ReadCompare2
 564              		.thumb
 565              		.thumb_func
 566              		.type	PWM_X_ReadCompare2, %function
 567              	PWM_X_ReadCompare2:
 568              	.LFB16:
 846:Generated_Source\PSoC5/PWM_X.c **** 
 847:Generated_Source\PSoC5/PWM_X.c **** 
 848:Generated_Source\PSoC5/PWM_X.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_X.c ****     * Function Name: PWM_X_ReadCompare2
 850:Generated_Source\PSoC5/PWM_X.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_X.c ****     *
 852:Generated_Source\PSoC5/PWM_X.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_X.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_X.c ****     *
 855:Generated_Source\PSoC5/PWM_X.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_X.c ****     *  None
 857:Generated_Source\PSoC5/PWM_X.c ****     *
 858:Generated_Source\PSoC5/PWM_X.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_X.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_X.c ****     *
 861:Generated_Source\PSoC5/PWM_X.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_X.c ****     uint16 PWM_X_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_X.c ****     {
 569              		.loc 1 863 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 864:Generated_Source\PSoC5/PWM_X.c ****         return (CY_GET_REG16(PWM_X_COMPARE2_LSB_PTR));
 574              		.loc 1 864 0
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 27


 575 0000 014B     		ldr	r3, .L55
 576 0002 1888     		ldrh	r0, [r3]
 865:Generated_Source\PSoC5/PWM_X.c ****     }
 577              		.loc 1 865 0
 578 0004 80B2     		uxth	r0, r0
 579 0006 7047     		bx	lr
 580              	.L56:
 581              		.align	2
 582              	.L55:
 583 0008 74680040 		.word	1073768564
 584              		.cfi_endproc
 585              	.LFE16:
 586              		.size	PWM_X_ReadCompare2, .-PWM_X_ReadCompare2
 587              		.section	.text.PWM_X_ReadPeriod,"ax",%progbits
 588              		.align	1
 589              		.global	PWM_X_ReadPeriod
 590              		.thumb
 591              		.thumb_func
 592              		.type	PWM_X_ReadPeriod, %function
 593              	PWM_X_ReadPeriod:
 594              	.LFB17:
 866:Generated_Source\PSoC5/PWM_X.c **** 
 867:Generated_Source\PSoC5/PWM_X.c **** #endif /* (PWM_X_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_X.c **** 
 869:Generated_Source\PSoC5/PWM_X.c **** 
 870:Generated_Source\PSoC5/PWM_X.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_X.c **** * Function Name: PWM_X_ReadPeriod
 872:Generated_Source\PSoC5/PWM_X.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_X.c **** *
 874:Generated_Source\PSoC5/PWM_X.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_X.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_X.c **** *
 877:Generated_Source\PSoC5/PWM_X.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_X.c **** *  None
 879:Generated_Source\PSoC5/PWM_X.c **** *
 880:Generated_Source\PSoC5/PWM_X.c **** * Return:
 881:Generated_Source\PSoC5/PWM_X.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_X.c **** *
 883:Generated_Source\PSoC5/PWM_X.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_X.c **** uint16 PWM_X_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_X.c **** {
 595              		.loc 1 885 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 886:Generated_Source\PSoC5/PWM_X.c ****     #if(PWM_X_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_X.c ****         return ((uint16)CY_GET_REG16(PWM_X_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_X.c ****     #else
 889:Generated_Source\PSoC5/PWM_X.c ****         return (CY_GET_REG16(PWM_X_PERIOD_LSB_PTR));
 600              		.loc 1 889 0
 601 0000 014B     		ldr	r3, .L58
 602 0002 1888     		ldrh	r0, [r3]
 890:Generated_Source\PSoC5/PWM_X.c ****     #endif /* (PWM_X_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_X.c **** }
 603              		.loc 1 891 0
 604 0004 80B2     		uxth	r0, r0
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 28


 605 0006 7047     		bx	lr
 606              	.L59:
 607              		.align	2
 608              	.L58:
 609 0008 94680040 		.word	1073768596
 610              		.cfi_endproc
 611              	.LFE17:
 612              		.size	PWM_X_ReadPeriod, .-PWM_X_ReadPeriod
 613              		.global	PWM_X_initVar
 614              		.bss
 615              		.set	.LANCHOR0,. + 0
 616              		.type	PWM_X_initVar, %object
 617              		.size	PWM_X_initVar, 1
 618              	PWM_X_initVar:
 619 0000 00       		.space	1
 620              		.text
 621              	.Letext0:
 622              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 623              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 624              		.section	.debug_info,"",%progbits
 625              	.Ldebug_info0:
 626 0000 34040000 		.4byte	0x434
 627 0004 0400     		.2byte	0x4
 628 0006 00000000 		.4byte	.Ldebug_abbrev0
 629 000a 04       		.byte	0x4
 630 000b 01       		.uleb128 0x1
 631 000c DF000000 		.4byte	.LASF44
 632 0010 0C       		.byte	0xc
 633 0011 8C020000 		.4byte	.LASF45
 634 0015 35020000 		.4byte	.LASF46
 635 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 636 001d 00000000 		.4byte	0
 637 0021 00000000 		.4byte	.Ldebug_line0
 638 0025 02       		.uleb128 0x2
 639 0026 01       		.byte	0x1
 640 0027 06       		.byte	0x6
 641 0028 41030000 		.4byte	.LASF0
 642 002c 02       		.uleb128 0x2
 643 002d 01       		.byte	0x1
 644 002e 08       		.byte	0x8
 645 002f 7B010000 		.4byte	.LASF1
 646 0033 02       		.uleb128 0x2
 647 0034 02       		.byte	0x2
 648 0035 05       		.byte	0x5
 649 0036 A2010000 		.4byte	.LASF2
 650 003a 02       		.uleb128 0x2
 651 003b 02       		.byte	0x2
 652 003c 07       		.byte	0x7
 653 003d 5D000000 		.4byte	.LASF3
 654 0041 02       		.uleb128 0x2
 655 0042 04       		.byte	0x4
 656 0043 05       		.byte	0x5
 657 0044 27030000 		.4byte	.LASF4
 658 0048 02       		.uleb128 0x2
 659 0049 04       		.byte	0x4
 660 004a 07       		.byte	0x7
 661 004b E1010000 		.4byte	.LASF5
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 29


 662 004f 02       		.uleb128 0x2
 663 0050 08       		.byte	0x8
 664 0051 05       		.byte	0x5
 665 0052 C9020000 		.4byte	.LASF6
 666 0056 02       		.uleb128 0x2
 667 0057 08       		.byte	0x8
 668 0058 07       		.byte	0x7
 669 0059 89000000 		.4byte	.LASF7
 670 005d 03       		.uleb128 0x3
 671 005e 04       		.byte	0x4
 672 005f 05       		.byte	0x5
 673 0060 696E7400 		.ascii	"int\000"
 674 0064 02       		.uleb128 0x2
 675 0065 04       		.byte	0x4
 676 0066 07       		.byte	0x7
 677 0067 F3010000 		.4byte	.LASF8
 678 006b 04       		.uleb128 0x4
 679 006c 6D010000 		.4byte	.LASF9
 680 0070 02       		.byte	0x2
 681 0071 E401     		.2byte	0x1e4
 682 0073 2C000000 		.4byte	0x2c
 683 0077 04       		.uleb128 0x4
 684 0078 AC010000 		.4byte	.LASF10
 685 007c 02       		.byte	0x2
 686 007d E501     		.2byte	0x1e5
 687 007f 3A000000 		.4byte	0x3a
 688 0083 02       		.uleb128 0x2
 689 0084 04       		.byte	0x4
 690 0085 04       		.byte	0x4
 691 0086 7B000000 		.4byte	.LASF11
 692 008a 02       		.uleb128 0x2
 693 008b 08       		.byte	0x8
 694 008c 04       		.byte	0x4
 695 008d 89010000 		.4byte	.LASF12
 696 0091 02       		.uleb128 0x2
 697 0092 01       		.byte	0x1
 698 0093 08       		.byte	0x8
 699 0094 30030000 		.4byte	.LASF13
 700 0098 04       		.uleb128 0x4
 701 0099 DA000000 		.4byte	.LASF14
 702 009d 02       		.byte	0x2
 703 009e 8E02     		.2byte	0x28e
 704 00a0 A4000000 		.4byte	0xa4
 705 00a4 05       		.uleb128 0x5
 706 00a5 6B000000 		.4byte	0x6b
 707 00a9 04       		.uleb128 0x4
 708 00aa 00000000 		.4byte	.LASF15
 709 00ae 02       		.byte	0x2
 710 00af 8F02     		.2byte	0x28f
 711 00b1 B5000000 		.4byte	0xb5
 712 00b5 05       		.uleb128 0x5
 713 00b6 77000000 		.4byte	0x77
 714 00ba 02       		.uleb128 0x2
 715 00bb 08       		.byte	0x8
 716 00bc 04       		.byte	0x4
 717 00bd 35030000 		.4byte	.LASF16
 718 00c1 02       		.uleb128 0x2
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 30


 719 00c2 04       		.byte	0x4
 720 00c3 07       		.byte	0x7
 721 00c4 AB020000 		.4byte	.LASF17
 722 00c8 06       		.uleb128 0x6
 723 00c9 8A030000 		.4byte	.LASF18
 724 00cd 01       		.byte	0x1
 725 00ce 1603     		.2byte	0x316
 726 00d0 77000000 		.4byte	0x77
 727 00d4 01       		.byte	0x1
 728 00d5 06       		.uleb128 0x6
 729 00d6 F2020000 		.4byte	.LASF19
 730 00da 01       		.byte	0x1
 731 00db C702     		.2byte	0x2c7
 732 00dd 6B000000 		.4byte	0x6b
 733 00e1 01       		.byte	0x1
 734 00e2 07       		.uleb128 0x7
 735 00e3 B3010000 		.4byte	.LASF20
 736 00e7 01       		.byte	0x1
 737 00e8 AC02     		.2byte	0x2ac
 738 00ea 01       		.byte	0x1
 739 00eb FC000000 		.4byte	0xfc
 740 00ef 08       		.uleb128 0x8
 741 00f0 D7020000 		.4byte	.LASF22
 742 00f4 01       		.byte	0x1
 743 00f5 AC02     		.2byte	0x2ac
 744 00f7 6B000000 		.4byte	0x6b
 745 00fb 00       		.byte	0
 746 00fc 07       		.uleb128 0x7
 747 00fd C6000000 		.4byte	.LASF21
 748 0101 01       		.byte	0x1
 749 0102 4802     		.2byte	0x248
 750 0104 01       		.byte	0x1
 751 0105 16010000 		.4byte	0x116
 752 0109 08       		.uleb128 0x8
 753 010a 4D030000 		.4byte	.LASF23
 754 010e 01       		.byte	0x1
 755 010f 4802     		.2byte	0x248
 756 0111 77000000 		.4byte	0x77
 757 0115 00       		.byte	0
 758 0116 07       		.uleb128 0x7
 759 0117 B2000000 		.4byte	.LASF24
 760 011b 01       		.byte	0x1
 761 011c 2B02     		.2byte	0x22b
 762 011e 01       		.byte	0x1
 763 011f 30010000 		.4byte	0x130
 764 0123 08       		.uleb128 0x8
 765 0124 4D030000 		.4byte	.LASF23
 766 0128 01       		.byte	0x1
 767 0129 2B02     		.2byte	0x22b
 768 012b 77000000 		.4byte	0x77
 769 012f 00       		.byte	0
 770 0130 07       		.uleb128 0x7
 771 0131 90010000 		.4byte	.LASF25
 772 0135 01       		.byte	0x1
 773 0136 E201     		.2byte	0x1e2
 774 0138 01       		.byte	0x1
 775 0139 4A010000 		.4byte	0x14a
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 31


 776 013d 08       		.uleb128 0x8
 777 013e 56000000 		.4byte	.LASF26
 778 0142 01       		.byte	0x1
 779 0143 E201     		.2byte	0x1e2
 780 0145 77000000 		.4byte	0x77
 781 0149 00       		.byte	0
 782 014a 07       		.uleb128 0x7
 783 014b 06000000 		.4byte	.LASF27
 784 014f 01       		.byte	0x1
 785 0150 9301     		.2byte	0x193
 786 0152 01       		.byte	0x1
 787 0153 64010000 		.4byte	0x164
 788 0157 08       		.uleb128 0x8
 789 0158 81000000 		.4byte	.LASF28
 790 015c 01       		.byte	0x1
 791 015d 9301     		.2byte	0x193
 792 015f 77000000 		.4byte	0x77
 793 0163 00       		.byte	0
 794 0164 09       		.uleb128 0x9
 795 0165 E5020000 		.4byte	.LASF29
 796 0169 01       		.byte	0x1
 797 016a C7       		.byte	0xc7
 798 016b 00000000 		.4byte	.LFB2
 799 016f 10000000 		.4byte	.LFE2-.LFB2
 800 0173 01       		.uleb128 0x1
 801 0174 9C       		.byte	0x9c
 802 0175 09       		.uleb128 0x9
 803 0176 70000000 		.4byte	.LASF30
 804 017a 01       		.byte	0x1
 805 017b E9       		.byte	0xe9
 806 017c 00000000 		.4byte	.LFB3
 807 0180 10000000 		.4byte	.LFE3-.LFB3
 808 0184 01       		.uleb128 0x1
 809 0185 9C       		.byte	0x9c
 810 0186 0A       		.uleb128 0xa
 811 0187 4A010000 		.4byte	0x14a
 812 018b 00000000 		.4byte	.LFB4
 813 018f 0C000000 		.4byte	.LFE4-.LFB4
 814 0193 01       		.uleb128 0x1
 815 0194 9C       		.byte	0x9c
 816 0195 A1010000 		.4byte	0x1a1
 817 0199 0B       		.uleb128 0xb
 818 019a 57010000 		.4byte	0x157
 819 019e 01       		.uleb128 0x1
 820 019f 50       		.byte	0x50
 821 01a0 00       		.byte	0
 822 01a1 0C       		.uleb128 0xc
 823 01a2 A0000000 		.4byte	.LASF38
 824 01a6 01       		.byte	0x1
 825 01a7 A901     		.2byte	0x1a9
 826 01a9 77000000 		.4byte	0x77
 827 01ad 00000000 		.4byte	.LFB5
 828 01b1 14000000 		.4byte	.LFE5-.LFB5
 829 01b5 01       		.uleb128 0x1
 830 01b6 9C       		.byte	0x9c
 831 01b7 0D       		.uleb128 0xd
 832 01b8 19000000 		.4byte	.LASF31
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 32


 833 01bc 01       		.byte	0x1
 834 01bd C501     		.2byte	0x1c5
 835 01bf 00000000 		.4byte	.LFB6
 836 01c3 18000000 		.4byte	.LFE6-.LFB6
 837 01c7 01       		.uleb128 0x1
 838 01c8 9C       		.byte	0x9c
 839 01c9 EE010000 		.4byte	0x1ee
 840 01cd 0E       		.uleb128 0xe
 841 01ce D5000000 		.4byte	0xd5
 842 01d2 00000000 		.4byte	.LBB16
 843 01d6 00000000 		.4byte	.Ldebug_ranges0+0
 844 01da 01       		.byte	0x1
 845 01db C701     		.2byte	0x1c7
 846 01dd 0E       		.uleb128 0xe
 847 01de C8000000 		.4byte	0xc8
 848 01e2 02000000 		.4byte	.LBB19
 849 01e6 18000000 		.4byte	.Ldebug_ranges0+0x18
 850 01ea 01       		.byte	0x1
 851 01eb C901     		.2byte	0x1c9
 852 01ed 00       		.byte	0
 853 01ee 0F       		.uleb128 0xf
 854 01ef 1C030000 		.4byte	.LASF32
 855 01f3 01       		.byte	0x1
 856 01f4 54       		.byte	0x54
 857 01f5 00000000 		.4byte	.LFB1
 858 01f9 6C000000 		.4byte	.LFE1-.LFB1
 859 01fd 01       		.uleb128 0x1
 860 01fe 9C       		.byte	0x9c
 861 01ff CE020000 		.4byte	0x2ce
 862 0203 10       		.uleb128 0x10
 863 0204 17030000 		.4byte	.LASF33
 864 0208 01       		.byte	0x1
 865 0209 57       		.byte	0x57
 866 020a 6B000000 		.4byte	0x6b
 867 020e 00000000 		.4byte	.LLST0
 868 0212 10       		.uleb128 0x10
 869 0213 B4020000 		.4byte	.LASF34
 870 0217 01       		.byte	0x1
 871 0218 5D       		.byte	0x5d
 872 0219 6B000000 		.4byte	0x6b
 873 021d 18000000 		.4byte	.LLST1
 874 0221 11       		.uleb128 0x11
 875 0222 E2000000 		.4byte	0xe2
 876 0226 08000000 		.4byte	.LBB24
 877 022a 30000000 		.4byte	.Ldebug_ranges0+0x30
 878 022e 01       		.byte	0x1
 879 022f 9A       		.byte	0x9a
 880 0230 3E020000 		.4byte	0x23e
 881 0234 12       		.uleb128 0x12
 882 0235 EF000000 		.4byte	0xef
 883 0239 2B000000 		.4byte	.LLST2
 884 023d 00       		.byte	0
 885 023e 13       		.uleb128 0x13
 886 023f 4A010000 		.4byte	0x14a
 887 0243 26000000 		.4byte	.LBB27
 888 0247 08000000 		.4byte	.LBE27-.LBB27
 889 024b 01       		.byte	0x1
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 33


 890 024c 85       		.byte	0x85
 891 024d 5B020000 		.4byte	0x25b
 892 0251 12       		.uleb128 0x12
 893 0252 57010000 		.4byte	0x157
 894 0256 3F000000 		.4byte	.LLST3
 895 025a 00       		.byte	0
 896 025b 13       		.uleb128 0x13
 897 025c 30010000 		.4byte	0x130
 898 0260 2E000000 		.4byte	.LBB29
 899 0264 04000000 		.4byte	.LBE29-.LBB29
 900 0268 01       		.byte	0x1
 901 0269 88       		.byte	0x88
 902 026a 78020000 		.4byte	0x278
 903 026e 12       		.uleb128 0x12
 904 026f 3D010000 		.4byte	0x13d
 905 0273 55000000 		.4byte	.LLST4
 906 0277 00       		.byte	0
 907 0278 13       		.uleb128 0x13
 908 0279 16010000 		.4byte	0x116
 909 027d 32000000 		.4byte	.LBB31
 910 0281 08000000 		.4byte	.LBE31-.LBB31
 911 0285 01       		.byte	0x1
 912 0286 8D       		.byte	0x8d
 913 0287 95020000 		.4byte	0x295
 914 028b 12       		.uleb128 0x12
 915 028c 23010000 		.4byte	0x123
 916 0290 6B000000 		.4byte	.LLST5
 917 0294 00       		.byte	0
 918 0295 13       		.uleb128 0x13
 919 0296 FC000000 		.4byte	0xfc
 920 029a 3A000000 		.4byte	.LBB33
 921 029e 06000000 		.4byte	.LBE33-.LBB33
 922 02a2 01       		.byte	0x1
 923 02a3 8E       		.byte	0x8e
 924 02a4 B2020000 		.4byte	0x2b2
 925 02a8 12       		.uleb128 0x12
 926 02a9 09010000 		.4byte	0x109
 927 02ad 81000000 		.4byte	.LLST6
 928 02b1 00       		.byte	0
 929 02b2 14       		.uleb128 0x14
 930 02b3 4A000000 		.4byte	.LVL9
 931 02b7 21040000 		.4byte	0x421
 932 02bb 14       		.uleb128 0x14
 933 02bc 56000000 		.4byte	.LVL10
 934 02c0 2C040000 		.4byte	0x42c
 935 02c4 15       		.uleb128 0x15
 936 02c5 5E000000 		.4byte	.LVL11
 937 02c9 B7010000 		.4byte	0x1b7
 938 02cd 00       		.byte	0
 939 02ce 0F       		.uleb128 0xf
 940 02cf 0B030000 		.4byte	.LASF35
 941 02d3 01       		.byte	0x1
 942 02d4 37       		.byte	0x37
 943 02d5 00000000 		.4byte	.LFB0
 944 02d9 1C000000 		.4byte	.LFE0-.LFB0
 945 02dd 01       		.uleb128 0x1
 946 02de 9C       		.byte	0x9c
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 34


 947 02df F6020000 		.4byte	0x2f6
 948 02e3 14       		.uleb128 0x14
 949 02e4 0C000000 		.4byte	.LVL12
 950 02e8 EE010000 		.4byte	0x1ee
 951 02ec 15       		.uleb128 0x15
 952 02ed 18000000 		.4byte	.LVL13
 953 02f1 64010000 		.4byte	0x164
 954 02f5 00       		.byte	0
 955 02f6 0A       		.uleb128 0xa
 956 02f7 30010000 		.4byte	0x130
 957 02fb 00000000 		.4byte	.LFB7
 958 02ff 0C000000 		.4byte	.LFE7-.LFB7
 959 0303 01       		.uleb128 0x1
 960 0304 9C       		.byte	0x9c
 961 0305 11030000 		.4byte	0x311
 962 0309 0B       		.uleb128 0xb
 963 030a 3D010000 		.4byte	0x13d
 964 030e 01       		.uleb128 0x1
 965 030f 50       		.byte	0x50
 966 0310 00       		.byte	0
 967 0311 0A       		.uleb128 0xa
 968 0312 16010000 		.4byte	0x116
 969 0316 00000000 		.4byte	.LFB8
 970 031a 0C000000 		.4byte	.LFE8-.LFB8
 971 031e 01       		.uleb128 0x1
 972 031f 9C       		.byte	0x9c
 973 0320 2C030000 		.4byte	0x32c
 974 0324 0B       		.uleb128 0xb
 975 0325 23010000 		.4byte	0x123
 976 0329 01       		.uleb128 0x1
 977 032a 50       		.byte	0x50
 978 032b 00       		.byte	0
 979 032c 0A       		.uleb128 0xa
 980 032d FC000000 		.4byte	0xfc
 981 0331 00000000 		.4byte	.LFB9
 982 0335 0C000000 		.4byte	.LFE9-.LFB9
 983 0339 01       		.uleb128 0x1
 984 033a 9C       		.byte	0x9c
 985 033b 47030000 		.4byte	0x347
 986 033f 0B       		.uleb128 0xb
 987 0340 09010000 		.4byte	0x109
 988 0344 01       		.uleb128 0x1
 989 0345 50       		.byte	0x50
 990 0346 00       		.byte	0
 991 0347 0A       		.uleb128 0xa
 992 0348 E2000000 		.4byte	0xe2
 993 034c 00000000 		.4byte	.LFB10
 994 0350 0C000000 		.4byte	.LFE10-.LFB10
 995 0354 01       		.uleb128 0x1
 996 0355 9C       		.byte	0x9c
 997 0356 62030000 		.4byte	0x362
 998 035a 0B       		.uleb128 0xb
 999 035b EF000000 		.4byte	0xef
 1000 035f 01       		.uleb128 0x1
 1001 0360 50       		.byte	0x50
 1002 0361 00       		.byte	0
 1003 0362 16       		.uleb128 0x16
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 35


 1004 0363 D5000000 		.4byte	0xd5
 1005 0367 00000000 		.4byte	.LFB11
 1006 036b 0C000000 		.4byte	.LFE11-.LFB11
 1007 036f 01       		.uleb128 0x1
 1008 0370 9C       		.byte	0x9c
 1009 0371 17       		.uleb128 0x17
 1010 0372 55030000 		.4byte	.LASF47
 1011 0376 01       		.byte	0x1
 1012 0377 E102     		.2byte	0x2e1
 1013 0379 6B000000 		.4byte	0x6b
 1014 037d 00000000 		.4byte	.LFB12
 1015 0381 0C000000 		.4byte	.LFE12-.LFB12
 1016 0385 01       		.uleb128 0x1
 1017 0386 9C       		.byte	0x9c
 1018 0387 9A030000 		.4byte	0x39a
 1019 038b 18       		.uleb128 0x18
 1020 038c 29000000 		.4byte	.LASF36
 1021 0390 01       		.byte	0x1
 1022 0391 E302     		.2byte	0x2e3
 1023 0393 6B000000 		.4byte	0x6b
 1024 0397 01       		.uleb128 0x1
 1025 0398 50       		.byte	0x50
 1026 0399 00       		.byte	0
 1027 039a 0D       		.uleb128 0xd
 1028 039b 6F030000 		.4byte	.LASF37
 1029 039f 01       		.byte	0x1
 1030 03a0 FD02     		.2byte	0x2fd
 1031 03a2 00000000 		.4byte	.LFB13
 1032 03a6 0C000000 		.4byte	.LFE13-.LFB13
 1033 03aa 01       		.uleb128 0x1
 1034 03ab 9C       		.byte	0x9c
 1035 03ac BF030000 		.4byte	0x3bf
 1036 03b0 19       		.uleb128 0x19
 1037 03b1 73010000 		.4byte	.LASF48
 1038 03b5 01       		.byte	0x1
 1039 03b6 FD02     		.2byte	0x2fd
 1040 03b8 6B000000 		.4byte	0x6b
 1041 03bc 01       		.uleb128 0x1
 1042 03bd 50       		.byte	0x50
 1043 03be 00       		.byte	0
 1044 03bf 16       		.uleb128 0x16
 1045 03c0 C8000000 		.4byte	0xc8
 1046 03c4 00000000 		.4byte	.LFB14
 1047 03c8 0C000000 		.4byte	.LFE14-.LFB14
 1048 03cc 01       		.uleb128 0x1
 1049 03cd 9C       		.byte	0x9c
 1050 03ce 0C       		.uleb128 0xc
 1051 03cf 30000000 		.4byte	.LASF39
 1052 03d3 01       		.byte	0x1
 1053 03d4 4A03     		.2byte	0x34a
 1054 03d6 77000000 		.4byte	0x77
 1055 03da 00000000 		.4byte	.LFB15
 1056 03de 0C000000 		.4byte	.LFE15-.LFB15
 1057 03e2 01       		.uleb128 0x1
 1058 03e3 9C       		.byte	0x9c
 1059 03e4 0C       		.uleb128 0xc
 1060 03e5 43000000 		.4byte	.LASF40
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 36


 1061 03e9 01       		.byte	0x1
 1062 03ea 5E03     		.2byte	0x35e
 1063 03ec 77000000 		.4byte	0x77
 1064 03f0 00000000 		.4byte	.LFB16
 1065 03f4 0C000000 		.4byte	.LFE16-.LFB16
 1066 03f8 01       		.uleb128 0x1
 1067 03f9 9C       		.byte	0x9c
 1068 03fa 0C       		.uleb128 0xc
 1069 03fb 16020000 		.4byte	.LASF41
 1070 03ff 01       		.byte	0x1
 1071 0400 7403     		.2byte	0x374
 1072 0402 77000000 		.4byte	0x77
 1073 0406 00000000 		.4byte	.LFB17
 1074 040a 0C000000 		.4byte	.LFE17-.LFB17
 1075 040e 01       		.uleb128 0x1
 1076 040f 9C       		.byte	0x9c
 1077 0410 1A       		.uleb128 0x1a
 1078 0411 27020000 		.4byte	.LASF49
 1079 0415 01       		.byte	0x1
 1080 0416 20       		.byte	0x20
 1081 0417 6B000000 		.4byte	0x6b
 1082 041b 05       		.uleb128 0x5
 1083 041c 03       		.byte	0x3
 1084 041d 00000000 		.4byte	PWM_X_initVar
 1085 0421 1B       		.uleb128 0x1b
 1086 0422 CA010000 		.4byte	.LASF42
 1087 0426 CA010000 		.4byte	.LASF42
 1088 042a 03       		.byte	0x3
 1089 042b 7D       		.byte	0x7d
 1090 042c 1B       		.uleb128 0x1b
 1091 042d 00020000 		.4byte	.LASF43
 1092 0431 00020000 		.4byte	.LASF43
 1093 0435 03       		.byte	0x3
 1094 0436 7E       		.byte	0x7e
 1095 0437 00       		.byte	0
 1096              		.section	.debug_abbrev,"",%progbits
 1097              	.Ldebug_abbrev0:
 1098 0000 01       		.uleb128 0x1
 1099 0001 11       		.uleb128 0x11
 1100 0002 01       		.byte	0x1
 1101 0003 25       		.uleb128 0x25
 1102 0004 0E       		.uleb128 0xe
 1103 0005 13       		.uleb128 0x13
 1104 0006 0B       		.uleb128 0xb
 1105 0007 03       		.uleb128 0x3
 1106 0008 0E       		.uleb128 0xe
 1107 0009 1B       		.uleb128 0x1b
 1108 000a 0E       		.uleb128 0xe
 1109 000b 55       		.uleb128 0x55
 1110 000c 17       		.uleb128 0x17
 1111 000d 11       		.uleb128 0x11
 1112 000e 01       		.uleb128 0x1
 1113 000f 10       		.uleb128 0x10
 1114 0010 17       		.uleb128 0x17
 1115 0011 00       		.byte	0
 1116 0012 00       		.byte	0
 1117 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 37


 1118 0014 24       		.uleb128 0x24
 1119 0015 00       		.byte	0
 1120 0016 0B       		.uleb128 0xb
 1121 0017 0B       		.uleb128 0xb
 1122 0018 3E       		.uleb128 0x3e
 1123 0019 0B       		.uleb128 0xb
 1124 001a 03       		.uleb128 0x3
 1125 001b 0E       		.uleb128 0xe
 1126 001c 00       		.byte	0
 1127 001d 00       		.byte	0
 1128 001e 03       		.uleb128 0x3
 1129 001f 24       		.uleb128 0x24
 1130 0020 00       		.byte	0
 1131 0021 0B       		.uleb128 0xb
 1132 0022 0B       		.uleb128 0xb
 1133 0023 3E       		.uleb128 0x3e
 1134 0024 0B       		.uleb128 0xb
 1135 0025 03       		.uleb128 0x3
 1136 0026 08       		.uleb128 0x8
 1137 0027 00       		.byte	0
 1138 0028 00       		.byte	0
 1139 0029 04       		.uleb128 0x4
 1140 002a 16       		.uleb128 0x16
 1141 002b 00       		.byte	0
 1142 002c 03       		.uleb128 0x3
 1143 002d 0E       		.uleb128 0xe
 1144 002e 3A       		.uleb128 0x3a
 1145 002f 0B       		.uleb128 0xb
 1146 0030 3B       		.uleb128 0x3b
 1147 0031 05       		.uleb128 0x5
 1148 0032 49       		.uleb128 0x49
 1149 0033 13       		.uleb128 0x13
 1150 0034 00       		.byte	0
 1151 0035 00       		.byte	0
 1152 0036 05       		.uleb128 0x5
 1153 0037 35       		.uleb128 0x35
 1154 0038 00       		.byte	0
 1155 0039 49       		.uleb128 0x49
 1156 003a 13       		.uleb128 0x13
 1157 003b 00       		.byte	0
 1158 003c 00       		.byte	0
 1159 003d 06       		.uleb128 0x6
 1160 003e 2E       		.uleb128 0x2e
 1161 003f 00       		.byte	0
 1162 0040 3F       		.uleb128 0x3f
 1163 0041 19       		.uleb128 0x19
 1164 0042 03       		.uleb128 0x3
 1165 0043 0E       		.uleb128 0xe
 1166 0044 3A       		.uleb128 0x3a
 1167 0045 0B       		.uleb128 0xb
 1168 0046 3B       		.uleb128 0x3b
 1169 0047 05       		.uleb128 0x5
 1170 0048 27       		.uleb128 0x27
 1171 0049 19       		.uleb128 0x19
 1172 004a 49       		.uleb128 0x49
 1173 004b 13       		.uleb128 0x13
 1174 004c 20       		.uleb128 0x20
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 38


 1175 004d 0B       		.uleb128 0xb
 1176 004e 00       		.byte	0
 1177 004f 00       		.byte	0
 1178 0050 07       		.uleb128 0x7
 1179 0051 2E       		.uleb128 0x2e
 1180 0052 01       		.byte	0x1
 1181 0053 3F       		.uleb128 0x3f
 1182 0054 19       		.uleb128 0x19
 1183 0055 03       		.uleb128 0x3
 1184 0056 0E       		.uleb128 0xe
 1185 0057 3A       		.uleb128 0x3a
 1186 0058 0B       		.uleb128 0xb
 1187 0059 3B       		.uleb128 0x3b
 1188 005a 05       		.uleb128 0x5
 1189 005b 27       		.uleb128 0x27
 1190 005c 19       		.uleb128 0x19
 1191 005d 20       		.uleb128 0x20
 1192 005e 0B       		.uleb128 0xb
 1193 005f 01       		.uleb128 0x1
 1194 0060 13       		.uleb128 0x13
 1195 0061 00       		.byte	0
 1196 0062 00       		.byte	0
 1197 0063 08       		.uleb128 0x8
 1198 0064 05       		.uleb128 0x5
 1199 0065 00       		.byte	0
 1200 0066 03       		.uleb128 0x3
 1201 0067 0E       		.uleb128 0xe
 1202 0068 3A       		.uleb128 0x3a
 1203 0069 0B       		.uleb128 0xb
 1204 006a 3B       		.uleb128 0x3b
 1205 006b 05       		.uleb128 0x5
 1206 006c 49       		.uleb128 0x49
 1207 006d 13       		.uleb128 0x13
 1208 006e 00       		.byte	0
 1209 006f 00       		.byte	0
 1210 0070 09       		.uleb128 0x9
 1211 0071 2E       		.uleb128 0x2e
 1212 0072 00       		.byte	0
 1213 0073 3F       		.uleb128 0x3f
 1214 0074 19       		.uleb128 0x19
 1215 0075 03       		.uleb128 0x3
 1216 0076 0E       		.uleb128 0xe
 1217 0077 3A       		.uleb128 0x3a
 1218 0078 0B       		.uleb128 0xb
 1219 0079 3B       		.uleb128 0x3b
 1220 007a 0B       		.uleb128 0xb
 1221 007b 27       		.uleb128 0x27
 1222 007c 19       		.uleb128 0x19
 1223 007d 11       		.uleb128 0x11
 1224 007e 01       		.uleb128 0x1
 1225 007f 12       		.uleb128 0x12
 1226 0080 06       		.uleb128 0x6
 1227 0081 40       		.uleb128 0x40
 1228 0082 18       		.uleb128 0x18
 1229 0083 9742     		.uleb128 0x2117
 1230 0085 19       		.uleb128 0x19
 1231 0086 00       		.byte	0
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 39


 1232 0087 00       		.byte	0
 1233 0088 0A       		.uleb128 0xa
 1234 0089 2E       		.uleb128 0x2e
 1235 008a 01       		.byte	0x1
 1236 008b 31       		.uleb128 0x31
 1237 008c 13       		.uleb128 0x13
 1238 008d 11       		.uleb128 0x11
 1239 008e 01       		.uleb128 0x1
 1240 008f 12       		.uleb128 0x12
 1241 0090 06       		.uleb128 0x6
 1242 0091 40       		.uleb128 0x40
 1243 0092 18       		.uleb128 0x18
 1244 0093 9742     		.uleb128 0x2117
 1245 0095 19       		.uleb128 0x19
 1246 0096 01       		.uleb128 0x1
 1247 0097 13       		.uleb128 0x13
 1248 0098 00       		.byte	0
 1249 0099 00       		.byte	0
 1250 009a 0B       		.uleb128 0xb
 1251 009b 05       		.uleb128 0x5
 1252 009c 00       		.byte	0
 1253 009d 31       		.uleb128 0x31
 1254 009e 13       		.uleb128 0x13
 1255 009f 02       		.uleb128 0x2
 1256 00a0 18       		.uleb128 0x18
 1257 00a1 00       		.byte	0
 1258 00a2 00       		.byte	0
 1259 00a3 0C       		.uleb128 0xc
 1260 00a4 2E       		.uleb128 0x2e
 1261 00a5 00       		.byte	0
 1262 00a6 3F       		.uleb128 0x3f
 1263 00a7 19       		.uleb128 0x19
 1264 00a8 03       		.uleb128 0x3
 1265 00a9 0E       		.uleb128 0xe
 1266 00aa 3A       		.uleb128 0x3a
 1267 00ab 0B       		.uleb128 0xb
 1268 00ac 3B       		.uleb128 0x3b
 1269 00ad 05       		.uleb128 0x5
 1270 00ae 27       		.uleb128 0x27
 1271 00af 19       		.uleb128 0x19
 1272 00b0 49       		.uleb128 0x49
 1273 00b1 13       		.uleb128 0x13
 1274 00b2 11       		.uleb128 0x11
 1275 00b3 01       		.uleb128 0x1
 1276 00b4 12       		.uleb128 0x12
 1277 00b5 06       		.uleb128 0x6
 1278 00b6 40       		.uleb128 0x40
 1279 00b7 18       		.uleb128 0x18
 1280 00b8 9742     		.uleb128 0x2117
 1281 00ba 19       		.uleb128 0x19
 1282 00bb 00       		.byte	0
 1283 00bc 00       		.byte	0
 1284 00bd 0D       		.uleb128 0xd
 1285 00be 2E       		.uleb128 0x2e
 1286 00bf 01       		.byte	0x1
 1287 00c0 3F       		.uleb128 0x3f
 1288 00c1 19       		.uleb128 0x19
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 40


 1289 00c2 03       		.uleb128 0x3
 1290 00c3 0E       		.uleb128 0xe
 1291 00c4 3A       		.uleb128 0x3a
 1292 00c5 0B       		.uleb128 0xb
 1293 00c6 3B       		.uleb128 0x3b
 1294 00c7 05       		.uleb128 0x5
 1295 00c8 27       		.uleb128 0x27
 1296 00c9 19       		.uleb128 0x19
 1297 00ca 11       		.uleb128 0x11
 1298 00cb 01       		.uleb128 0x1
 1299 00cc 12       		.uleb128 0x12
 1300 00cd 06       		.uleb128 0x6
 1301 00ce 40       		.uleb128 0x40
 1302 00cf 18       		.uleb128 0x18
 1303 00d0 9742     		.uleb128 0x2117
 1304 00d2 19       		.uleb128 0x19
 1305 00d3 01       		.uleb128 0x1
 1306 00d4 13       		.uleb128 0x13
 1307 00d5 00       		.byte	0
 1308 00d6 00       		.byte	0
 1309 00d7 0E       		.uleb128 0xe
 1310 00d8 1D       		.uleb128 0x1d
 1311 00d9 00       		.byte	0
 1312 00da 31       		.uleb128 0x31
 1313 00db 13       		.uleb128 0x13
 1314 00dc 52       		.uleb128 0x52
 1315 00dd 01       		.uleb128 0x1
 1316 00de 55       		.uleb128 0x55
 1317 00df 17       		.uleb128 0x17
 1318 00e0 58       		.uleb128 0x58
 1319 00e1 0B       		.uleb128 0xb
 1320 00e2 59       		.uleb128 0x59
 1321 00e3 05       		.uleb128 0x5
 1322 00e4 00       		.byte	0
 1323 00e5 00       		.byte	0
 1324 00e6 0F       		.uleb128 0xf
 1325 00e7 2E       		.uleb128 0x2e
 1326 00e8 01       		.byte	0x1
 1327 00e9 3F       		.uleb128 0x3f
 1328 00ea 19       		.uleb128 0x19
 1329 00eb 03       		.uleb128 0x3
 1330 00ec 0E       		.uleb128 0xe
 1331 00ed 3A       		.uleb128 0x3a
 1332 00ee 0B       		.uleb128 0xb
 1333 00ef 3B       		.uleb128 0x3b
 1334 00f0 0B       		.uleb128 0xb
 1335 00f1 27       		.uleb128 0x27
 1336 00f2 19       		.uleb128 0x19
 1337 00f3 11       		.uleb128 0x11
 1338 00f4 01       		.uleb128 0x1
 1339 00f5 12       		.uleb128 0x12
 1340 00f6 06       		.uleb128 0x6
 1341 00f7 40       		.uleb128 0x40
 1342 00f8 18       		.uleb128 0x18
 1343 00f9 9742     		.uleb128 0x2117
 1344 00fb 19       		.uleb128 0x19
 1345 00fc 01       		.uleb128 0x1
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 41


 1346 00fd 13       		.uleb128 0x13
 1347 00fe 00       		.byte	0
 1348 00ff 00       		.byte	0
 1349 0100 10       		.uleb128 0x10
 1350 0101 34       		.uleb128 0x34
 1351 0102 00       		.byte	0
 1352 0103 03       		.uleb128 0x3
 1353 0104 0E       		.uleb128 0xe
 1354 0105 3A       		.uleb128 0x3a
 1355 0106 0B       		.uleb128 0xb
 1356 0107 3B       		.uleb128 0x3b
 1357 0108 0B       		.uleb128 0xb
 1358 0109 49       		.uleb128 0x49
 1359 010a 13       		.uleb128 0x13
 1360 010b 02       		.uleb128 0x2
 1361 010c 17       		.uleb128 0x17
 1362 010d 00       		.byte	0
 1363 010e 00       		.byte	0
 1364 010f 11       		.uleb128 0x11
 1365 0110 1D       		.uleb128 0x1d
 1366 0111 01       		.byte	0x1
 1367 0112 31       		.uleb128 0x31
 1368 0113 13       		.uleb128 0x13
 1369 0114 52       		.uleb128 0x52
 1370 0115 01       		.uleb128 0x1
 1371 0116 55       		.uleb128 0x55
 1372 0117 17       		.uleb128 0x17
 1373 0118 58       		.uleb128 0x58
 1374 0119 0B       		.uleb128 0xb
 1375 011a 59       		.uleb128 0x59
 1376 011b 0B       		.uleb128 0xb
 1377 011c 01       		.uleb128 0x1
 1378 011d 13       		.uleb128 0x13
 1379 011e 00       		.byte	0
 1380 011f 00       		.byte	0
 1381 0120 12       		.uleb128 0x12
 1382 0121 05       		.uleb128 0x5
 1383 0122 00       		.byte	0
 1384 0123 31       		.uleb128 0x31
 1385 0124 13       		.uleb128 0x13
 1386 0125 02       		.uleb128 0x2
 1387 0126 17       		.uleb128 0x17
 1388 0127 00       		.byte	0
 1389 0128 00       		.byte	0
 1390 0129 13       		.uleb128 0x13
 1391 012a 1D       		.uleb128 0x1d
 1392 012b 01       		.byte	0x1
 1393 012c 31       		.uleb128 0x31
 1394 012d 13       		.uleb128 0x13
 1395 012e 11       		.uleb128 0x11
 1396 012f 01       		.uleb128 0x1
 1397 0130 12       		.uleb128 0x12
 1398 0131 06       		.uleb128 0x6
 1399 0132 58       		.uleb128 0x58
 1400 0133 0B       		.uleb128 0xb
 1401 0134 59       		.uleb128 0x59
 1402 0135 0B       		.uleb128 0xb
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 42


 1403 0136 01       		.uleb128 0x1
 1404 0137 13       		.uleb128 0x13
 1405 0138 00       		.byte	0
 1406 0139 00       		.byte	0
 1407 013a 14       		.uleb128 0x14
 1408 013b 898201   		.uleb128 0x4109
 1409 013e 00       		.byte	0
 1410 013f 11       		.uleb128 0x11
 1411 0140 01       		.uleb128 0x1
 1412 0141 31       		.uleb128 0x31
 1413 0142 13       		.uleb128 0x13
 1414 0143 00       		.byte	0
 1415 0144 00       		.byte	0
 1416 0145 15       		.uleb128 0x15
 1417 0146 898201   		.uleb128 0x4109
 1418 0149 00       		.byte	0
 1419 014a 11       		.uleb128 0x11
 1420 014b 01       		.uleb128 0x1
 1421 014c 9542     		.uleb128 0x2115
 1422 014e 19       		.uleb128 0x19
 1423 014f 31       		.uleb128 0x31
 1424 0150 13       		.uleb128 0x13
 1425 0151 00       		.byte	0
 1426 0152 00       		.byte	0
 1427 0153 16       		.uleb128 0x16
 1428 0154 2E       		.uleb128 0x2e
 1429 0155 00       		.byte	0
 1430 0156 31       		.uleb128 0x31
 1431 0157 13       		.uleb128 0x13
 1432 0158 11       		.uleb128 0x11
 1433 0159 01       		.uleb128 0x1
 1434 015a 12       		.uleb128 0x12
 1435 015b 06       		.uleb128 0x6
 1436 015c 40       		.uleb128 0x40
 1437 015d 18       		.uleb128 0x18
 1438 015e 9742     		.uleb128 0x2117
 1439 0160 19       		.uleb128 0x19
 1440 0161 00       		.byte	0
 1441 0162 00       		.byte	0
 1442 0163 17       		.uleb128 0x17
 1443 0164 2E       		.uleb128 0x2e
 1444 0165 01       		.byte	0x1
 1445 0166 3F       		.uleb128 0x3f
 1446 0167 19       		.uleb128 0x19
 1447 0168 03       		.uleb128 0x3
 1448 0169 0E       		.uleb128 0xe
 1449 016a 3A       		.uleb128 0x3a
 1450 016b 0B       		.uleb128 0xb
 1451 016c 3B       		.uleb128 0x3b
 1452 016d 05       		.uleb128 0x5
 1453 016e 27       		.uleb128 0x27
 1454 016f 19       		.uleb128 0x19
 1455 0170 49       		.uleb128 0x49
 1456 0171 13       		.uleb128 0x13
 1457 0172 11       		.uleb128 0x11
 1458 0173 01       		.uleb128 0x1
 1459 0174 12       		.uleb128 0x12
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 43


 1460 0175 06       		.uleb128 0x6
 1461 0176 40       		.uleb128 0x40
 1462 0177 18       		.uleb128 0x18
 1463 0178 9742     		.uleb128 0x2117
 1464 017a 19       		.uleb128 0x19
 1465 017b 01       		.uleb128 0x1
 1466 017c 13       		.uleb128 0x13
 1467 017d 00       		.byte	0
 1468 017e 00       		.byte	0
 1469 017f 18       		.uleb128 0x18
 1470 0180 34       		.uleb128 0x34
 1471 0181 00       		.byte	0
 1472 0182 03       		.uleb128 0x3
 1473 0183 0E       		.uleb128 0xe
 1474 0184 3A       		.uleb128 0x3a
 1475 0185 0B       		.uleb128 0xb
 1476 0186 3B       		.uleb128 0x3b
 1477 0187 05       		.uleb128 0x5
 1478 0188 49       		.uleb128 0x49
 1479 0189 13       		.uleb128 0x13
 1480 018a 02       		.uleb128 0x2
 1481 018b 18       		.uleb128 0x18
 1482 018c 00       		.byte	0
 1483 018d 00       		.byte	0
 1484 018e 19       		.uleb128 0x19
 1485 018f 05       		.uleb128 0x5
 1486 0190 00       		.byte	0
 1487 0191 03       		.uleb128 0x3
 1488 0192 0E       		.uleb128 0xe
 1489 0193 3A       		.uleb128 0x3a
 1490 0194 0B       		.uleb128 0xb
 1491 0195 3B       		.uleb128 0x3b
 1492 0196 05       		.uleb128 0x5
 1493 0197 49       		.uleb128 0x49
 1494 0198 13       		.uleb128 0x13
 1495 0199 02       		.uleb128 0x2
 1496 019a 18       		.uleb128 0x18
 1497 019b 00       		.byte	0
 1498 019c 00       		.byte	0
 1499 019d 1A       		.uleb128 0x1a
 1500 019e 34       		.uleb128 0x34
 1501 019f 00       		.byte	0
 1502 01a0 03       		.uleb128 0x3
 1503 01a1 0E       		.uleb128 0xe
 1504 01a2 3A       		.uleb128 0x3a
 1505 01a3 0B       		.uleb128 0xb
 1506 01a4 3B       		.uleb128 0x3b
 1507 01a5 0B       		.uleb128 0xb
 1508 01a6 49       		.uleb128 0x49
 1509 01a7 13       		.uleb128 0x13
 1510 01a8 3F       		.uleb128 0x3f
 1511 01a9 19       		.uleb128 0x19
 1512 01aa 02       		.uleb128 0x2
 1513 01ab 18       		.uleb128 0x18
 1514 01ac 00       		.byte	0
 1515 01ad 00       		.byte	0
 1516 01ae 1B       		.uleb128 0x1b
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 44


 1517 01af 2E       		.uleb128 0x2e
 1518 01b0 00       		.byte	0
 1519 01b1 3F       		.uleb128 0x3f
 1520 01b2 19       		.uleb128 0x19
 1521 01b3 3C       		.uleb128 0x3c
 1522 01b4 19       		.uleb128 0x19
 1523 01b5 6E       		.uleb128 0x6e
 1524 01b6 0E       		.uleb128 0xe
 1525 01b7 03       		.uleb128 0x3
 1526 01b8 0E       		.uleb128 0xe
 1527 01b9 3A       		.uleb128 0x3a
 1528 01ba 0B       		.uleb128 0xb
 1529 01bb 3B       		.uleb128 0x3b
 1530 01bc 0B       		.uleb128 0xb
 1531 01bd 00       		.byte	0
 1532 01be 00       		.byte	0
 1533 01bf 00       		.byte	0
 1534              		.section	.debug_loc,"",%progbits
 1535              	.Ldebug_loc0:
 1536              	.LLST0:
 1537 0000 08000000 		.4byte	.LVL1
 1538 0004 10000000 		.4byte	.LVL2
 1539 0008 0600     		.2byte	0x6
 1540 000a 73       		.byte	0x73
 1541 000b 00       		.sleb128 0
 1542 000c 09       		.byte	0x9
 1543 000d C0       		.byte	0xc0
 1544 000e 1A       		.byte	0x1a
 1545 000f 9F       		.byte	0x9f
 1546 0010 00000000 		.4byte	0
 1547 0014 00000000 		.4byte	0
 1548              	.LLST1:
 1549 0018 4A000000 		.4byte	.LVL9
 1550 001c 55000000 		.4byte	.LVL10-1
 1551 0020 0100     		.2byte	0x1
 1552 0022 50       		.byte	0x50
 1553 0023 00000000 		.4byte	0
 1554 0027 00000000 		.4byte	0
 1555              	.LLST2:
 1556 002b 40000000 		.4byte	.LVL7
 1557 002f 46000000 		.4byte	.LVL8
 1558 0033 0200     		.2byte	0x2
 1559 0035 30       		.byte	0x30
 1560 0036 9F       		.byte	0x9f
 1561 0037 00000000 		.4byte	0
 1562 003b 00000000 		.4byte	0
 1563              	.LLST3:
 1564 003f 26000000 		.4byte	.LVL3
 1565 0043 2E000000 		.4byte	.LVL4
 1566 0047 0400     		.2byte	0x4
 1567 0049 0A       		.byte	0xa
 1568 004a 1F4E     		.2byte	0x4e1f
 1569 004c 9F       		.byte	0x9f
 1570 004d 00000000 		.4byte	0
 1571 0051 00000000 		.4byte	0
 1572              	.LLST4:
 1573 0055 2E000000 		.4byte	.LVL4
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 45


 1574 0059 32000000 		.4byte	.LVL5
 1575 005d 0400     		.2byte	0x4
 1576 005f 0A       		.byte	0xa
 1577 0060 1F4E     		.2byte	0x4e1f
 1578 0062 9F       		.byte	0x9f
 1579 0063 00000000 		.4byte	0
 1580 0067 00000000 		.4byte	0
 1581              	.LLST5:
 1582 006b 32000000 		.4byte	.LVL5
 1583 006f 3A000000 		.4byte	.LVL6
 1584 0073 0400     		.2byte	0x4
 1585 0075 0A       		.byte	0xa
 1586 0076 C005     		.2byte	0x5c0
 1587 0078 9F       		.byte	0x9f
 1588 0079 00000000 		.4byte	0
 1589 007d 00000000 		.4byte	0
 1590              	.LLST6:
 1591 0081 3A000000 		.4byte	.LVL6
 1592 0085 40000000 		.4byte	.LVL7
 1593 0089 0400     		.2byte	0x4
 1594 008b 0A       		.byte	0xa
 1595 008c F00A     		.2byte	0xaf0
 1596 008e 9F       		.byte	0x9f
 1597 008f 00000000 		.4byte	0
 1598 0093 00000000 		.4byte	0
 1599              		.section	.debug_aranges,"",%progbits
 1600 0000 A4000000 		.4byte	0xa4
 1601 0004 0200     		.2byte	0x2
 1602 0006 00000000 		.4byte	.Ldebug_info0
 1603 000a 04       		.byte	0x4
 1604 000b 00       		.byte	0
 1605 000c 0000     		.2byte	0
 1606 000e 0000     		.2byte	0
 1607 0010 00000000 		.4byte	.LFB2
 1608 0014 10000000 		.4byte	.LFE2-.LFB2
 1609 0018 00000000 		.4byte	.LFB3
 1610 001c 10000000 		.4byte	.LFE3-.LFB3
 1611 0020 00000000 		.4byte	.LFB4
 1612 0024 0C000000 		.4byte	.LFE4-.LFB4
 1613 0028 00000000 		.4byte	.LFB5
 1614 002c 14000000 		.4byte	.LFE5-.LFB5
 1615 0030 00000000 		.4byte	.LFB6
 1616 0034 18000000 		.4byte	.LFE6-.LFB6
 1617 0038 00000000 		.4byte	.LFB1
 1618 003c 6C000000 		.4byte	.LFE1-.LFB1
 1619 0040 00000000 		.4byte	.LFB0
 1620 0044 1C000000 		.4byte	.LFE0-.LFB0
 1621 0048 00000000 		.4byte	.LFB7
 1622 004c 0C000000 		.4byte	.LFE7-.LFB7
 1623 0050 00000000 		.4byte	.LFB8
 1624 0054 0C000000 		.4byte	.LFE8-.LFB8
 1625 0058 00000000 		.4byte	.LFB9
 1626 005c 0C000000 		.4byte	.LFE9-.LFB9
 1627 0060 00000000 		.4byte	.LFB10
 1628 0064 0C000000 		.4byte	.LFE10-.LFB10
 1629 0068 00000000 		.4byte	.LFB11
 1630 006c 0C000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 46


 1631 0070 00000000 		.4byte	.LFB12
 1632 0074 0C000000 		.4byte	.LFE12-.LFB12
 1633 0078 00000000 		.4byte	.LFB13
 1634 007c 0C000000 		.4byte	.LFE13-.LFB13
 1635 0080 00000000 		.4byte	.LFB14
 1636 0084 0C000000 		.4byte	.LFE14-.LFB14
 1637 0088 00000000 		.4byte	.LFB15
 1638 008c 0C000000 		.4byte	.LFE15-.LFB15
 1639 0090 00000000 		.4byte	.LFB16
 1640 0094 0C000000 		.4byte	.LFE16-.LFB16
 1641 0098 00000000 		.4byte	.LFB17
 1642 009c 0C000000 		.4byte	.LFE17-.LFB17
 1643 00a0 00000000 		.4byte	0
 1644 00a4 00000000 		.4byte	0
 1645              		.section	.debug_ranges,"",%progbits
 1646              	.Ldebug_ranges0:
 1647 0000 00000000 		.4byte	.LBB16
 1648 0004 02000000 		.4byte	.LBE16
 1649 0008 04000000 		.4byte	.LBB22
 1650 000c 06000000 		.4byte	.LBE22
 1651 0010 00000000 		.4byte	0
 1652 0014 00000000 		.4byte	0
 1653 0018 02000000 		.4byte	.LBB19
 1654 001c 04000000 		.4byte	.LBE19
 1655 0020 0A000000 		.4byte	.LBB23
 1656 0024 0E000000 		.4byte	.LBE23
 1657 0028 00000000 		.4byte	0
 1658 002c 00000000 		.4byte	0
 1659 0030 08000000 		.4byte	.LBB24
 1660 0034 0C000000 		.4byte	.LBE24
 1661 0038 40000000 		.4byte	.LBB35
 1662 003c 46000000 		.4byte	.LBE35
 1663 0040 00000000 		.4byte	0
 1664 0044 00000000 		.4byte	0
 1665 0048 00000000 		.4byte	.LFB2
 1666 004c 10000000 		.4byte	.LFE2
 1667 0050 00000000 		.4byte	.LFB3
 1668 0054 10000000 		.4byte	.LFE3
 1669 0058 00000000 		.4byte	.LFB4
 1670 005c 0C000000 		.4byte	.LFE4
 1671 0060 00000000 		.4byte	.LFB5
 1672 0064 14000000 		.4byte	.LFE5
 1673 0068 00000000 		.4byte	.LFB6
 1674 006c 18000000 		.4byte	.LFE6
 1675 0070 00000000 		.4byte	.LFB1
 1676 0074 6C000000 		.4byte	.LFE1
 1677 0078 00000000 		.4byte	.LFB0
 1678 007c 1C000000 		.4byte	.LFE0
 1679 0080 00000000 		.4byte	.LFB7
 1680 0084 0C000000 		.4byte	.LFE7
 1681 0088 00000000 		.4byte	.LFB8
 1682 008c 0C000000 		.4byte	.LFE8
 1683 0090 00000000 		.4byte	.LFB9
 1684 0094 0C000000 		.4byte	.LFE9
 1685 0098 00000000 		.4byte	.LFB10
 1686 009c 0C000000 		.4byte	.LFE10
 1687 00a0 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 47


 1688 00a4 0C000000 		.4byte	.LFE11
 1689 00a8 00000000 		.4byte	.LFB12
 1690 00ac 0C000000 		.4byte	.LFE12
 1691 00b0 00000000 		.4byte	.LFB13
 1692 00b4 0C000000 		.4byte	.LFE13
 1693 00b8 00000000 		.4byte	.LFB14
 1694 00bc 0C000000 		.4byte	.LFE14
 1695 00c0 00000000 		.4byte	.LFB15
 1696 00c4 0C000000 		.4byte	.LFE15
 1697 00c8 00000000 		.4byte	.LFB16
 1698 00cc 0C000000 		.4byte	.LFE16
 1699 00d0 00000000 		.4byte	.LFB17
 1700 00d4 0C000000 		.4byte	.LFE17
 1701 00d8 00000000 		.4byte	0
 1702 00dc 00000000 		.4byte	0
 1703              		.section	.debug_line,"",%progbits
 1704              	.Ldebug_line0:
 1705 0000 D8010000 		.section	.debug_str,"MS",%progbits,1
 1705      02004D00 
 1705      00000201 
 1705      FB0E0D00 
 1705      01010101 
 1706              	.LASF15:
 1707 0000 72656731 		.ascii	"reg16\000"
 1707      3600
 1708              	.LASF27:
 1709 0006 50574D5F 		.ascii	"PWM_X_WriteCounter\000"
 1709      585F5772 
 1709      69746543 
 1709      6F756E74 
 1709      657200
 1710              	.LASF31:
 1711 0019 50574D5F 		.ascii	"PWM_X_ClearFIFO\000"
 1711      585F436C 
 1711      65617246 
 1711      49464F00 
 1712              	.LASF36:
 1713 0029 72657375 		.ascii	"result\000"
 1713      6C7400
 1714              	.LASF39:
 1715 0030 50574D5F 		.ascii	"PWM_X_ReadCompare1\000"
 1715      585F5265 
 1715      6164436F 
 1715      6D706172 
 1715      653100
 1716              	.LASF40:
 1717 0043 50574D5F 		.ascii	"PWM_X_ReadCompare2\000"
 1717      585F5265 
 1717      6164436F 
 1717      6D706172 
 1717      653200
 1718              	.LASF26:
 1719 0056 70657269 		.ascii	"period\000"
 1719      6F6400
 1720              	.LASF3:
 1721 005d 73686F72 		.ascii	"short unsigned int\000"
 1721      7420756E 
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 48


 1721      7369676E 
 1721      65642069 
 1721      6E7400
 1722              	.LASF30:
 1723 0070 50574D5F 		.ascii	"PWM_X_Stop\000"
 1723      585F5374 
 1723      6F7000
 1724              	.LASF11:
 1725 007b 666C6F61 		.ascii	"float\000"
 1725      7400
 1726              	.LASF28:
 1727 0081 636F756E 		.ascii	"counter\000"
 1727      74657200 
 1728              	.LASF7:
 1729 0089 6C6F6E67 		.ascii	"long long unsigned int\000"
 1729      206C6F6E 
 1729      6720756E 
 1729      7369676E 
 1729      65642069 
 1730              	.LASF38:
 1731 00a0 50574D5F 		.ascii	"PWM_X_ReadCounter\000"
 1731      585F5265 
 1731      6164436F 
 1731      756E7465 
 1731      7200
 1732              	.LASF24:
 1733 00b2 50574D5F 		.ascii	"PWM_X_WriteCompare1\000"
 1733      585F5772 
 1733      69746543 
 1733      6F6D7061 
 1733      72653100 
 1734              	.LASF21:
 1735 00c6 50574D5F 		.ascii	"PWM_X_WriteCompare2\000"
 1735      585F5772 
 1735      69746543 
 1735      6F6D7061 
 1735      72653200 
 1736              	.LASF14:
 1737 00da 72656738 		.ascii	"reg8\000"
 1737      00
 1738              	.LASF44:
 1739 00df 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1739      43313120 
 1739      352E342E 
 1739      31203230 
 1739      31363036 
 1740 0112 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1740      20726576 
 1740      6973696F 
 1740      6E203233 
 1740      37373135 
 1741 0145 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1741      66756E63 
 1741      74696F6E 
 1741      2D736563 
 1741      74696F6E 
 1742              	.LASF9:
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 49


 1743 016d 75696E74 		.ascii	"uint8\000"
 1743      3800
 1744              	.LASF48:
 1745 0173 636F6E74 		.ascii	"control\000"
 1745      726F6C00 
 1746              	.LASF1:
 1747 017b 756E7369 		.ascii	"unsigned char\000"
 1747      676E6564 
 1747      20636861 
 1747      7200
 1748              	.LASF12:
 1749 0189 646F7562 		.ascii	"double\000"
 1749      6C6500
 1750              	.LASF25:
 1751 0190 50574D5F 		.ascii	"PWM_X_WritePeriod\000"
 1751      585F5772 
 1751      69746550 
 1751      6572696F 
 1751      6400
 1752              	.LASF2:
 1753 01a2 73686F72 		.ascii	"short int\000"
 1753      7420696E 
 1753      7400
 1754              	.LASF10:
 1755 01ac 75696E74 		.ascii	"uint16\000"
 1755      313600
 1756              	.LASF20:
 1757 01b3 50574D5F 		.ascii	"PWM_X_SetInterruptMode\000"
 1757      585F5365 
 1757      74496E74 
 1757      65727275 
 1757      70744D6F 
 1758              	.LASF42:
 1759 01ca 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1759      74657243 
 1759      72697469 
 1759      63616C53 
 1759      65637469 
 1760              	.LASF5:
 1761 01e1 6C6F6E67 		.ascii	"long unsigned int\000"
 1761      20756E73 
 1761      69676E65 
 1761      6420696E 
 1761      7400
 1762              	.LASF8:
 1763 01f3 756E7369 		.ascii	"unsigned int\000"
 1763      676E6564 
 1763      20696E74 
 1763      00
 1764              	.LASF43:
 1765 0200 43794578 		.ascii	"CyExitCriticalSection\000"
 1765      69744372 
 1765      69746963 
 1765      616C5365 
 1765      6374696F 
 1766              	.LASF41:
 1767 0216 50574D5F 		.ascii	"PWM_X_ReadPeriod\000"
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 50


 1767      585F5265 
 1767      61645065 
 1767      72696F64 
 1767      00
 1768              	.LASF49:
 1769 0227 50574D5F 		.ascii	"PWM_X_initVar\000"
 1769      585F696E 
 1769      69745661 
 1769      7200
 1770              	.LASF46:
 1771 0235 453A5C55 		.ascii	"E:\\U\\Lab de Control\\PID Controler-20191011T02191"
 1771      5C4C6162 
 1771      20646520 
 1771      436F6E74 
 1771      726F6C5C 
 1772 0265 395A2D30 		.ascii	"9Z-001\\PID Controler\\Controlador.cydsn\000"
 1772      30315C50 
 1772      49442043 
 1772      6F6E7472 
 1772      6F6C6572 
 1773              	.LASF45:
 1774 028c 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_X.c\000"
 1774      72617465 
 1774      645F536F 
 1774      75726365 
 1774      5C50536F 
 1775              	.LASF17:
 1776 02ab 73697A65 		.ascii	"sizetype\000"
 1776      74797065 
 1776      00
 1777              	.LASF34:
 1778 02b4 50574D5F 		.ascii	"PWM_X_interruptState\000"
 1778      585F696E 
 1778      74657272 
 1778      75707453 
 1778      74617465 
 1779              	.LASF6:
 1780 02c9 6C6F6E67 		.ascii	"long long int\000"
 1780      206C6F6E 
 1780      6720696E 
 1780      7400
 1781              	.LASF22:
 1782 02d7 696E7465 		.ascii	"interruptMode\000"
 1782      72727570 
 1782      744D6F64 
 1782      6500
 1783              	.LASF29:
 1784 02e5 50574D5F 		.ascii	"PWM_X_Enable\000"
 1784      585F456E 
 1784      61626C65 
 1784      00
 1785              	.LASF19:
 1786 02f2 50574D5F 		.ascii	"PWM_X_ReadStatusRegister\000"
 1786      585F5265 
 1786      61645374 
 1786      61747573 
 1786      52656769 
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccl8RLpE.s 			page 51


 1787              	.LASF35:
 1788 030b 50574D5F 		.ascii	"PWM_X_Start\000"
 1788      585F5374 
 1788      61727400 
 1789              	.LASF33:
 1790 0317 6374726C 		.ascii	"ctrl\000"
 1790      00
 1791              	.LASF32:
 1792 031c 50574D5F 		.ascii	"PWM_X_Init\000"
 1792      585F496E 
 1792      697400
 1793              	.LASF4:
 1794 0327 6C6F6E67 		.ascii	"long int\000"
 1794      20696E74 
 1794      00
 1795              	.LASF13:
 1796 0330 63686172 		.ascii	"char\000"
 1796      00
 1797              	.LASF16:
 1798 0335 6C6F6E67 		.ascii	"long double\000"
 1798      20646F75 
 1798      626C6500 
 1799              	.LASF0:
 1800 0341 7369676E 		.ascii	"signed char\000"
 1800      65642063 
 1800      68617200 
 1801              	.LASF23:
 1802 034d 636F6D70 		.ascii	"compare\000"
 1802      61726500 
 1803              	.LASF47:
 1804 0355 50574D5F 		.ascii	"PWM_X_ReadControlRegister\000"
 1804      585F5265 
 1804      6164436F 
 1804      6E74726F 
 1804      6C526567 
 1805              	.LASF37:
 1806 036f 50574D5F 		.ascii	"PWM_X_WriteControlRegister\000"
 1806      585F5772 
 1806      69746543 
 1806      6F6E7472 
 1806      6F6C5265 
 1807              	.LASF18:
 1808 038a 50574D5F 		.ascii	"PWM_X_ReadCapture\000"
 1808      585F5265 
 1808      61644361 
 1808      70747572 
 1808      6500
 1809              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
