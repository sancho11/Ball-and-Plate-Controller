ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Potenciometro_SAR.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Potenciometro_SAR_Enable,"ax",%progbits
  20              		.align	1
  21              		.global	Potenciometro_SAR_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Potenciometro_SAR_Enable, %function
  25              	Potenciometro_SAR_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\Potenciometro_SAR.c"
   1:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Potenciometro_SAR.c **** * File Name: Potenciometro_SAR.c
   3:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Version 3.10
   4:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
   5:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Description:
   6:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  This file provides the source code to the API for the Successive
   7:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  approximation ADC Component.
   8:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
   9:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Note:
  10:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
  11:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
  12:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/Potenciometro_SAR.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/Potenciometro_SAR.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/Potenciometro_SAR.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  18:Generated_Source\PSoC5/Potenciometro_SAR.c **** #include "CyLib.h"
  19:Generated_Source\PSoC5/Potenciometro_SAR.c **** #include "Potenciometro_SAR.h"
  20:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  21:Generated_Source\PSoC5/Potenciometro_SAR.c **** #if(Potenciometro_SAR_DEFAULT_INTERNAL_CLK)
  22:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #include "Potenciometro_SAR_theACLK.h"
  23:Generated_Source\PSoC5/Potenciometro_SAR.c **** #endif /* End Potenciometro_SAR_DEFAULT_INTERNAL_CLK */
  24:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  25:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  26:Generated_Source\PSoC5/Potenciometro_SAR.c **** /***************************************
  27:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Forward function references
  28:Generated_Source\PSoC5/Potenciometro_SAR.c **** ***************************************/
  29:Generated_Source\PSoC5/Potenciometro_SAR.c **** static void Potenciometro_SAR_CalcGain(uint8 resolution);
  30:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 2


  31:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  32:Generated_Source\PSoC5/Potenciometro_SAR.c **** /***************************************
  33:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Global data allocation
  34:Generated_Source\PSoC5/Potenciometro_SAR.c **** ***************************************/
  35:Generated_Source\PSoC5/Potenciometro_SAR.c **** uint8 Potenciometro_SAR_initVar = 0u;
  36:Generated_Source\PSoC5/Potenciometro_SAR.c **** volatile int16 Potenciometro_SAR_offset;
  37:Generated_Source\PSoC5/Potenciometro_SAR.c **** volatile int16 Potenciometro_SAR_countsPerVolt;     /* Obsolete Gain compensation */
  38:Generated_Source\PSoC5/Potenciometro_SAR.c **** volatile int32 Potenciometro_SAR_countsPer10Volt;   /* Gain compensation */
  39:Generated_Source\PSoC5/Potenciometro_SAR.c **** volatile int16 Potenciometro_SAR_shift;
  40:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  41:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  42:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
  43:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_Start
  44:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
  45:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
  46:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
  47:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  This is the preferred method to begin component operation.
  48:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_Start() sets the initVar variable, calls the
  49:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_Init() function, and then calls the
  50:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_Enable() function.
  51:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
  52:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
  53:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
  54:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
  55:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
  56:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
  57:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
  58:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Global variables:
  59:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  The Potenciometro_SAR_initVar variable is used to indicate when/if initial
  60:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  configuration of this component has happened. The variable is initialized to
  61:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_Start() routine.
  64:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  If re-initialization of the component is required the variable should be set
  65:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  to zero before call of Potenciometro_SAR_Start() routine, or the user may call
  66:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_Init() and Potenciometro_SAR_Enable() as done in the
  67:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_Start() routine.
  68:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
  69:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Side Effect:
  70:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  If the initVar variable is already set, this function only calls the
  71:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_Enable() function.
  72:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
  73:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/Potenciometro_SAR.c **** void Potenciometro_SAR_Start(void)
  75:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
  76:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  77:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* If not Initialized then initialize all required hardware and software */
  78:Generated_Source\PSoC5/Potenciometro_SAR.c ****     if(Potenciometro_SAR_initVar == 0u)
  79:Generated_Source\PSoC5/Potenciometro_SAR.c ****     {
  80:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_Init();
  81:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_initVar = 1u;
  82:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
  83:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_Enable();
  84:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
  85:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  86:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  87:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 3


  88:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_Init
  89:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
  90:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
  91:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
  92:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Initialize component's parameters to the parameters set by user in the
  93:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  customizer of the component placed onto schematic. Usually called in
  94:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_Start().
  95:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
  96:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
  97:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
  98:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
  99:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 100:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
 101:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 102:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Global variables:
 103:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  The Potenciometro_SAR_offset variable is initialized to 0.
 104:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 105:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/Potenciometro_SAR.c **** void Potenciometro_SAR_Init(void)
 107:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
 108:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 109:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* This is only valid if there is an internal clock */
 110:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #if(Potenciometro_SAR_DEFAULT_INTERNAL_CLK)
 111:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_theACLK_SetMode(CYCLK_DUTY);
 112:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif /* End Potenciometro_SAR_DEFAULT_INTERNAL_CLK */
 113:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 114:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #if(Potenciometro_SAR_IRQ_REMOVE == 0u)
 115:Generated_Source\PSoC5/Potenciometro_SAR.c ****         /* Start and set interrupt vector */
 116:Generated_Source\PSoC5/Potenciometro_SAR.c ****         CyIntSetPriority(Potenciometro_SAR_INTC_NUMBER, Potenciometro_SAR_INTC_PRIOR_NUMBER);
 117:Generated_Source\PSoC5/Potenciometro_SAR.c ****         (void)CyIntSetVector(Potenciometro_SAR_INTC_NUMBER, &Potenciometro_SAR_ISR);
 118:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif   /* End Potenciometro_SAR_IRQ_REMOVE */
 119:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 120:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Enable IRQ mode*/
 121:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_SAR_CSR1_REG |= Potenciometro_SAR_SAR_IRQ_MASK_EN | Potenciometro_SAR_SAR_IRQ
 122:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 123:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /*Set SAR ADC resolution ADC */
 124:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_SetResolution(Potenciometro_SAR_DEFAULT_RESOLUTION);
 125:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_offset = 0;
 126:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 127:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 128:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 129:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
 130:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_Enable
 131:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
 132:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 133:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
 134:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Enables the reference, clock and power for SAR ADC.
 135:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 136:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
 137:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
 138:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 139:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 140:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
 141:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 142:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/Potenciometro_SAR.c **** void Potenciometro_SAR_Enable(void)
 144:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 4


  28              		.loc 1 144 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 145:Generated_Source\PSoC5/Potenciometro_SAR.c ****     uint8 tmpReg;
 146:Generated_Source\PSoC5/Potenciometro_SAR.c ****     uint8 enableInterrupts;
 147:Generated_Source\PSoC5/Potenciometro_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 147 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 148:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 149:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_PWRMGR_SAR_REG |= Potenciometro_SAR_ACT_PWR_SAR_EN;
  39              		.loc 1 150 0
  40 0006 1A4A     		ldr	r2, .L2
 147:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  41              		.loc 1 147 0
  42 0008 0446     		mov	r4, r0
  43              	.LVL1:
  44              		.loc 1 150 0
  45 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 151:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 152:Generated_Source\PSoC5/Potenciometro_SAR.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_STBY_PWRMGR_SAR_REG |= Potenciometro_SAR_STBY_PWR_SAR_EN;
 154:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 155:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* This is only valid if there is an internal clock */
 156:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #if(Potenciometro_SAR_DEFAULT_INTERNAL_CLK)
 157:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_PWRMGR_CLK_REG |= Potenciometro_SAR_ACT_PWR_CLK_EN;
 158:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_STBY_PWRMGR_CLK_REG |= Potenciometro_SAR_STBY_PWR_CLK_EN;
 159:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif /* End Potenciometro_SAR_DEFAULT_INTERNAL_CLK */
 160:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 161:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:Generated_Source\PSoC5/Potenciometro_SAR.c ****     tmpReg = Potenciometro_SAR_SAR_CSR3_REG;
 163:Generated_Source\PSoC5/Potenciometro_SAR.c ****     tmpReg |= Potenciometro_SAR_SAR_EN_BUF_VCM_EN;
 164:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #if((Potenciometro_SAR_DEFAULT_REFERENCE == Potenciometro_SAR__EXT_REF) || \
 166:Generated_Source\PSoC5/Potenciometro_SAR.c ****         (Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VNEG_VDDA_DIFF))
 167:Generated_Source\PSoC5/Potenciometro_SAR.c ****         tmpReg &= (uint8)~Potenciometro_SAR_SAR_EN_BUF_VREF_EN;
 168:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:Generated_Source\PSoC5/Potenciometro_SAR.c ****         tmpReg |= Potenciometro_SAR_SAR_EN_BUF_VREF_EN;
 170:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif /* Potenciometro_SAR_DEFAULT_REFERENCE == Potenciometro_SAR__EXT_REF */
 171:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_SAR_CSR3_REG = tmpReg;
 172:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 173:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Set reference for ADC */
 174:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #if(Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VNEG_VDDA_DIFF)
 175:Generated_Source\PSoC5/Potenciometro_SAR.c ****         #if(Potenciometro_SAR_DEFAULT_REFERENCE == Potenciometro_SAR__EXT_REF)
 176:Generated_Source\PSoC5/Potenciometro_SAR.c ****             Potenciometro_SAR_SAR_CSR6_REG = Potenciometro_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 177:Generated_Source\PSoC5/Potenciometro_SAR.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:Generated_Source\PSoC5/Potenciometro_SAR.c ****             Potenciometro_SAR_SAR_CSR6_REG = Potenciometro_SAR_VDDA_VREF;           /* S7 */
 179:Generated_Source\PSoC5/Potenciometro_SAR.c ****         #endif /* Potenciometro_SAR_DEFAULT_REFERENCE == Potenciometro_SAR__EXT_REF */
 180:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #else  /* Reference goes through internal buffer */
 181:Generated_Source\PSoC5/Potenciometro_SAR.c ****         #if(Potenciometro_SAR_DEFAULT_REFERENCE == Potenciometro_SAR__INT_REF_NOT_BYPASSED)
 182:Generated_Source\PSoC5/Potenciometro_SAR.c ****             Potenciometro_SAR_SAR_CSR6_REG = Potenciometro_SAR_INT_VREF;            /* S3 + S4 */
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 5


 183:Generated_Source\PSoC5/Potenciometro_SAR.c ****         #else /* INTREF Bypassed of External */
 184:Generated_Source\PSoC5/Potenciometro_SAR.c ****             Potenciometro_SAR_SAR_CSR6_REG = Potenciometro_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 185:Generated_Source\PSoC5/Potenciometro_SAR.c ****         #endif /* Potenciometro_SAR_DEFAULT_REFERENCE == Potenciometro_SAR__INT_REF_NOT_BYPASSED */
 186:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif /* VNEG_VDDA_DIFF */
 187:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 188:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #if(Potenciometro_SAR_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_SAR_CSR5_REG &= (uint8)~Potenciometro_SAR_SAR_DLY_INC;
 191:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_SAR_CSR5_REG |= Potenciometro_SAR_SAR_DLY_INC;
 193:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif /* Potenciometro_SAR_HIGH_POWER_PULSE == 0u */
 194:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 195:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Increase comparator latch enable delay by 20%, 
 196:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  Default for 1MSPS) 
 198:Generated_Source\PSoC5/Potenciometro_SAR.c ****     */
 199:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #if(Potenciometro_SAR_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_SAR_CSR5_REG |= Potenciometro_SAR_SAR_SEL_CSEL_DFT_CHAR;
 201:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #else /* for <500ksps */
 202:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_SAR_CSR5_REG &= (uint8)~Potenciometro_SAR_SAR_SEL_CSEL_DFT_CHAR;
 203:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif /* Potenciometro_SAR_HIGH_POWER_PULSE == 0u */
 204:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 205:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_SAR_CSR0_REG = (uint8)((uint8)Potenciometro_SAR_DEFAULT_POWER << Potenciometr
 207:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #if ((CY_PSOC5LP) || (Potenciometro_SAR_DEFAULT_REFERENCE != Potenciometro_SAR__EXT_REF))
 209:Generated_Source\PSoC5/Potenciometro_SAR.c ****         | Potenciometro_SAR_SAR_HIZ_CLEAR
 210:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif /* SAR_HIZ_CLEAR */
 211:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /*Set Convertion mode */
 212:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #if(Potenciometro_SAR_DEFAULT_CONV_MODE != Potenciometro_SAR__FREE_RUNNING)      /* If triggere
 213:Generated_Source\PSoC5/Potenciometro_SAR.c ****         | Potenciometro_SAR_SAR_MX_SOF_UDB           /* source: UDB */
 214:Generated_Source\PSoC5/Potenciometro_SAR.c ****         | Potenciometro_SAR_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif /* Potenciometro_SAR_DEFAULT_CONV_MODE */
 216:Generated_Source\PSoC5/Potenciometro_SAR.c ****     ; /* end of multiple line initialization */
 217:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 218:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_SAR_TR0_REG = Potenciometro_SAR_SAR_CAP_TRIM_2;
 219:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 220:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Enable clock for SAR ADC*/
 221:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_SAR_CLK_REG |= Potenciometro_SAR_SAR_MX_CLK_EN;
 222:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 223:Generated_Source\PSoC5/Potenciometro_SAR.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
  46              		.loc 1 223 0
  47 000c 0A20     		movs	r0, #10
 150:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  48              		.loc 1 150 0
  49 000e 43F00103 		orr	r3, r3, #1
  50 0012 1370     		strb	r3, [r2]
 153:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  51              		.loc 1 153 0
  52 0014 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
  53 0016 43F00103 		orr	r3, r3, #1
  54 001a 1374     		strb	r3, [r2, #16]
 162:Generated_Source\PSoC5/Potenciometro_SAR.c ****     tmpReg |= Potenciometro_SAR_SAR_EN_BUF_VCM_EN;
  55              		.loc 1 162 0
  56 001c 02F5AA52 		add	r2, r2, #5440
  57 0020 1832     		adds	r2, r2, #24
  58 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 6


  59              	.LVL2:
 169:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif /* Potenciometro_SAR_DEFAULT_REFERENCE == Potenciometro_SAR__EXT_REF */
  60              		.loc 1 169 0
  61 0024 43F00303 		orr	r3, r3, #3
  62              	.LVL3:
 171:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  63              		.loc 1 171 0
  64 0028 1370     		strb	r3, [r2]
 182:Generated_Source\PSoC5/Potenciometro_SAR.c ****         #else /* INTREF Bypassed of External */
  65              		.loc 1 182 0
  66 002a 124B     		ldr	r3, .L2+4
  67              	.LVL4:
  68 002c 1822     		movs	r2, #24
  69              	.LVL5:
  70 002e 1A70     		strb	r2, [r3]
  71              	.LVL6:
 192:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif /* Potenciometro_SAR_HIGH_POWER_PULSE == 0u */
  72              		.loc 1 192 0
  73 0030 13F8012C 		ldrb	r2, [r3, #-1]	@ zero_extendqisi2
  74 0034 42F04002 		orr	r2, r2, #64
  75 0038 03F8012C 		strb	r2, [r3, #-1]
 202:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif /* Potenciometro_SAR_HIGH_POWER_PULSE == 0u */
  76              		.loc 1 202 0
  77 003c 13F8012C 		ldrb	r2, [r3, #-1]	@ zero_extendqisi2
  78 0040 02F0FC02 		and	r2, r2, #252
  79 0044 03F8012C 		strb	r2, [r3, #-1]
 206:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
  80              		.loc 1 206 0
  81 0048 C822     		movs	r2, #200
  82 004a 03F8062C 		strb	r2, [r3, #-6]
 218:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  83              		.loc 1 218 0
  84 004e A3F59753 		sub	r3, r3, #4832
  85 0052 0222     		movs	r2, #2
  86 0054 123B     		subs	r3, r3, #18
  87 0056 1A70     		strb	r2, [r3]
 221:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
  88              		.loc 1 221 0
  89 0058 074A     		ldr	r2, .L2+8
  90 005a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  91 005c 43F00803 		orr	r3, r3, #8
  92 0060 1370     		strb	r3, [r2]
  93              		.loc 1 223 0
  94 0062 FFF7FEFF 		bl	CyDelayUs
  95              	.LVL7:
 224:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 225:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #if(Potenciometro_SAR_IRQ_REMOVE == 0u)
 226:Generated_Source\PSoC5/Potenciometro_SAR.c ****         /* Clear a pending interrupt */
 227:Generated_Source\PSoC5/Potenciometro_SAR.c ****         CyIntClearPending(Potenciometro_SAR_INTC_NUMBER);
 228:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif   /* End Potenciometro_SAR_IRQ_REMOVE */
 229:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 230:Generated_Source\PSoC5/Potenciometro_SAR.c ****     CyExitCriticalSection(enableInterrupts);
  96              		.loc 1 230 0
  97 0066 2046     		mov	r0, r4
 231:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
  98              		.loc 1 231 0
  99 0068 BDE81040 		pop	{r4, lr}
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 7


 100              		.cfi_restore 14
 101              		.cfi_restore 4
 102              		.cfi_def_cfa_offset 0
 103              	.LVL8:
 230:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 104              		.loc 1 230 0
 105 006c FFF7FEBF 		b	CyExitCriticalSection
 106              	.LVL9:
 107              	.L3:
 108              		.align	2
 109              	.L2:
 110 0070 AB430040 		.word	1073759147
 111 0074 06590040 		.word	1073764614
 112 0078 275B0040 		.word	1073765159
 113              		.cfi_endproc
 114              	.LFE2:
 115              		.size	Potenciometro_SAR_Enable, .-Potenciometro_SAR_Enable
 116              		.section	.text.Potenciometro_SAR_Stop,"ax",%progbits
 117              		.align	1
 118              		.global	Potenciometro_SAR_Stop
 119              		.thumb
 120              		.thumb_func
 121              		.type	Potenciometro_SAR_Stop, %function
 122              	Potenciometro_SAR_Stop:
 123              	.LFB3:
 232:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 233:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 234:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_Stop
 236:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
 237:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 238:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
 239:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 241:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
 242:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
 243:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 244:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 245:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
 246:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 247:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/Potenciometro_SAR.c **** void Potenciometro_SAR_Stop(void)
 249:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
 124              		.loc 1 249 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128 0000 08B5     		push	{r3, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 3, -8
 131              		.cfi_offset 14, -4
 250:Generated_Source\PSoC5/Potenciometro_SAR.c ****     uint8 enableInterrupts;
 251:Generated_Source\PSoC5/Potenciometro_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 132              		.loc 1 251 0
 133 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 134              	.LVL10:
 252:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 8


 253:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Stop all conversions */
 254:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_SAR_CSR0_REG &= (uint8)~Potenciometro_SAR_SAR_SOF_START_CONV;
 135              		.loc 1 254 0
 136 0006 0A4A     		ldr	r2, .L5
 137 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 138 000a 03F0FE03 		and	r3, r3, #254
 139 000e 1370     		strb	r3, [r2]
 255:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_PWRMGR_SAR_REG &= (uint8)~Potenciometro_SAR_ACT_PWR_SAR_EN;
 140              		.loc 1 256 0
 141 0010 A2F5AA52 		sub	r2, r2, #5440
 142 0014 153A     		subs	r2, r2, #21
 143 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 144 0018 03F0FE03 		and	r3, r3, #254
 145 001c 1370     		strb	r3, [r2]
 257:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_STBY_PWRMGR_SAR_REG &= (uint8)~Potenciometro_SAR_STBY_PWR_SAR_EN;
 146              		.loc 1 258 0
 147 001e 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
 148 0020 03F0FE03 		and	r3, r3, #254
 149 0024 1374     		strb	r3, [r2, #16]
 259:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 260:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* This is only valid if there is an internal clock */
 261:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #if(Potenciometro_SAR_DEFAULT_INTERNAL_CLK)
 262:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_PWRMGR_CLK_REG &= (uint8)~Potenciometro_SAR_ACT_PWR_CLK_EN;
 263:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_STBY_PWRMGR_CLK_REG &= (uint8)~Potenciometro_SAR_STBY_PWR_CLK_EN;
 264:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif /* End Potenciometro_SAR_DEFAULT_INTERNAL_CLK */
 265:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 266:Generated_Source\PSoC5/Potenciometro_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 267:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 268:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 150              		.loc 1 268 0
 151 0026 BDE80840 		pop	{r3, lr}
 152              		.cfi_restore 14
 153              		.cfi_restore 3
 154              		.cfi_def_cfa_offset 0
 266:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 155              		.loc 1 266 0
 156 002a FFF7FEBF 		b	CyExitCriticalSection
 157              	.LVL11:
 158              	.L6:
 159 002e 00BF     		.align	2
 160              	.L5:
 161 0030 00590040 		.word	1073764608
 162              		.cfi_endproc
 163              	.LFE3:
 164              		.size	Potenciometro_SAR_Stop, .-Potenciometro_SAR_Stop
 165              		.section	.text.Potenciometro_SAR_SetPower,"ax",%progbits
 166              		.align	1
 167              		.global	Potenciometro_SAR_SetPower
 168              		.thumb
 169              		.thumb_func
 170              		.type	Potenciometro_SAR_SetPower, %function
 171              	Potenciometro_SAR_SetPower:
 172              	.LFB4:
 269:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 270:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 9


 271:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
 272:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_SetPower
 273:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
 274:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 275:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
 276:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  settings with faster clock speeds.
 278:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 279:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
 280:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  power:  Power setting for ADC
 281:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  0 ->    Normal
 282:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  1 ->    Medium power
 283:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  2 ->    1.25 power
 284:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  3 ->    Minimum power.
 285:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 286:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 287:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
 288:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 289:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/Potenciometro_SAR.c **** void Potenciometro_SAR_SetPower(uint8 power)
 291:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
 173              		.loc 1 291 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL12:
 292:Generated_Source\PSoC5/Potenciometro_SAR.c ****     uint8 tmpReg;
 293:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 294:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* mask off invalid power settings */
 295:Generated_Source\PSoC5/Potenciometro_SAR.c ****     power &= Potenciometro_SAR_SAR_API_POWER_MASK;
 296:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 297:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Set Power parameter  */
 298:Generated_Source\PSoC5/Potenciometro_SAR.c ****     tmpReg = Potenciometro_SAR_SAR_CSR0_REG & (uint8)~Potenciometro_SAR_SAR_POWER_MASK;
 179              		.loc 1 298 0
 180 0000 044A     		ldr	r2, .L8
 181 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 182 0004 03F03F03 		and	r3, r3, #63
 183              	.LVL13:
 299:Generated_Source\PSoC5/Potenciometro_SAR.c ****     tmpReg |= (uint8)(power << Potenciometro_SAR_SAR_POWER_SHIFT);
 184              		.loc 1 299 0
 185 0008 43EA8010 		orr	r0, r3, r0, lsl #6
 186              	.LVL14:
 187 000c C0B2     		uxtb	r0, r0
 188              	.LVL15:
 300:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_SAR_CSR0_REG = tmpReg;
 189              		.loc 1 300 0
 190 000e 1070     		strb	r0, [r2]
 191 0010 7047     		bx	lr
 192              	.L9:
 193 0012 00BF     		.align	2
 194              	.L8:
 195 0014 00590040 		.word	1073764608
 196              		.cfi_endproc
 197              	.LFE4:
 198              		.size	Potenciometro_SAR_SetPower, .-Potenciometro_SAR_SetPower
 199              		.section	.text.Potenciometro_SAR_SetResolution,"ax",%progbits
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 10


 200              		.align	1
 201              		.global	Potenciometro_SAR_SetResolution
 202              		.thumb
 203              		.thumb_func
 204              		.type	Potenciometro_SAR_SetResolution, %function
 205              	Potenciometro_SAR_SetResolution:
 206              	.LFB5:
 301:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 302:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 303:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 304:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
 305:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_SetResolution
 306:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
 307:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 308:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
 309:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Sets the Relution of the SAR.
 310:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 311:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
 312:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  resolution:
 313:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  12 ->    RES12
 314:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  10 ->    RES10
 315:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  8  ->    RES8
 316:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 317:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 318:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
 319:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 320:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Side Effects:
 321:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  recommended best practice is to stop conversions with
 323:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  conversions with ADC_StartConvert().
 325:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  If you decide not to stop conversions before calling this API, you
 326:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  before changing the resolution.
 328:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  not be changed until the current conversion is complete. Data will not be
 330:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  clock cycles.
 332:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  You may need add a delay of this number of clock cycles after
 333:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  ADC_SetResolution() is called before data is valid again.
 334:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  input range, and voltage reference.
 338:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 339:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 340:Generated_Source\PSoC5/Potenciometro_SAR.c **** void Potenciometro_SAR_SetResolution(uint8 resolution)
 341:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
 207              		.loc 1 341 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 212              	.LVL16:
 342:Generated_Source\PSoC5/Potenciometro_SAR.c ****     uint8 tmpReg;
 343:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 344:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 11


 345:Generated_Source\PSoC5/Potenciometro_SAR.c ****     switch (resolution)
 213              		.loc 1 345 0
 214 0000 0828     		cmp	r0, #8
 215 0002 04D0     		beq	.L12
 216 0004 0A28     		cmp	r0, #10
 346:Generated_Source\PSoC5/Potenciometro_SAR.c ****     {
 347:Generated_Source\PSoC5/Potenciometro_SAR.c ****         case (uint8)Potenciometro_SAR__BITS_12:
 348:Generated_Source\PSoC5/Potenciometro_SAR.c ****             tmpReg = Potenciometro_SAR_SAR_RESOLUTION_12BIT | Potenciometro_SAR_SAR_SAMPLE_WIDTH;
 217              		.loc 1 348 0
 218 0006 0CBF     		ite	eq
 219 0008 8223     		moveq	r3, #130
 220 000a C223     		movne	r3, #194
 221 000c 00E0     		b	.L13
 222              	.L12:
 223              	.LVL17:
 349:Generated_Source\PSoC5/Potenciometro_SAR.c ****             break;
 350:Generated_Source\PSoC5/Potenciometro_SAR.c ****         case (uint8)Potenciometro_SAR__BITS_10:
 351:Generated_Source\PSoC5/Potenciometro_SAR.c ****             tmpReg = Potenciometro_SAR_SAR_RESOLUTION_10BIT | Potenciometro_SAR_SAR_SAMPLE_WIDTH;
 352:Generated_Source\PSoC5/Potenciometro_SAR.c ****             break;
 353:Generated_Source\PSoC5/Potenciometro_SAR.c ****         case (uint8)Potenciometro_SAR__BITS_8:
 354:Generated_Source\PSoC5/Potenciometro_SAR.c ****             tmpReg = Potenciometro_SAR_SAR_RESOLUTION_8BIT | Potenciometro_SAR_SAR_SAMPLE_WIDTH;
 224              		.loc 1 354 0
 225 000e 4223     		movs	r3, #66
 226              	.LVL18:
 227              	.L13:
 228 0010 0838     		subs	r0, r0, #8
 229              	.LVL19:
 355:Generated_Source\PSoC5/Potenciometro_SAR.c ****             break;
 356:Generated_Source\PSoC5/Potenciometro_SAR.c ****         default:
 357:Generated_Source\PSoC5/Potenciometro_SAR.c ****             tmpReg = Potenciometro_SAR_SAR_RESOLUTION_12BIT | Potenciometro_SAR_SAR_SAMPLE_WIDTH;
 358:Generated_Source\PSoC5/Potenciometro_SAR.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:Generated_Source\PSoC5/Potenciometro_SAR.c ****             CYASSERT(0u != 0u);
 360:Generated_Source\PSoC5/Potenciometro_SAR.c ****             break;
 361:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
 362:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_SAR_CSR2_REG = tmpReg;
 230              		.loc 1 362 0
 231 0012 0E4A     		ldr	r2, .L18
 232 0014 C0B2     		uxtb	r0, r0
 233 0016 0428     		cmp	r0, #4
 234 0018 1370     		strb	r3, [r2]
 235              	.LVL20:
 236 001a 98BF     		it	ls
 237 001c 0C4B     		ldrls	r3, .L18+4
 238 001e 4FF00002 		mov	r2, #0
 239 0022 98BF     		it	ls
 240 0024 33F91010 		ldrshls	r1, [r3, r0, lsl #1]
 241              	.LBB4:
 242              	.LBB5:
 363:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 364:Generated_Source\PSoC5/Potenciometro_SAR.c ****      /* Calculate gain for convert counts to volts */
 365:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_CalcGain(resolution);
 366:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 367:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 368:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 369:Generated_Source\PSoC5/Potenciometro_SAR.c **** #if(Potenciometro_SAR_DEFAULT_CONV_MODE != Potenciometro_SAR__HARDWARE_TRIGGER)
 370:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 371:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 12


 372:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /*******************************************************************************
 373:Generated_Source\PSoC5/Potenciometro_SAR.c ****     * Function Name: Potenciometro_SAR_StartConvert
 374:Generated_Source\PSoC5/Potenciometro_SAR.c ****     ********************************************************************************
 375:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *
 376:Generated_Source\PSoC5/Potenciometro_SAR.c ****     * Summary:
 377:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  version of the SOC and every conversion must be triggered by
 380:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  Potenciometro_SAR_StartConvert(). This function is not available when the
 381:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  Hardware Trigger sample mode is selected.
 382:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *
 383:Generated_Source\PSoC5/Potenciometro_SAR.c ****     * Parameters:
 384:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  None.
 385:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *
 386:Generated_Source\PSoC5/Potenciometro_SAR.c ****     * Return:
 387:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  None.
 388:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *
 389:Generated_Source\PSoC5/Potenciometro_SAR.c ****     * Theory:
 390:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *
 395:Generated_Source\PSoC5/Potenciometro_SAR.c ****     * Side Effects:
 396:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  external pin to the internal SOF generation. Application should not call
 398:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  StartConvert if external source used for SOF.
 399:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *
 400:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *******************************************************************************/
 401:Generated_Source\PSoC5/Potenciometro_SAR.c ****     void Potenciometro_SAR_StartConvert(void)
 402:Generated_Source\PSoC5/Potenciometro_SAR.c ****     {
 403:Generated_Source\PSoC5/Potenciometro_SAR.c ****         #if(Potenciometro_SAR_DEFAULT_CONV_MODE != Potenciometro_SAR__FREE_RUNNING)  /* If software
 404:Generated_Source\PSoC5/Potenciometro_SAR.c ****             Potenciometro_SAR_SAR_CSR0_REG &= (uint8)~Potenciometro_SAR_SAR_MX_SOF_UDB;   /* source
 405:Generated_Source\PSoC5/Potenciometro_SAR.c ****         #endif /* End Potenciometro_SAR_DEFAULT_CONV_MODE */
 406:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 407:Generated_Source\PSoC5/Potenciometro_SAR.c ****         /* Start the conversion */
 408:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_SAR_CSR0_REG |= Potenciometro_SAR_SAR_SOF_START_CONV;
 409:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
 410:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 411:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 412:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /*******************************************************************************
 413:Generated_Source\PSoC5/Potenciometro_SAR.c ****     * Function Name: Potenciometro_SAR_StopConvert
 414:Generated_Source\PSoC5/Potenciometro_SAR.c ****     ********************************************************************************
 415:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *
 416:Generated_Source\PSoC5/Potenciometro_SAR.c ****     * Summary:
 417:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *
 421:Generated_Source\PSoC5/Potenciometro_SAR.c ****     * Parameters:
 422:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  None.
 423:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *
 424:Generated_Source\PSoC5/Potenciometro_SAR.c ****     * Return:
 425:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  None.
 426:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *
 427:Generated_Source\PSoC5/Potenciometro_SAR.c ****     * Theory:
 428:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  Stops ADC conversion in Free Running mode.
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 13


 429:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *
 430:Generated_Source\PSoC5/Potenciometro_SAR.c ****     * Side Effects:
 431:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *
 434:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *******************************************************************************/
 435:Generated_Source\PSoC5/Potenciometro_SAR.c ****     void Potenciometro_SAR_StopConvert(void)
 436:Generated_Source\PSoC5/Potenciometro_SAR.c ****     {
 437:Generated_Source\PSoC5/Potenciometro_SAR.c ****         /* Stop all conversions */
 438:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_SAR_CSR0_REG &= (uint8)~Potenciometro_SAR_SAR_SOF_START_CONV;
 439:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 440:Generated_Source\PSoC5/Potenciometro_SAR.c ****         #if(Potenciometro_SAR_DEFAULT_CONV_MODE != Potenciometro_SAR__FREE_RUNNING)  /* If software
 441:Generated_Source\PSoC5/Potenciometro_SAR.c ****             /* Return source to UDB for hardware SOF signal */
 442:Generated_Source\PSoC5/Potenciometro_SAR.c ****             Potenciometro_SAR_SAR_CSR0_REG |= Potenciometro_SAR_SAR_MX_SOF_UDB;    /* source: UDB *
 443:Generated_Source\PSoC5/Potenciometro_SAR.c ****         #endif /* End Potenciometro_SAR_DEFAULT_CONV_MODE */
 444:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 445:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
 446:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 447:Generated_Source\PSoC5/Potenciometro_SAR.c **** #endif /* End Potenciometro_SAR_DEFAULT_CONV_MODE != Potenciometro_SAR__HARDWARE_TRIGGER */
 448:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 449:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 450:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_IsEndConversion
 452:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
 453:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 454:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
 455:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Immediately returns the status of the conversion or does not return
 456:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  parameter.
 458:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 459:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
 460:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  retMode:  Check conversion return mode.
 461:Generated_Source\PSoC5/Potenciometro_SAR.c **** *   Potenciometro_SAR_RETURN_STATUS: Immediately returns the status. If the
 462:Generated_Source\PSoC5/Potenciometro_SAR.c **** *     value returned is zero, the conversion is not complete, and this function
 463:Generated_Source\PSoC5/Potenciometro_SAR.c **** *     should be retried until a nonzero result is returned.
 464:Generated_Source\PSoC5/Potenciometro_SAR.c **** *   Potenciometro_SAR_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:Generated_Source\PSoC5/Potenciometro_SAR.c **** *     conversion is complete.
 466:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 467:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 468:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:Generated_Source\PSoC5/Potenciometro_SAR.c **** *           1 =>  The last conversion is complete.
 470:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 471:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Side Effects:
 472:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 474:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 475:Generated_Source\PSoC5/Potenciometro_SAR.c **** uint8 Potenciometro_SAR_IsEndConversion(uint8 retMode)
 476:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
 477:Generated_Source\PSoC5/Potenciometro_SAR.c ****     uint8 status;
 478:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 479:Generated_Source\PSoC5/Potenciometro_SAR.c ****     do
 480:Generated_Source\PSoC5/Potenciometro_SAR.c ****     {
 481:Generated_Source\PSoC5/Potenciometro_SAR.c ****         status = Potenciometro_SAR_SAR_CSR1_REG & Potenciometro_SAR_SAR_EOF_1;
 482:Generated_Source\PSoC5/Potenciometro_SAR.c ****     } while ((status != Potenciometro_SAR_SAR_EOF_1) && (retMode == Potenciometro_SAR_WAIT_FOR_RESU
 483:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* If convertion complete, wait until EOF bit released */
 484:Generated_Source\PSoC5/Potenciometro_SAR.c ****     if(status == Potenciometro_SAR_SAR_EOF_1)
 485:Generated_Source\PSoC5/Potenciometro_SAR.c ****     {
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 14


 486:Generated_Source\PSoC5/Potenciometro_SAR.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:Generated_Source\PSoC5/Potenciometro_SAR.c ****         CyDelayUs(1u);
 488:Generated_Source\PSoC5/Potenciometro_SAR.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:Generated_Source\PSoC5/Potenciometro_SAR.c ****         CY_GET_REG8(Potenciometro_SAR_SAR_CSR1_PTR);
 490:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
 491:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 492:Generated_Source\PSoC5/Potenciometro_SAR.c ****     return(status);
 493:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 494:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 495:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 496:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_GetResult8
 498:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
 499:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 500:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
 501:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  than 8 bits, the function returns the LSB of the result.
 503:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_IsEndConversion() should be called to verify that the data
 504:Generated_Source\PSoC5/Potenciometro_SAR.c **** *   sample is ready.
 505:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 506:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
 507:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
 508:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 509:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 510:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  The LSB of the last ADC conversion.
 511:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 512:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Global Variables:
 513:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_shift - used to convert the ADC counts to the 2s
 514:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  compliment form.
 515:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 516:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Side Effects:
 517:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 518:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 519:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 520:Generated_Source\PSoC5/Potenciometro_SAR.c **** int8 Potenciometro_SAR_GetResult8( void )
 521:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
 522:Generated_Source\PSoC5/Potenciometro_SAR.c ****     return( (int8)Potenciometro_SAR_SAR_WRK0_REG - (int8)Potenciometro_SAR_shift);
 523:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 524:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 525:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 526:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
 527:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_GetResult16
 528:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
 529:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 530:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
 531:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  of 8 to 12 bits.
 533:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_IsEndConversion() should be called to verify that the data
 534:Generated_Source\PSoC5/Potenciometro_SAR.c **** *   sample is ready
 535:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 536:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
 537:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
 538:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 539:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 540:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  The 16-bit result of the last ADC conversion
 541:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 542:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Global Variables:
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 15


 543:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_shift - used to convert the ADC counts to the 2s
 544:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  compliment form.
 545:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 546:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Side Effects:
 547:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 548:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 549:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 550:Generated_Source\PSoC5/Potenciometro_SAR.c **** int16 Potenciometro_SAR_GetResult16( void )
 551:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
 552:Generated_Source\PSoC5/Potenciometro_SAR.c ****     uint16 res;
 553:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 554:Generated_Source\PSoC5/Potenciometro_SAR.c ****     res = CY_GET_REG16(Potenciometro_SAR_SAR_WRK_PTR);
 555:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 556:Generated_Source\PSoC5/Potenciometro_SAR.c ****     return( (int16)res - Potenciometro_SAR_shift );
 557:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 558:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 559:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 560:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
 561:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_SetOffset
 562:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
 563:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 564:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
 565:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Sets the ADC offset, which is used by Potenciometro_SAR_CountsTo_Volts(),
 566:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_CountsTo_mVolts(), and Potenciometro_SAR_CountsTo_uVolts()
 567:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  conversion.
 569:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 570:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
 571:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:Generated_Source\PSoC5/Potenciometro_SAR.c ****    the same input voltage.
 573:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 574:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 575:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
 576:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 577:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Global Variables:
 578:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  The Potenciometro_SAR_offset variable modified. This variable is used for
 579:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  offset calibration purpose.
 580:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Affects the Potenciometro_SAR_CountsTo_Volts,
 581:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_CountsTo_mVolts, Potenciometro_SAR_CountsTo_uVolts functions
 582:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  by subtracting the given offset.
 583:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 584:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 585:Generated_Source\PSoC5/Potenciometro_SAR.c **** void Potenciometro_SAR_SetOffset(int16 offset)
 586:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
 587:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_offset = offset;
 588:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 589:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 590:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 591:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
 592:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_CalcGain
 593:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
 594:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 595:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
 596:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 598:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
 599:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  uint8: resolution
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 16


 600:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 601:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 602:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
 603:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 604:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Global Variables:
 605:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_shift variable initialized. This variable is used to
 606:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  convert the ADC counts to the 2s compliment form.
 607:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_countsPer10Volt variable initialized. This variable is used
 608:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  for gain calibration purpose.
 609:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 610:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 611:Generated_Source\PSoC5/Potenciometro_SAR.c **** static void Potenciometro_SAR_CalcGain( uint8 resolution )
 612:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
 613:Generated_Source\PSoC5/Potenciometro_SAR.c ****     int32 counts;
 614:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #if(!((Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSS_TO_VREF) || \
 615:Generated_Source\PSoC5/Potenciometro_SAR.c ****          (Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSSA_TO_VDDA) || \
 616:Generated_Source\PSoC5/Potenciometro_SAR.c ****          (Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSSA_TO_VDAC)) )
 617:Generated_Source\PSoC5/Potenciometro_SAR.c ****         uint16 diff_zero;
 618:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif /* End Potenciometro_SAR_DEFAULT_RANGE */
 619:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 620:Generated_Source\PSoC5/Potenciometro_SAR.c ****     switch (resolution)
 621:Generated_Source\PSoC5/Potenciometro_SAR.c ****     {
 622:Generated_Source\PSoC5/Potenciometro_SAR.c ****         case (uint8)Potenciometro_SAR__BITS_12:
 623:Generated_Source\PSoC5/Potenciometro_SAR.c ****             counts = (int32)Potenciometro_SAR_SAR_WRK_MAX_12BIT;
 624:Generated_Source\PSoC5/Potenciometro_SAR.c ****             #if(!((Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSS_TO_VREF) || \
 625:Generated_Source\PSoC5/Potenciometro_SAR.c ****                  (Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSSA_TO_VDDA) || \
 626:Generated_Source\PSoC5/Potenciometro_SAR.c ****                  (Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSSA_TO_VDAC)) )
 627:Generated_Source\PSoC5/Potenciometro_SAR.c ****                 diff_zero = Potenciometro_SAR_SAR_DIFF_SHIFT;
 628:Generated_Source\PSoC5/Potenciometro_SAR.c ****             #endif /* End Potenciometro_SAR_DEFAULT_RANGE */
 629:Generated_Source\PSoC5/Potenciometro_SAR.c ****             break;
 630:Generated_Source\PSoC5/Potenciometro_SAR.c ****         case (uint8)Potenciometro_SAR__BITS_10:
 631:Generated_Source\PSoC5/Potenciometro_SAR.c ****             counts = (int32)Potenciometro_SAR_SAR_WRK_MAX_10BIT;
 632:Generated_Source\PSoC5/Potenciometro_SAR.c ****             #if(!((Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSS_TO_VREF) || \
 633:Generated_Source\PSoC5/Potenciometro_SAR.c ****                  (Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSSA_TO_VDDA) || \
 634:Generated_Source\PSoC5/Potenciometro_SAR.c ****                  (Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSSA_TO_VDAC)) )
 635:Generated_Source\PSoC5/Potenciometro_SAR.c ****                 diff_zero = Potenciometro_SAR_SAR_DIFF_SHIFT >> 2u;
 636:Generated_Source\PSoC5/Potenciometro_SAR.c ****             #endif /* End Potenciometro_SAR_DEFAULT_RANGE */
 637:Generated_Source\PSoC5/Potenciometro_SAR.c ****             break;
 638:Generated_Source\PSoC5/Potenciometro_SAR.c ****         case (uint8)Potenciometro_SAR__BITS_8:
 639:Generated_Source\PSoC5/Potenciometro_SAR.c ****             counts = (int32)Potenciometro_SAR_SAR_WRK_MAX_8BIT;
 640:Generated_Source\PSoC5/Potenciometro_SAR.c ****             #if(!((Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSS_TO_VREF) || \
 641:Generated_Source\PSoC5/Potenciometro_SAR.c ****                  (Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSSA_TO_VDDA) || \
 642:Generated_Source\PSoC5/Potenciometro_SAR.c ****                  (Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSSA_TO_VDAC)) )
 643:Generated_Source\PSoC5/Potenciometro_SAR.c ****                 diff_zero = Potenciometro_SAR_SAR_DIFF_SHIFT >> 4u;
 644:Generated_Source\PSoC5/Potenciometro_SAR.c ****             #endif /* End Potenciometro_SAR_DEFAULT_RANGE */
 645:Generated_Source\PSoC5/Potenciometro_SAR.c ****             break;
 646:Generated_Source\PSoC5/Potenciometro_SAR.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:Generated_Source\PSoC5/Potenciometro_SAR.c ****             counts = 0;
 648:Generated_Source\PSoC5/Potenciometro_SAR.c ****             #if(!((Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSS_TO_VREF) || \
 649:Generated_Source\PSoC5/Potenciometro_SAR.c ****                  (Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSSA_TO_VDDA) || \
 650:Generated_Source\PSoC5/Potenciometro_SAR.c ****                  (Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSSA_TO_VDAC)) )
 651:Generated_Source\PSoC5/Potenciometro_SAR.c ****                 diff_zero = 0u;
 652:Generated_Source\PSoC5/Potenciometro_SAR.c ****             #endif /* End Potenciometro_SAR_DEFAULT_RANGE */
 653:Generated_Source\PSoC5/Potenciometro_SAR.c ****             CYASSERT(0u != 0u);
 654:Generated_Source\PSoC5/Potenciometro_SAR.c ****             break;
 655:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
 656:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_countsPerVolt = 0; /* Clear obsolete variable */
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 17


 243              		.loc 1 656 0
 244 0028 0A4B     		ldr	r3, .L18+8
 245              	.LBE5:
 246              	.LBE4:
 362:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 247              		.loc 1 362 0
 248 002a 88BF     		it	hi
 249 002c 1146     		movhi	r1, r2
 250              	.LVL21:
 251              	.LBB7:
 252              	.LBB6:
 253              		.loc 1 656 0
 254 002e 1A80     		strh	r2, [r3]	@ movhi
 657:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_countsPer10Volt = (((counts * Potenciometro_SAR_10MV_COUNTS) +
 659:Generated_Source\PSoC5/Potenciometro_SAR.c ****                         Potenciometro_SAR_DEFAULT_REF_VOLTAGE_MV) / (Potenciometro_SAR_DEFAULT_REF_
 255              		.loc 1 659 0
 256 0030 42F21073 		movw	r3, #10000
 257 0034 4B43     		muls	r3, r1, r3
 258 0036 41F28831 		movw	r1, #5000
 259              	.LVL22:
 260 003a 03F6C413 		addw	r3, r3, #2500
 261 003e 93FBF1F3 		sdiv	r3, r3, r1
 658:Generated_Source\PSoC5/Potenciometro_SAR.c ****                         Potenciometro_SAR_DEFAULT_REF_VOLTAGE_MV) / (Potenciometro_SAR_DEFAULT_REF_
 262              		.loc 1 658 0
 263 0042 0549     		ldr	r1, .L18+12
 264 0044 0B60     		str	r3, [r1]
 660:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 661:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #if( (Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSS_TO_VREF) || \
 662:Generated_Source\PSoC5/Potenciometro_SAR.c ****          (Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSSA_TO_VDDA) || \
 663:Generated_Source\PSoC5/Potenciometro_SAR.c ****          (Potenciometro_SAR_DEFAULT_RANGE == Potenciometro_SAR__VSSA_TO_VDAC) )
 664:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_shift = 0;
 265              		.loc 1 664 0
 266 0046 054B     		ldr	r3, .L18+16
 267 0048 1A80     		strh	r2, [r3]	@ movhi
 268 004a 7047     		bx	lr
 269              	.L19:
 270              		.align	2
 271              	.L18:
 272 004c 02590040 		.word	1073764610
 273 0050 00000000 		.word	.LANCHOR0
 274 0054 00000000 		.word	Potenciometro_SAR_countsPerVolt
 275 0058 00000000 		.word	Potenciometro_SAR_countsPer10Volt
 276 005c 00000000 		.word	Potenciometro_SAR_shift
 277              	.LBE6:
 278              	.LBE7:
 279              		.cfi_endproc
 280              	.LFE5:
 281              		.size	Potenciometro_SAR_SetResolution, .-Potenciometro_SAR_SetResolution
 282              		.section	.text.Potenciometro_SAR_Init,"ax",%progbits
 283              		.align	1
 284              		.global	Potenciometro_SAR_Init
 285              		.thumb
 286              		.thumb_func
 287              		.type	Potenciometro_SAR_Init, %function
 288              	Potenciometro_SAR_Init:
 289              	.LFB1:
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 18


 107:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 290              		.loc 1 107 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294 0000 08B5     		push	{r3, lr}
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 3, -8
 297              		.cfi_offset 14, -4
 121:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 298              		.loc 1 121 0
 299 0002 064A     		ldr	r2, .L21
 124:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_offset = 0;
 300              		.loc 1 124 0
 301 0004 0C20     		movs	r0, #12
 121:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 302              		.loc 1 121 0
 303 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 304 0008 43F00603 		orr	r3, r3, #6
 305 000c 1370     		strb	r3, [r2]
 124:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_offset = 0;
 306              		.loc 1 124 0
 307 000e FFF7FEFF 		bl	Potenciometro_SAR_SetResolution
 308              	.LVL23:
 125:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 309              		.loc 1 125 0
 310 0012 034B     		ldr	r3, .L21+4
 311 0014 0022     		movs	r2, #0
 312 0016 1A80     		strh	r2, [r3]	@ movhi
 313 0018 08BD     		pop	{r3, pc}
 314              	.L22:
 315 001a 00BF     		.align	2
 316              	.L21:
 317 001c 01590040 		.word	1073764609
 318 0020 00000000 		.word	Potenciometro_SAR_offset
 319              		.cfi_endproc
 320              	.LFE1:
 321              		.size	Potenciometro_SAR_Init, .-Potenciometro_SAR_Init
 322              		.section	.text.Potenciometro_SAR_Start,"ax",%progbits
 323              		.align	1
 324              		.global	Potenciometro_SAR_Start
 325              		.thumb
 326              		.thumb_func
 327              		.type	Potenciometro_SAR_Start, %function
 328              	Potenciometro_SAR_Start:
 329              	.LFB0:
  75:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 330              		.loc 1 75 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334 0000 10B5     		push	{r4, lr}
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 4, -8
 337              		.cfi_offset 14, -4
  78:Generated_Source\PSoC5/Potenciometro_SAR.c ****     {
 338              		.loc 1 78 0
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 19


 339 0002 054C     		ldr	r4, .L25
 340 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 341 0006 1BB9     		cbnz	r3, .L24
  80:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_initVar = 1u;
 342              		.loc 1 80 0
 343 0008 FFF7FEFF 		bl	Potenciometro_SAR_Init
 344              	.LVL24:
  81:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
 345              		.loc 1 81 0
 346 000c 0123     		movs	r3, #1
 347 000e 2370     		strb	r3, [r4]
 348              	.L24:
  84:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 349              		.loc 1 84 0
 350 0010 BDE81040 		pop	{r4, lr}
 351              		.cfi_restore 14
 352              		.cfi_restore 4
 353              		.cfi_def_cfa_offset 0
  83:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 354              		.loc 1 83 0
 355 0014 FFF7FEBF 		b	Potenciometro_SAR_Enable
 356              	.LVL25:
 357              	.L26:
 358              		.align	2
 359              	.L25:
 360 0018 00000000 		.word	.LANCHOR1
 361              		.cfi_endproc
 362              	.LFE0:
 363              		.size	Potenciometro_SAR_Start, .-Potenciometro_SAR_Start
 364              		.section	.text.Potenciometro_SAR_StartConvert,"ax",%progbits
 365              		.align	1
 366              		.global	Potenciometro_SAR_StartConvert
 367              		.thumb
 368              		.thumb_func
 369              		.type	Potenciometro_SAR_StartConvert, %function
 370              	Potenciometro_SAR_StartConvert:
 371              	.LFB6:
 402:Generated_Source\PSoC5/Potenciometro_SAR.c ****         #if(Potenciometro_SAR_DEFAULT_CONV_MODE != Potenciometro_SAR__FREE_RUNNING)  /* If software
 372              		.loc 1 402 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 408:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
 377              		.loc 1 408 0
 378 0000 024A     		ldr	r2, .L28
 379 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 380 0004 43F00103 		orr	r3, r3, #1
 381 0008 1370     		strb	r3, [r2]
 382 000a 7047     		bx	lr
 383              	.L29:
 384              		.align	2
 385              	.L28:
 386 000c 00590040 		.word	1073764608
 387              		.cfi_endproc
 388              	.LFE6:
 389              		.size	Potenciometro_SAR_StartConvert, .-Potenciometro_SAR_StartConvert
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 20


 390              		.section	.text.Potenciometro_SAR_StopConvert,"ax",%progbits
 391              		.align	1
 392              		.global	Potenciometro_SAR_StopConvert
 393              		.thumb
 394              		.thumb_func
 395              		.type	Potenciometro_SAR_StopConvert, %function
 396              	Potenciometro_SAR_StopConvert:
 397              	.LFB7:
 436:Generated_Source\PSoC5/Potenciometro_SAR.c ****         /* Stop all conversions */
 398              		.loc 1 436 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402              		@ link register save eliminated.
 438:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 403              		.loc 1 438 0
 404 0000 024A     		ldr	r2, .L31
 405 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 406 0004 03F0FE03 		and	r3, r3, #254
 407 0008 1370     		strb	r3, [r2]
 408 000a 7047     		bx	lr
 409              	.L32:
 410              		.align	2
 411              	.L31:
 412 000c 00590040 		.word	1073764608
 413              		.cfi_endproc
 414              	.LFE7:
 415              		.size	Potenciometro_SAR_StopConvert, .-Potenciometro_SAR_StopConvert
 416              		.section	.text.Potenciometro_SAR_IsEndConversion,"ax",%progbits
 417              		.align	1
 418              		.global	Potenciometro_SAR_IsEndConversion
 419              		.thumb
 420              		.thumb_func
 421              		.type	Potenciometro_SAR_IsEndConversion, %function
 422              	Potenciometro_SAR_IsEndConversion:
 423              	.LFB8:
 476:Generated_Source\PSoC5/Potenciometro_SAR.c ****     uint8 status;
 424              		.loc 1 476 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              	.LVL26:
 429 0000 10B5     		push	{r4, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 4, -8
 432              		.cfi_offset 14, -4
 481:Generated_Source\PSoC5/Potenciometro_SAR.c ****     } while ((status != Potenciometro_SAR_SAR_EOF_1) && (retMode == Potenciometro_SAR_WAIT_FOR_RESU
 433              		.loc 1 481 0
 434 0002 084B     		ldr	r3, .L40
 435              	.L35:
 481:Generated_Source\PSoC5/Potenciometro_SAR.c ****     } while ((status != Potenciometro_SAR_SAR_EOF_1) && (retMode == Potenciometro_SAR_WAIT_FOR_RESU
 436              		.loc 1 481 0 is_stmt 0 discriminator 2
 437 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 438              	.LVL27:
 482:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* If convertion complete, wait until EOF bit released */
 439              		.loc 1 482 0 is_stmt 1 discriminator 2
 440 0006 14F00104 		ands	r4, r4, #1
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 21


 441              	.LVL28:
 442 000a 03D1     		bne	.L34
 482:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* If convertion complete, wait until EOF bit released */
 443              		.loc 1 482 0 is_stmt 0 discriminator 1
 444 000c 0028     		cmp	r0, #0
 445 000e F9D0     		beq	.L35
 446 0010 0024     		movs	r4, #0
 447 0012 04E0     		b	.L39
 448              	.L34:
 487:Generated_Source\PSoC5/Potenciometro_SAR.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 449              		.loc 1 487 0 is_stmt 1
 450 0014 2046     		mov	r0, r4
 451              	.LVL29:
 452 0016 FFF7FEFF 		bl	CyDelayUs
 453              	.LVL30:
 489:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
 454              		.loc 1 489 0
 455 001a 024B     		ldr	r3, .L40
 456 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 457              	.L39:
 493:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 458              		.loc 1 493 0
 459 001e 2046     		mov	r0, r4
 460 0020 10BD     		pop	{r4, pc}
 461              	.L41:
 462 0022 00BF     		.align	2
 463              	.L40:
 464 0024 01590040 		.word	1073764609
 465              		.cfi_endproc
 466              	.LFE8:
 467              		.size	Potenciometro_SAR_IsEndConversion, .-Potenciometro_SAR_IsEndConversion
 468              		.section	.text.Potenciometro_SAR_GetResult8,"ax",%progbits
 469              		.align	1
 470              		.global	Potenciometro_SAR_GetResult8
 471              		.thumb
 472              		.thumb_func
 473              		.type	Potenciometro_SAR_GetResult8, %function
 474              	Potenciometro_SAR_GetResult8:
 475              	.LFB9:
 521:Generated_Source\PSoC5/Potenciometro_SAR.c ****     return( (int8)Potenciometro_SAR_SAR_WRK0_REG - (int8)Potenciometro_SAR_shift);
 476              		.loc 1 521 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480              		@ link register save eliminated.
 522:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 481              		.loc 1 522 0
 482 0000 034A     		ldr	r2, .L43
 483 0002 044B     		ldr	r3, .L43+4
 484 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485 0006 1088     		ldrh	r0, [r2]
 486 0008 181A     		subs	r0, r3, r0
 523:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 487              		.loc 1 523 0
 488 000a 40B2     		sxtb	r0, r0
 489 000c 7047     		bx	lr
 490              	.L44:
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 22


 491 000e 00BF     		.align	2
 492              	.L43:
 493 0010 00000000 		.word	Potenciometro_SAR_shift
 494 0014 A05B0040 		.word	1073765280
 495              		.cfi_endproc
 496              	.LFE9:
 497              		.size	Potenciometro_SAR_GetResult8, .-Potenciometro_SAR_GetResult8
 498              		.section	.text.Potenciometro_SAR_GetResult16,"ax",%progbits
 499              		.align	1
 500              		.global	Potenciometro_SAR_GetResult16
 501              		.thumb
 502              		.thumb_func
 503              		.type	Potenciometro_SAR_GetResult16, %function
 504              	Potenciometro_SAR_GetResult16:
 505              	.LFB10:
 551:Generated_Source\PSoC5/Potenciometro_SAR.c ****     uint16 res;
 506              		.loc 1 551 0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
 556:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 511              		.loc 1 556 0
 512 0000 034A     		ldr	r2, .L46
 554:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 513              		.loc 1 554 0
 514 0002 044B     		ldr	r3, .L46+4
 515 0004 1B88     		ldrh	r3, [r3]
 516              	.LVL31:
 556:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 517              		.loc 1 556 0
 518 0006 1088     		ldrh	r0, [r2]
 519 0008 181A     		subs	r0, r3, r0
 557:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 520              		.loc 1 557 0
 521 000a 00B2     		sxth	r0, r0
 522 000c 7047     		bx	lr
 523              	.L47:
 524 000e 00BF     		.align	2
 525              	.L46:
 526 0010 00000000 		.word	Potenciometro_SAR_shift
 527 0014 A05B0040 		.word	1073765280
 528              		.cfi_endproc
 529              	.LFE10:
 530              		.size	Potenciometro_SAR_GetResult16, .-Potenciometro_SAR_GetResult16
 531              		.section	.text.Potenciometro_SAR_SetOffset,"ax",%progbits
 532              		.align	1
 533              		.global	Potenciometro_SAR_SetOffset
 534              		.thumb
 535              		.thumb_func
 536              		.type	Potenciometro_SAR_SetOffset, %function
 537              	Potenciometro_SAR_SetOffset:
 538              	.LFB11:
 586:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_offset = offset;
 539              		.loc 1 586 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 23


 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 544              	.LVL32:
 587:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 545              		.loc 1 587 0
 546 0000 014B     		ldr	r3, .L49
 547 0002 1880     		strh	r0, [r3]	@ movhi
 548 0004 7047     		bx	lr
 549              	.L50:
 550 0006 00BF     		.align	2
 551              	.L49:
 552 0008 00000000 		.word	Potenciometro_SAR_offset
 553              		.cfi_endproc
 554              	.LFE11:
 555              		.size	Potenciometro_SAR_SetOffset, .-Potenciometro_SAR_SetOffset
 556              		.section	.text.Potenciometro_SAR_SetGain,"ax",%progbits
 557              		.align	1
 558              		.global	Potenciometro_SAR_SetGain
 559              		.thumb
 560              		.thumb_func
 561              		.type	Potenciometro_SAR_SetGain, %function
 562              	Potenciometro_SAR_SetGain:
 563              	.LFB13:
 665:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #else
 666:Generated_Source\PSoC5/Potenciometro_SAR.c ****         Potenciometro_SAR_shift = diff_zero;
 667:Generated_Source\PSoC5/Potenciometro_SAR.c ****     #endif /* End Potenciometro_SAR_DEFAULT_RANGE */
 668:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 669:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 670:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 671:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_SetGain
 673:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
 674:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 675:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
 676:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  that follow. This value is set by default by the reference and input range
 678:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  input or if the ADC is using an external reference.
 680:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 681:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
 682:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  int16 adcGain counts per volt
 683:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 684:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 685:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
 686:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 687:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Global Variables:
 688:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_countsPer10Volt variable modified. This variable is used
 689:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  for gain calibration purpose.
 690:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 691:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 692:Generated_Source\PSoC5/Potenciometro_SAR.c **** void Potenciometro_SAR_SetGain(int16 adcGain)
 693:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
 564              		.loc 1 693 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 24


 569              	.LVL33:
 694:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_countsPer10Volt = (int32)adcGain * 10;
 570              		.loc 1 694 0
 571 0000 0A23     		movs	r3, #10
 572 0002 5843     		muls	r0, r3, r0
 573              	.LVL34:
 574 0004 014B     		ldr	r3, .L52
 575 0006 1860     		str	r0, [r3]
 576 0008 7047     		bx	lr
 577              	.L53:
 578 000a 00BF     		.align	2
 579              	.L52:
 580 000c 00000000 		.word	Potenciometro_SAR_countsPer10Volt
 581              		.cfi_endproc
 582              	.LFE13:
 583              		.size	Potenciometro_SAR_SetGain, .-Potenciometro_SAR_SetGain
 584              		.section	.text.Potenciometro_SAR_SetScaledGain,"ax",%progbits
 585              		.align	1
 586              		.global	Potenciometro_SAR_SetScaledGain
 587              		.thumb
 588              		.thumb_func
 589              		.type	Potenciometro_SAR_SetScaledGain, %function
 590              	Potenciometro_SAR_SetScaledGain:
 591              	.LFB14:
 695:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 696:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 697:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 698:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
 699:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_SetScaledGain
 700:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
 701:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 702:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
 703:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  that follow. This value is set by default by the reference and input range
 705:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  input or if the ADC is using an external reference.
 707:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 708:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
 709:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  int32 adcGain  counts per 10 volt
 710:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 711:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 712:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  None.
 713:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 714:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Global Variables:
 715:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_countsPer10Volt variable modified. This variable is used
 716:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  for gain calibration purpose.
 717:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 718:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 719:Generated_Source\PSoC5/Potenciometro_SAR.c **** void Potenciometro_SAR_SetScaledGain(int32 adcGain)
 720:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
 592              		.loc 1 720 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 597              	.LVL35:
 721:Generated_Source\PSoC5/Potenciometro_SAR.c ****     Potenciometro_SAR_countsPer10Volt = adcGain;
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 25


 598              		.loc 1 721 0
 599 0000 014B     		ldr	r3, .L55
 600 0002 1860     		str	r0, [r3]
 601 0004 7047     		bx	lr
 602              	.L56:
 603 0006 00BF     		.align	2
 604              	.L55:
 605 0008 00000000 		.word	Potenciometro_SAR_countsPer10Volt
 606              		.cfi_endproc
 607              	.LFE14:
 608              		.size	Potenciometro_SAR_SetScaledGain, .-Potenciometro_SAR_SetScaledGain
 609              		.section	.text.Potenciometro_SAR_CountsTo_mVolts,"ax",%progbits
 610              		.align	1
 611              		.global	Potenciometro_SAR_CountsTo_mVolts
 612              		.thumb
 613              		.thumb_func
 614              		.type	Potenciometro_SAR_CountsTo_mVolts, %function
 615              	Potenciometro_SAR_CountsTo_mVolts:
 616              	.LFB15:
 722:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 723:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 724:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 725:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
 726:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_CountsTo_mVolts
 727:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
 728:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 729:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
 730:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 732:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
 733:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 735:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 736:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  int16 Result in mVolts
 737:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 738:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Global Variables:
 739:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_offset variable used.
 740:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_countsPer10Volt variable used.
 741:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 742:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/Potenciometro_SAR.c **** int16 Potenciometro_SAR_CountsTo_mVolts(int16 adcCounts)
 744:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
 617              		.loc 1 744 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 622              	.LVL36:
 745:Generated_Source\PSoC5/Potenciometro_SAR.c ****     int16 mVolts;
 746:Generated_Source\PSoC5/Potenciometro_SAR.c ****     int32 countsPer10Volt;
 747:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 748:Generated_Source\PSoC5/Potenciometro_SAR.c ****     if(Potenciometro_SAR_countsPerVolt != 0)
 623              		.loc 1 748 0
 624 0000 0E4A     		ldr	r2, .L62
 625 0002 1388     		ldrh	r3, [r2]
 626 0004 1BB2     		sxth	r3, r3
 627 0006 23B1     		cbz	r3, .L58
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 26


 749:Generated_Source\PSoC5/Potenciometro_SAR.c ****     {   /* Support obsolete method */
 750:Generated_Source\PSoC5/Potenciometro_SAR.c ****         countsPer10Volt = (int32)Potenciometro_SAR_countsPerVolt * 10;
 628              		.loc 1 750 0
 629 0008 1188     		ldrh	r1, [r2]
 630 000a 0A23     		movs	r3, #10
 631 000c 09B2     		sxth	r1, r1
 632 000e 5943     		muls	r1, r3, r1
 633              	.LVL37:
 634 0010 01E0     		b	.L59
 635              	.LVL38:
 636              	.L58:
 751:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
 752:Generated_Source\PSoC5/Potenciometro_SAR.c ****     else
 753:Generated_Source\PSoC5/Potenciometro_SAR.c ****     {
 754:Generated_Source\PSoC5/Potenciometro_SAR.c ****         countsPer10Volt = Potenciometro_SAR_countsPer10Volt;
 637              		.loc 1 754 0
 638 0012 0B4B     		ldr	r3, .L62+4
 639 0014 1968     		ldr	r1, [r3]
 640              	.LVL39:
 641              	.L59:
 755:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
 756:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 757:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Subtract ADC offset */
 758:Generated_Source\PSoC5/Potenciometro_SAR.c ****     adcCounts -= Potenciometro_SAR_offset;
 642              		.loc 1 758 0
 643 0016 0B4B     		ldr	r3, .L62+8
 644 0018 1B88     		ldrh	r3, [r3]
 645 001a C01A     		subs	r0, r0, r3
 646              	.LVL40:
 759:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Convert to millivolts with rounding */
 760:Generated_Source\PSoC5/Potenciometro_SAR.c ****     mVolts = (int16)( (( (int32)adcCounts * Potenciometro_SAR_10MV_COUNTS ) + ( (adcCounts > 0) ?
 647              		.loc 1 760 0
 648 001c 42F21073 		movw	r3, #10000
 758:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Convert to millivolts with rounding */
 649              		.loc 1 758 0
 650 0020 00B2     		sxth	r0, r0
 651              	.LVL41:
 652              		.loc 1 760 0
 653 0022 03FB00F2 		mul	r2, r3, r0
 654 0026 0223     		movs	r3, #2
 761:Generated_Source\PSoC5/Potenciometro_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 655              		.loc 1 761 0
 656 0028 91FBF3F3 		sdiv	r3, r1, r3
 657 002c 0028     		cmp	r0, #0
 658 002e D8BF     		it	le
 659 0030 5B42     		rsble	r3, r3, #0
 660              	.LVL42:
 762:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 763:Generated_Source\PSoC5/Potenciometro_SAR.c ****     return( mVolts );
 661              		.loc 1 763 0
 662 0032 1344     		add	r3, r3, r2
 663              	.LVL43:
 664 0034 93FBF1F0 		sdiv	r0, r3, r1
 665              	.LVL44:
 764:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 666              		.loc 1 764 0
 667 0038 00B2     		sxth	r0, r0
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 27


 668 003a 7047     		bx	lr
 669              	.L63:
 670              		.align	2
 671              	.L62:
 672 003c 00000000 		.word	Potenciometro_SAR_countsPerVolt
 673 0040 00000000 		.word	Potenciometro_SAR_countsPer10Volt
 674 0044 00000000 		.word	Potenciometro_SAR_offset
 675              		.cfi_endproc
 676              	.LFE15:
 677              		.size	Potenciometro_SAR_CountsTo_mVolts, .-Potenciometro_SAR_CountsTo_mVolts
 678              		.global	__aeabi_ldivmod
 679              		.section	.text.Potenciometro_SAR_CountsTo_uVolts,"ax",%progbits
 680              		.align	1
 681              		.global	Potenciometro_SAR_CountsTo_uVolts
 682              		.thumb
 683              		.thumb_func
 684              		.type	Potenciometro_SAR_CountsTo_uVolts, %function
 685              	Potenciometro_SAR_CountsTo_uVolts:
 686              	.LFB16:
 765:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 766:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 767:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
 768:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_CountsTo_uVolts
 769:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
 770:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 771:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
 772:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 774:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
 775:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 776:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 777:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 778:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  int32 Result in micro Volts
 779:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 780:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Global Variables:
 781:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_offset variable used.
 782:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_countsPer10Volt used to convert ADC counts to uVolts.
 783:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 784:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 785:Generated_Source\PSoC5/Potenciometro_SAR.c **** int32 Potenciometro_SAR_CountsTo_uVolts(int16 adcCounts)
 786:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
 687              		.loc 1 786 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              	.LVL45:
 787:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 788:Generated_Source\PSoC5/Potenciometro_SAR.c ****     int64 uVolts;
 789:Generated_Source\PSoC5/Potenciometro_SAR.c ****     int32 countsPer10Volt;
 790:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 791:Generated_Source\PSoC5/Potenciometro_SAR.c ****     if(Potenciometro_SAR_countsPerVolt != 0)
 692              		.loc 1 791 0
 693 0000 0C4A     		ldr	r2, .L67
 786:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 694              		.loc 1 786 0
 695 0002 38B5     		push	{r3, r4, r5, lr}
 696              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 28


 697              		.cfi_offset 3, -16
 698              		.cfi_offset 4, -12
 699              		.cfi_offset 5, -8
 700              		.cfi_offset 14, -4
 701              		.loc 1 791 0
 702 0004 1388     		ldrh	r3, [r2]
 703 0006 1BB2     		sxth	r3, r3
 704 0008 23B1     		cbz	r3, .L65
 792:Generated_Source\PSoC5/Potenciometro_SAR.c ****     {   /* Support obsolete method */
 793:Generated_Source\PSoC5/Potenciometro_SAR.c ****         countsPer10Volt = (int32)Potenciometro_SAR_countsPerVolt * 10;
 705              		.loc 1 793 0
 706 000a 1288     		ldrh	r2, [r2]
 707 000c 0A23     		movs	r3, #10
 708 000e 12B2     		sxth	r2, r2
 709 0010 5A43     		muls	r2, r3, r2
 710              	.LVL46:
 711 0012 01E0     		b	.L66
 712              	.LVL47:
 713              	.L65:
 794:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
 795:Generated_Source\PSoC5/Potenciometro_SAR.c ****     else
 796:Generated_Source\PSoC5/Potenciometro_SAR.c ****     {
 797:Generated_Source\PSoC5/Potenciometro_SAR.c ****         countsPer10Volt = Potenciometro_SAR_countsPer10Volt;
 714              		.loc 1 797 0
 715 0014 084B     		ldr	r3, .L67+4
 716 0016 1A68     		ldr	r2, [r3]
 717              	.LVL48:
 718              	.L66:
 798:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
 799:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 800:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Subtract ADC offset */
 801:Generated_Source\PSoC5/Potenciometro_SAR.c ****     adcCounts -= Potenciometro_SAR_offset;
 719              		.loc 1 801 0
 720 0018 084B     		ldr	r3, .L67+8
 721 001a 1C88     		ldrh	r4, [r3]
 802:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:Generated_Source\PSoC5/Potenciometro_SAR.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:Generated_Source\PSoC5/Potenciometro_SAR.c ****     */
 805:Generated_Source\PSoC5/Potenciometro_SAR.c ****     uVolts = (( (int64)adcCounts * Potenciometro_SAR_10UV_COUNTS ) / countsPer10Volt);
 806:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 807:Generated_Source\PSoC5/Potenciometro_SAR.c ****     return((int32) uVolts );
 722              		.loc 1 807 0
 723 001c 084B     		ldr	r3, .L67+12
 801:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 724              		.loc 1 801 0
 725 001e 041B     		subs	r4, r0, r4
 726              	.LVL49:
 727              		.loc 1 807 0
 728 0020 24B2     		sxth	r4, r4
 729 0022 A4FB0301 		umull	r0, r1, r4, r3
 730 0026 E517     		asrs	r5, r4, #31
 731 0028 03FB0511 		mla	r1, r3, r5, r1
 732 002c D317     		asrs	r3, r2, #31
 733 002e FFF7FEFF 		bl	__aeabi_ldivmod
 734              	.LVL50:
 808:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 735              		.loc 1 808 0
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 29


 736 0032 38BD     		pop	{r3, r4, r5, pc}
 737              	.LVL51:
 738              	.L68:
 739              		.align	2
 740              	.L67:
 741 0034 00000000 		.word	Potenciometro_SAR_countsPerVolt
 742 0038 00000000 		.word	Potenciometro_SAR_countsPer10Volt
 743 003c 00000000 		.word	Potenciometro_SAR_offset
 744 0040 80969800 		.word	10000000
 745              		.cfi_endproc
 746              	.LFE16:
 747              		.size	Potenciometro_SAR_CountsTo_uVolts, .-Potenciometro_SAR_CountsTo_uVolts
 748              		.global	__aeabi_i2f
 749              		.global	__aeabi_fmul
 750              		.global	__aeabi_fdiv
 751              		.section	.text.Potenciometro_SAR_CountsTo_Volts,"ax",%progbits
 752              		.align	1
 753              		.global	Potenciometro_SAR_CountsTo_Volts
 754              		.thumb
 755              		.thumb_func
 756              		.type	Potenciometro_SAR_CountsTo_Volts, %function
 757              	Potenciometro_SAR_CountsTo_Volts:
 758              	.LFB17:
 809:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 810:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 811:Generated_Source\PSoC5/Potenciometro_SAR.c **** /*******************************************************************************
 812:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Function Name: Potenciometro_SAR_CountsTo_Volts
 813:Generated_Source\PSoC5/Potenciometro_SAR.c **** ********************************************************************************
 814:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 815:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Summary:
 816:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Converts the ADC output to volts as a floating-point number.
 817:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 818:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Parameters:
 819:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 820:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 821:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Return:
 822:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  float Result in Volts
 823:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 824:Generated_Source\PSoC5/Potenciometro_SAR.c **** * Global Variables:
 825:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_offset variable used.
 826:Generated_Source\PSoC5/Potenciometro_SAR.c **** *  Potenciometro_SAR_countsPer10Volt used to convert ADC counts to Volts.
 827:Generated_Source\PSoC5/Potenciometro_SAR.c **** *
 828:Generated_Source\PSoC5/Potenciometro_SAR.c **** *******************************************************************************/
 829:Generated_Source\PSoC5/Potenciometro_SAR.c **** float32 Potenciometro_SAR_CountsTo_Volts(int16 adcCounts)
 830:Generated_Source\PSoC5/Potenciometro_SAR.c **** {
 759              		.loc 1 830 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              	.LVL52:
 831:Generated_Source\PSoC5/Potenciometro_SAR.c ****     float32 volts;
 832:Generated_Source\PSoC5/Potenciometro_SAR.c ****     int32 countsPer10Volt;
 833:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 834:Generated_Source\PSoC5/Potenciometro_SAR.c ****     if(Potenciometro_SAR_countsPerVolt != 0)
 764              		.loc 1 834 0
 765 0000 0E4A     		ldr	r2, .L72
 830:Generated_Source\PSoC5/Potenciometro_SAR.c ****     float32 volts;
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 30


 766              		.loc 1 830 0
 767 0002 38B5     		push	{r3, r4, r5, lr}
 768              		.cfi_def_cfa_offset 16
 769              		.cfi_offset 3, -16
 770              		.cfi_offset 4, -12
 771              		.cfi_offset 5, -8
 772              		.cfi_offset 14, -4
 773              		.loc 1 834 0
 774 0004 1388     		ldrh	r3, [r2]
 775 0006 1BB2     		sxth	r3, r3
 776 0008 23B1     		cbz	r3, .L70
 835:Generated_Source\PSoC5/Potenciometro_SAR.c ****     {   /* Support obsolete method */
 836:Generated_Source\PSoC5/Potenciometro_SAR.c ****         countsPer10Volt = (int32)Potenciometro_SAR_countsPerVolt * 10;
 777              		.loc 1 836 0
 778 000a 1488     		ldrh	r4, [r2]
 779 000c 0A23     		movs	r3, #10
 780 000e 24B2     		sxth	r4, r4
 781 0010 5C43     		muls	r4, r3, r4
 782              	.LVL53:
 783 0012 01E0     		b	.L71
 784              	.LVL54:
 785              	.L70:
 837:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
 838:Generated_Source\PSoC5/Potenciometro_SAR.c ****     else
 839:Generated_Source\PSoC5/Potenciometro_SAR.c ****     {
 840:Generated_Source\PSoC5/Potenciometro_SAR.c ****         countsPer10Volt = Potenciometro_SAR_countsPer10Volt;
 786              		.loc 1 840 0
 787 0014 0A4B     		ldr	r3, .L72+4
 788 0016 1C68     		ldr	r4, [r3]
 789              	.LVL55:
 790              	.L71:
 841:Generated_Source\PSoC5/Potenciometro_SAR.c ****     }
 842:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 843:Generated_Source\PSoC5/Potenciometro_SAR.c ****     /* Subtract ADC offset */
 844:Generated_Source\PSoC5/Potenciometro_SAR.c ****     adcCounts -= Potenciometro_SAR_offset;
 791              		.loc 1 844 0
 792 0018 0A4B     		ldr	r3, .L72+8
 793 001a 1B88     		ldrh	r3, [r3]
 794 001c C01A     		subs	r0, r0, r3
 795              	.LVL56:
 845:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 846:Generated_Source\PSoC5/Potenciometro_SAR.c ****     volts = ((float32)adcCounts * Potenciometro_SAR_10V_COUNTS) / (float32)countsPer10Volt;
 847:Generated_Source\PSoC5/Potenciometro_SAR.c **** 
 848:Generated_Source\PSoC5/Potenciometro_SAR.c ****     return( volts );
 796              		.loc 1 848 0
 797 001e 00B2     		sxth	r0, r0
 798 0020 FFF7FEFF 		bl	__aeabi_i2f
 799              	.LVL57:
 800 0024 0849     		ldr	r1, .L72+12
 801 0026 FFF7FEFF 		bl	__aeabi_fmul
 802              	.LVL58:
 803 002a 0546     		mov	r5, r0
 804 002c 2046     		mov	r0, r4
 805 002e FFF7FEFF 		bl	__aeabi_i2f
 806              	.LVL59:
 807 0032 0146     		mov	r1, r0
 808 0034 2846     		mov	r0, r5
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 31


 809 0036 FFF7FEFF 		bl	__aeabi_fdiv
 810              	.LVL60:
 849:Generated_Source\PSoC5/Potenciometro_SAR.c **** }
 811              		.loc 1 849 0
 812 003a 38BD     		pop	{r3, r4, r5, pc}
 813              	.LVL61:
 814              	.L73:
 815              		.align	2
 816              	.L72:
 817 003c 00000000 		.word	Potenciometro_SAR_countsPerVolt
 818 0040 00000000 		.word	Potenciometro_SAR_countsPer10Volt
 819 0044 00000000 		.word	Potenciometro_SAR_offset
 820 0048 00002041 		.word	1092616192
 821              		.cfi_endproc
 822              	.LFE17:
 823              		.size	Potenciometro_SAR_CountsTo_Volts, .-Potenciometro_SAR_CountsTo_Volts
 824              		.comm	Potenciometro_SAR_shift,2,2
 825              		.comm	Potenciometro_SAR_countsPer10Volt,4,4
 826              		.comm	Potenciometro_SAR_countsPerVolt,2,2
 827              		.comm	Potenciometro_SAR_offset,2,2
 828              		.global	Potenciometro_SAR_initVar
 829              		.section	.rodata
 830              		.align	1
 831              		.set	.LANCHOR0,. + 0
 832              		.type	CSWTCH.24, %object
 833              		.size	CSWTCH.24, 10
 834              	CSWTCH.24:
 835 0000 0001     		.short	256
 836 0002 0000     		.short	0
 837 0004 0004     		.short	1024
 838 0006 0000     		.short	0
 839 0008 0010     		.short	4096
 840              		.bss
 841              		.set	.LANCHOR1,. + 0
 842              		.type	Potenciometro_SAR_initVar, %object
 843              		.size	Potenciometro_SAR_initVar, 1
 844              	Potenciometro_SAR_initVar:
 845 0000 00       		.space	1
 846              		.text
 847              	.Letext0:
 848              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 849              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 850              		.section	.debug_info,"",%progbits
 851              	.Ldebug_info0:
 852 0000 17050000 		.4byte	0x517
 853 0004 0400     		.2byte	0x4
 854 0006 00000000 		.4byte	.Ldebug_abbrev0
 855 000a 04       		.byte	0x4
 856 000b 01       		.uleb128 0x1
 857 000c DB000000 		.4byte	.LASF60
 858 0010 0C       		.byte	0xc
 859 0011 2D000000 		.4byte	.LASF61
 860 0015 FE010000 		.4byte	.LASF62
 861 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 862 001d 00000000 		.4byte	0
 863 0021 00000000 		.4byte	.Ldebug_line0
 864 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 32


 865 0026 08       		.byte	0x8
 866 0027 07       		.byte	0x7
 867 0028 8C000000 		.4byte	.LASF0
 868 002c 02       		.uleb128 0x2
 869 002d 04       		.byte	0x4
 870 002e 04       		.byte	0x4
 871 002f E6030000 		.4byte	.LASF1
 872 0033 02       		.uleb128 0x2
 873 0034 08       		.byte	0x8
 874 0035 05       		.byte	0x5
 875 0036 C1000000 		.4byte	.LASF2
 876 003a 03       		.uleb128 0x3
 877 003b 04       		.byte	0x4
 878 003c 05       		.byte	0x5
 879 003d 696E7400 		.ascii	"int\000"
 880 0041 02       		.uleb128 0x2
 881 0042 02       		.byte	0x2
 882 0043 05       		.byte	0x5
 883 0044 33040000 		.4byte	.LASF3
 884 0048 02       		.uleb128 0x2
 885 0049 04       		.byte	0x4
 886 004a 07       		.byte	0x7
 887 004b 5D020000 		.4byte	.LASF4
 888 004f 02       		.uleb128 0x2
 889 0050 08       		.byte	0x8
 890 0051 04       		.byte	0x4
 891 0052 B2030000 		.4byte	.LASF5
 892 0056 02       		.uleb128 0x2
 893 0057 01       		.byte	0x1
 894 0058 06       		.byte	0x6
 895 0059 CF000000 		.4byte	.LASF6
 896 005d 02       		.uleb128 0x2
 897 005e 01       		.byte	0x1
 898 005f 08       		.byte	0x8
 899 0060 25040000 		.4byte	.LASF7
 900 0064 02       		.uleb128 0x2
 901 0065 02       		.byte	0x2
 902 0066 07       		.byte	0x7
 903 0067 FA020000 		.4byte	.LASF8
 904 006b 02       		.uleb128 0x2
 905 006c 04       		.byte	0x4
 906 006d 05       		.byte	0x5
 907 006e 6F010000 		.4byte	.LASF9
 908 0072 02       		.uleb128 0x2
 909 0073 04       		.byte	0x4
 910 0074 07       		.byte	0x7
 911 0075 AC020000 		.4byte	.LASF10
 912 0079 02       		.uleb128 0x2
 913 007a 04       		.byte	0x4
 914 007b 07       		.byte	0x7
 915 007c A9030000 		.4byte	.LASF11
 916 0080 02       		.uleb128 0x2
 917 0081 01       		.byte	0x1
 918 0082 08       		.byte	0x8
 919 0083 81040000 		.4byte	.LASF12
 920 0087 04       		.uleb128 0x4
 921 0088 7E010000 		.4byte	.LASF13
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 33


 922 008c 02       		.byte	0x2
 923 008d E401     		.2byte	0x1e4
 924 008f 5D000000 		.4byte	0x5d
 925 0093 04       		.uleb128 0x4
 926 0094 00000000 		.4byte	.LASF14
 927 0098 02       		.byte	0x2
 928 0099 E501     		.2byte	0x1e5
 929 009b 64000000 		.4byte	0x64
 930 009f 04       		.uleb128 0x4
 931 00a0 25030000 		.4byte	.LASF15
 932 00a4 02       		.byte	0x2
 933 00a5 E701     		.2byte	0x1e7
 934 00a7 56000000 		.4byte	0x56
 935 00ab 04       		.uleb128 0x4
 936 00ac F2040000 		.4byte	.LASF16
 937 00b0 02       		.byte	0x2
 938 00b1 E801     		.2byte	0x1e8
 939 00b3 41000000 		.4byte	0x41
 940 00b7 04       		.uleb128 0x4
 941 00b8 69010000 		.4byte	.LASF17
 942 00bc 02       		.byte	0x2
 943 00bd E901     		.2byte	0x1e9
 944 00bf 6B000000 		.4byte	0x6b
 945 00c3 04       		.uleb128 0x4
 946 00c4 A1030000 		.4byte	.LASF18
 947 00c8 02       		.byte	0x2
 948 00c9 EA01     		.2byte	0x1ea
 949 00cb 2C000000 		.4byte	0x2c
 950 00cf 02       		.uleb128 0x2
 951 00d0 08       		.byte	0x8
 952 00d1 04       		.byte	0x4
 953 00d2 A9010000 		.4byte	.LASF19
 954 00d6 04       		.uleb128 0x4
 955 00d7 BE030000 		.4byte	.LASF20
 956 00db 02       		.byte	0x2
 957 00dc EF01     		.2byte	0x1ef
 958 00de 33000000 		.4byte	0x33
 959 00e2 04       		.uleb128 0x4
 960 00e3 20040000 		.4byte	.LASF21
 961 00e7 02       		.byte	0x2
 962 00e8 8E02     		.2byte	0x28e
 963 00ea EE000000 		.4byte	0xee
 964 00ee 05       		.uleb128 0x5
 965 00ef 87000000 		.4byte	0x87
 966 00f3 04       		.uleb128 0x4
 967 00f4 78010000 		.4byte	.LASF22
 968 00f8 02       		.byte	0x2
 969 00f9 8F02     		.2byte	0x28f
 970 00fb FF000000 		.4byte	0xff
 971 00ff 05       		.uleb128 0x5
 972 0100 93000000 		.4byte	0x93
 973 0104 06       		.uleb128 0x6
 974 0105 61030000 		.4byte	.LASF25
 975 0109 01       		.byte	0x1
 976 010a 8F       		.byte	0x8f
 977 010b 00000000 		.4byte	.LFB2
 978 010f 7C000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 34


 979 0113 01       		.uleb128 0x1
 980 0114 9C       		.byte	0x9c
 981 0115 5D010000 		.4byte	0x15d
 982 0119 07       		.uleb128 0x7
 983 011a 18050000 		.4byte	.LASF23
 984 011e 01       		.byte	0x1
 985 011f 91       		.byte	0x91
 986 0120 87000000 		.4byte	0x87
 987 0124 00000000 		.4byte	.LLST0
 988 0128 07       		.uleb128 0x7
 989 0129 B8040000 		.4byte	.LASF24
 990 012d 01       		.byte	0x1
 991 012e 92       		.byte	0x92
 992 012f 87000000 		.4byte	0x87
 993 0133 3D000000 		.4byte	.LLST1
 994 0137 08       		.uleb128 0x8
 995 0138 06000000 		.4byte	.LVL0
 996 013c F9040000 		.4byte	0x4f9
 997 0140 09       		.uleb128 0x9
 998 0141 66000000 		.4byte	.LVL7
 999 0145 04050000 		.4byte	0x504
 1000 0149 53010000 		.4byte	0x153
 1001 014d 0A       		.uleb128 0xa
 1002 014e 01       		.uleb128 0x1
 1003 014f 50       		.byte	0x50
 1004 0150 01       		.uleb128 0x1
 1005 0151 3A       		.byte	0x3a
 1006 0152 00       		.byte	0
 1007 0153 0B       		.uleb128 0xb
 1008 0154 70000000 		.4byte	.LVL9
 1009 0158 0F050000 		.4byte	0x50f
 1010 015c 00       		.byte	0
 1011 015d 06       		.uleb128 0x6
 1012 015e 0F000000 		.4byte	.LASF26
 1013 0162 01       		.byte	0x1
 1014 0163 F8       		.byte	0xf8
 1015 0164 00000000 		.4byte	.LFB3
 1016 0168 34000000 		.4byte	.LFE3-.LFB3
 1017 016c 01       		.uleb128 0x1
 1018 016d 9C       		.byte	0x9c
 1019 016e 94010000 		.4byte	0x194
 1020 0172 07       		.uleb128 0x7
 1021 0173 B8040000 		.4byte	.LASF24
 1022 0177 01       		.byte	0x1
 1023 0178 FA       		.byte	0xfa
 1024 0179 87000000 		.4byte	0x87
 1025 017d 50000000 		.4byte	.LLST2
 1026 0181 08       		.uleb128 0x8
 1027 0182 06000000 		.4byte	.LVL10
 1028 0186 F9040000 		.4byte	0x4f9
 1029 018a 0B       		.uleb128 0xb
 1030 018b 2E000000 		.4byte	.LVL11
 1031 018f 0F050000 		.4byte	0x50f
 1032 0193 00       		.byte	0
 1033 0194 0C       		.uleb128 0xc
 1034 0195 84010000 		.4byte	.LASF27
 1035 0199 01       		.byte	0x1
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 35


 1036 019a 2201     		.2byte	0x122
 1037 019c 00000000 		.4byte	.LFB4
 1038 01a0 18000000 		.4byte	.LFE4-.LFB4
 1039 01a4 01       		.uleb128 0x1
 1040 01a5 9C       		.byte	0x9c
 1041 01a6 CB010000 		.4byte	0x1cb
 1042 01aa 0D       		.uleb128 0xd
 1043 01ab 1A040000 		.4byte	.LASF29
 1044 01af 01       		.byte	0x1
 1045 01b0 2201     		.2byte	0x122
 1046 01b2 87000000 		.4byte	0x87
 1047 01b6 63000000 		.4byte	.LLST3
 1048 01ba 0E       		.uleb128 0xe
 1049 01bb 18050000 		.4byte	.LASF23
 1050 01bf 01       		.byte	0x1
 1051 01c0 2401     		.2byte	0x124
 1052 01c2 87000000 		.4byte	0x87
 1053 01c6 95000000 		.4byte	.LLST4
 1054 01ca 00       		.byte	0
 1055 01cb 0F       		.uleb128 0xf
 1056 01cc 3D040000 		.4byte	.LASF63
 1057 01d0 01       		.byte	0x1
 1058 01d1 6302     		.2byte	0x263
 1059 01d3 01       		.byte	0x1
 1060 01d4 F1010000 		.4byte	0x1f1
 1061 01d8 10       		.uleb128 0x10
 1062 01d9 76040000 		.4byte	.LASF30
 1063 01dd 01       		.byte	0x1
 1064 01de 6302     		.2byte	0x263
 1065 01e0 87000000 		.4byte	0x87
 1066 01e4 11       		.uleb128 0x11
 1067 01e5 26000000 		.4byte	.LASF64
 1068 01e9 01       		.byte	0x1
 1069 01ea 6502     		.2byte	0x265
 1070 01ec B7000000 		.4byte	0xb7
 1071 01f0 00       		.byte	0
 1072 01f1 0C       		.uleb128 0xc
 1073 01f2 81030000 		.4byte	.LASF28
 1074 01f6 01       		.byte	0x1
 1075 01f7 5401     		.2byte	0x154
 1076 01f9 00000000 		.4byte	.LFB5
 1077 01fd 60000000 		.4byte	.LFE5-.LFB5
 1078 0201 01       		.uleb128 0x1
 1079 0202 9C       		.byte	0x9c
 1080 0203 4D020000 		.4byte	0x24d
 1081 0207 0D       		.uleb128 0xd
 1082 0208 76040000 		.4byte	.LASF30
 1083 020c 01       		.byte	0x1
 1084 020d 5401     		.2byte	0x154
 1085 020f 87000000 		.4byte	0x87
 1086 0213 B3000000 		.4byte	.LLST5
 1087 0217 0E       		.uleb128 0xe
 1088 0218 18050000 		.4byte	.LASF23
 1089 021c 01       		.byte	0x1
 1090 021d 5601     		.2byte	0x156
 1091 021f 87000000 		.4byte	0x87
 1092 0223 D4000000 		.4byte	.LLST6
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 36


 1093 0227 12       		.uleb128 0x12
 1094 0228 CB010000 		.4byte	0x1cb
 1095 022c 28000000 		.4byte	.LBB4
 1096 0230 00000000 		.4byte	.Ldebug_ranges0+0
 1097 0234 01       		.byte	0x1
 1098 0235 6D01     		.2byte	0x16d
 1099 0237 13       		.uleb128 0x13
 1100 0238 D8010000 		.4byte	0x1d8
 1101 023c 14       		.uleb128 0x14
 1102 023d 00000000 		.4byte	.Ldebug_ranges0+0
 1103 0241 15       		.uleb128 0x15
 1104 0242 E4010000 		.4byte	0x1e4
 1105 0246 E9000000 		.4byte	.LLST7
 1106 024a 00       		.byte	0
 1107 024b 00       		.byte	0
 1108 024c 00       		.byte	0
 1109 024d 06       		.uleb128 0x6
 1110 024e 2A030000 		.4byte	.LASF31
 1111 0252 01       		.byte	0x1
 1112 0253 6A       		.byte	0x6a
 1113 0254 00000000 		.4byte	.LFB1
 1114 0258 24000000 		.4byte	.LFE1-.LFB1
 1115 025c 01       		.uleb128 0x1
 1116 025d 9C       		.byte	0x9c
 1117 025e 72020000 		.4byte	0x272
 1118 0262 16       		.uleb128 0x16
 1119 0263 12000000 		.4byte	.LVL23
 1120 0267 F1010000 		.4byte	0x1f1
 1121 026b 0A       		.uleb128 0xa
 1122 026c 01       		.uleb128 0x1
 1123 026d 50       		.byte	0x50
 1124 026e 01       		.uleb128 0x1
 1125 026f 3C       		.byte	0x3c
 1126 0270 00       		.byte	0
 1127 0271 00       		.byte	0
 1128 0272 06       		.uleb128 0x6
 1129 0273 02040000 		.4byte	.LASF32
 1130 0277 01       		.byte	0x1
 1131 0278 4A       		.byte	0x4a
 1132 0279 00000000 		.4byte	.LFB0
 1133 027d 1C000000 		.4byte	.LFE0-.LFB0
 1134 0281 01       		.uleb128 0x1
 1135 0282 9C       		.byte	0x9c
 1136 0283 9A020000 		.4byte	0x29a
 1137 0287 08       		.uleb128 0x8
 1138 0288 0C000000 		.4byte	.LVL24
 1139 028c 4D020000 		.4byte	0x24d
 1140 0290 0B       		.uleb128 0xb
 1141 0291 18000000 		.4byte	.LVL25
 1142 0295 04010000 		.4byte	0x104
 1143 0299 00       		.byte	0
 1144 029a 17       		.uleb128 0x17
 1145 029b C4020000 		.4byte	.LASF33
 1146 029f 01       		.byte	0x1
 1147 02a0 9101     		.2byte	0x191
 1148 02a2 00000000 		.4byte	.LFB6
 1149 02a6 10000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 37


 1150 02aa 01       		.uleb128 0x1
 1151 02ab 9C       		.byte	0x9c
 1152 02ac 17       		.uleb128 0x17
 1153 02ad A3000000 		.4byte	.LASF34
 1154 02b1 01       		.byte	0x1
 1155 02b2 B301     		.2byte	0x1b3
 1156 02b4 00000000 		.4byte	.LFB7
 1157 02b8 10000000 		.4byte	.LFE7-.LFB7
 1158 02bc 01       		.uleb128 0x1
 1159 02bd 9C       		.byte	0x9c
 1160 02be 18       		.uleb128 0x18
 1161 02bf B0010000 		.4byte	.LASF37
 1162 02c3 01       		.byte	0x1
 1163 02c4 DB01     		.2byte	0x1db
 1164 02c6 87000000 		.4byte	0x87
 1165 02ca 00000000 		.4byte	.LFB8
 1166 02ce 28000000 		.4byte	.LFE8-.LFB8
 1167 02d2 01       		.uleb128 0x1
 1168 02d3 9C       		.byte	0x9c
 1169 02d4 09030000 		.4byte	0x309
 1170 02d8 0D       		.uleb128 0xd
 1171 02d9 55020000 		.4byte	.LASF35
 1172 02dd 01       		.byte	0x1
 1173 02de DB01     		.2byte	0x1db
 1174 02e0 87000000 		.4byte	0x87
 1175 02e4 FC000000 		.4byte	.LLST8
 1176 02e8 0E       		.uleb128 0xe
 1177 02e9 C9040000 		.4byte	.LASF36
 1178 02ed 01       		.byte	0x1
 1179 02ee DD01     		.2byte	0x1dd
 1180 02f0 87000000 		.4byte	0x87
 1181 02f4 1D010000 		.4byte	.LLST9
 1182 02f8 16       		.uleb128 0x16
 1183 02f9 1A000000 		.4byte	.LVL30
 1184 02fd 04050000 		.4byte	0x504
 1185 0301 0A       		.uleb128 0xa
 1186 0302 01       		.uleb128 0x1
 1187 0303 50       		.byte	0x50
 1188 0304 02       		.uleb128 0x2
 1189 0305 74       		.byte	0x74
 1190 0306 00       		.sleb128 0
 1191 0307 00       		.byte	0
 1192 0308 00       		.byte	0
 1193 0309 19       		.uleb128 0x19
 1194 030a 1F050000 		.4byte	.LASF65
 1195 030e 01       		.byte	0x1
 1196 030f 0802     		.2byte	0x208
 1197 0311 9F000000 		.4byte	0x9f
 1198 0315 00000000 		.4byte	.LFB9
 1199 0319 18000000 		.4byte	.LFE9-.LFB9
 1200 031d 01       		.uleb128 0x1
 1201 031e 9C       		.byte	0x9c
 1202 031f 18       		.uleb128 0x18
 1203 0320 58040000 		.4byte	.LASF38
 1204 0324 01       		.byte	0x1
 1205 0325 2602     		.2byte	0x226
 1206 0327 AB000000 		.4byte	0xab
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 38


 1207 032b 00000000 		.4byte	.LFB10
 1208 032f 18000000 		.4byte	.LFE10-.LFB10
 1209 0333 01       		.uleb128 0x1
 1210 0334 9C       		.byte	0x9c
 1211 0335 48030000 		.4byte	0x348
 1212 0339 1A       		.uleb128 0x1a
 1213 033a 72657300 		.ascii	"res\000"
 1214 033e 01       		.byte	0x1
 1215 033f 2802     		.2byte	0x228
 1216 0341 93000000 		.4byte	0x93
 1217 0345 01       		.uleb128 0x1
 1218 0346 53       		.byte	0x53
 1219 0347 00       		.byte	0
 1220 0348 0C       		.uleb128 0xc
 1221 0349 E2010000 		.4byte	.LASF39
 1222 034d 01       		.byte	0x1
 1223 034e 4902     		.2byte	0x249
 1224 0350 00000000 		.4byte	.LFB11
 1225 0354 0C000000 		.4byte	.LFE11-.LFB11
 1226 0358 01       		.uleb128 0x1
 1227 0359 9C       		.byte	0x9c
 1228 035a 6D030000 		.4byte	0x36d
 1229 035e 1B       		.uleb128 0x1b
 1230 035f 86040000 		.4byte	.LASF40
 1231 0363 01       		.byte	0x1
 1232 0364 4902     		.2byte	0x249
 1233 0366 AB000000 		.4byte	0xab
 1234 036a 01       		.uleb128 0x1
 1235 036b 50       		.byte	0x50
 1236 036c 00       		.byte	0
 1237 036d 0C       		.uleb128 0xc
 1238 036e 58000000 		.4byte	.LASF41
 1239 0372 01       		.byte	0x1
 1240 0373 B402     		.2byte	0x2b4
 1241 0375 00000000 		.4byte	.LFB13
 1242 0379 10000000 		.4byte	.LFE13-.LFB13
 1243 037d 01       		.uleb128 0x1
 1244 037e 9C       		.byte	0x9c
 1245 037f 94030000 		.4byte	0x394
 1246 0383 0D       		.uleb128 0xd
 1247 0384 07000000 		.4byte	.LASF42
 1248 0388 01       		.byte	0x1
 1249 0389 B402     		.2byte	0x2b4
 1250 038b AB000000 		.4byte	0xab
 1251 038f 34010000 		.4byte	.LLST10
 1252 0393 00       		.byte	0
 1253 0394 0C       		.uleb128 0xc
 1254 0395 F8040000 		.4byte	.LASF43
 1255 0399 01       		.byte	0x1
 1256 039a CF02     		.2byte	0x2cf
 1257 039c 00000000 		.4byte	.LFB14
 1258 03a0 0C000000 		.4byte	.LFE14-.LFB14
 1259 03a4 01       		.uleb128 0x1
 1260 03a5 9C       		.byte	0x9c
 1261 03a6 B9030000 		.4byte	0x3b9
 1262 03aa 1B       		.uleb128 0x1b
 1263 03ab 07000000 		.4byte	.LASF42
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 39


 1264 03af 01       		.byte	0x1
 1265 03b0 CF02     		.2byte	0x2cf
 1266 03b2 B7000000 		.4byte	0xb7
 1267 03b6 01       		.uleb128 0x1
 1268 03b7 50       		.byte	0x50
 1269 03b8 00       		.byte	0
 1270 03b9 18       		.uleb128 0x18
 1271 03ba 6A020000 		.4byte	.LASF44
 1272 03be 01       		.byte	0x1
 1273 03bf E702     		.2byte	0x2e7
 1274 03c1 AB000000 		.4byte	0xab
 1275 03c5 00000000 		.4byte	.LFB15
 1276 03c9 48000000 		.4byte	.LFE15-.LFB15
 1277 03cd 01       		.uleb128 0x1
 1278 03ce 9C       		.byte	0x9c
 1279 03cf 04040000 		.4byte	0x404
 1280 03d3 0D       		.uleb128 0xd
 1281 03d4 8D040000 		.4byte	.LASF45
 1282 03d8 01       		.byte	0x1
 1283 03d9 E702     		.2byte	0x2e7
 1284 03db AB000000 		.4byte	0xab
 1285 03df 55010000 		.4byte	.LLST11
 1286 03e3 0E       		.uleb128 0xe
 1287 03e4 7A030000 		.4byte	.LASF46
 1288 03e8 01       		.byte	0x1
 1289 03e9 E902     		.2byte	0x2e9
 1290 03eb AB000000 		.4byte	0xab
 1291 03ef 81010000 		.4byte	.LLST12
 1292 03f3 0E       		.uleb128 0xe
 1293 03f4 D2010000 		.4byte	.LASF47
 1294 03f8 01       		.byte	0x1
 1295 03f9 EA02     		.2byte	0x2ea
 1296 03fb B7000000 		.4byte	0xb7
 1297 03ff 9C010000 		.4byte	.LLST13
 1298 0403 00       		.byte	0
 1299 0404 1C       		.uleb128 0x1c
 1300 0405 D0040000 		.4byte	.LASF48
 1301 0409 01       		.byte	0x1
 1302 040a 1103     		.2byte	0x311
 1303 040c B7000000 		.4byte	0xb7
 1304 0410 00000000 		.4byte	.LFB16
 1305 0414 44000000 		.4byte	.LFE16-.LFB16
 1306 0418 01       		.uleb128 0x1
 1307 0419 9C       		.byte	0x9c
 1308 041a 4F040000 		.4byte	0x44f
 1309 041e 0D       		.uleb128 0xd
 1310 041f 8D040000 		.4byte	.LASF45
 1311 0423 01       		.byte	0x1
 1312 0424 1103     		.2byte	0x311
 1313 0426 AB000000 		.4byte	0xab
 1314 042a BA010000 		.4byte	.LLST14
 1315 042e 0E       		.uleb128 0xe
 1316 042f 8C020000 		.4byte	.LASF49
 1317 0433 01       		.byte	0x1
 1318 0434 1403     		.2byte	0x314
 1319 0436 D6000000 		.4byte	0xd6
 1320 043a D8010000 		.4byte	.LLST15
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 40


 1321 043e 0E       		.uleb128 0xe
 1322 043f D2010000 		.4byte	.LASF47
 1323 0443 01       		.byte	0x1
 1324 0444 1503     		.2byte	0x315
 1325 0446 B7000000 		.4byte	0xb7
 1326 044a 04020000 		.4byte	.LLST16
 1327 044e 00       		.byte	0
 1328 044f 1C       		.uleb128 0x1c
 1329 0450 97040000 		.4byte	.LASF50
 1330 0454 01       		.byte	0x1
 1331 0455 3D03     		.2byte	0x33d
 1332 0457 C3000000 		.4byte	0xc3
 1333 045b 00000000 		.4byte	.LFB17
 1334 045f 4C000000 		.4byte	.LFE17-.LFB17
 1335 0463 01       		.uleb128 0x1
 1336 0464 9C       		.byte	0x9c
 1337 0465 9A040000 		.4byte	0x49a
 1338 0469 0D       		.uleb128 0xd
 1339 046a 8D040000 		.4byte	.LASF45
 1340 046e 01       		.byte	0x1
 1341 046f 3D03     		.2byte	0x33d
 1342 0471 AB000000 		.4byte	0xab
 1343 0475 22020000 		.4byte	.LLST17
 1344 0479 0E       		.uleb128 0xe
 1345 047a BE020000 		.4byte	.LASF51
 1346 047e 01       		.byte	0x1
 1347 047f 3F03     		.2byte	0x33f
 1348 0481 C3000000 		.4byte	0xc3
 1349 0485 40020000 		.4byte	.LLST18
 1350 0489 0E       		.uleb128 0xe
 1351 048a D2010000 		.4byte	.LASF47
 1352 048e 01       		.byte	0x1
 1353 048f 4003     		.2byte	0x340
 1354 0491 B7000000 		.4byte	0xb7
 1355 0495 68020000 		.4byte	.LLST19
 1356 0499 00       		.byte	0
 1357 049a 1D       		.uleb128 0x1d
 1358 049b 72000000 		.4byte	.LASF52
 1359 049f 01       		.byte	0x1
 1360 04a0 23       		.byte	0x23
 1361 04a1 87000000 		.4byte	0x87
 1362 04a5 05       		.uleb128 0x5
 1363 04a6 03       		.byte	0x3
 1364 04a7 00000000 		.4byte	Potenciometro_SAR_initVar
 1365 04ab 1D       		.uleb128 0x1d
 1366 04ac 93020000 		.4byte	.LASF53
 1367 04b0 01       		.byte	0x1
 1368 04b1 24       		.byte	0x24
 1369 04b2 BC040000 		.4byte	0x4bc
 1370 04b6 05       		.uleb128 0x5
 1371 04b7 03       		.byte	0x3
 1372 04b8 00000000 		.4byte	Potenciometro_SAR_offset
 1373 04bc 05       		.uleb128 0x5
 1374 04bd AB000000 		.4byte	0xab
 1375 04c1 1D       		.uleb128 0x1d
 1376 04c2 41030000 		.4byte	.LASF54
 1377 04c6 01       		.byte	0x1
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 41


 1378 04c7 25       		.byte	0x25
 1379 04c8 BC040000 		.4byte	0x4bc
 1380 04cc 05       		.uleb128 0x5
 1381 04cd 03       		.byte	0x3
 1382 04ce 00000000 		.4byte	Potenciometro_SAR_countsPerVolt
 1383 04d2 1D       		.uleb128 0x1d
 1384 04d3 C4030000 		.4byte	.LASF55
 1385 04d7 01       		.byte	0x1
 1386 04d8 26       		.byte	0x26
 1387 04d9 E3040000 		.4byte	0x4e3
 1388 04dd 05       		.uleb128 0x5
 1389 04de 03       		.byte	0x3
 1390 04df 00000000 		.4byte	Potenciometro_SAR_countsPer10Volt
 1391 04e3 05       		.uleb128 0x5
 1392 04e4 B7000000 		.4byte	0xb7
 1393 04e8 1D       		.uleb128 0x1d
 1394 04e9 0D030000 		.4byte	.LASF56
 1395 04ed 01       		.byte	0x1
 1396 04ee 27       		.byte	0x27
 1397 04ef BC040000 		.4byte	0x4bc
 1398 04f3 05       		.uleb128 0x5
 1399 04f4 03       		.byte	0x3
 1400 04f5 00000000 		.4byte	Potenciometro_SAR_shift
 1401 04f9 1E       		.uleb128 0x1e
 1402 04fa E3020000 		.4byte	.LASF57
 1403 04fe E3020000 		.4byte	.LASF57
 1404 0502 03       		.byte	0x3
 1405 0503 7D       		.byte	0x7d
 1406 0504 1E       		.uleb128 0x1e
 1407 0505 9F010000 		.4byte	.LASF58
 1408 0509 9F010000 		.4byte	.LASF58
 1409 050d 03       		.byte	0x3
 1410 050e 77       		.byte	0x77
 1411 050f 1E       		.uleb128 0x1e
 1412 0510 EC030000 		.4byte	.LASF59
 1413 0514 EC030000 		.4byte	.LASF59
 1414 0518 03       		.byte	0x3
 1415 0519 7E       		.byte	0x7e
 1416 051a 00       		.byte	0
 1417              		.section	.debug_abbrev,"",%progbits
 1418              	.Ldebug_abbrev0:
 1419 0000 01       		.uleb128 0x1
 1420 0001 11       		.uleb128 0x11
 1421 0002 01       		.byte	0x1
 1422 0003 25       		.uleb128 0x25
 1423 0004 0E       		.uleb128 0xe
 1424 0005 13       		.uleb128 0x13
 1425 0006 0B       		.uleb128 0xb
 1426 0007 03       		.uleb128 0x3
 1427 0008 0E       		.uleb128 0xe
 1428 0009 1B       		.uleb128 0x1b
 1429 000a 0E       		.uleb128 0xe
 1430 000b 55       		.uleb128 0x55
 1431 000c 17       		.uleb128 0x17
 1432 000d 11       		.uleb128 0x11
 1433 000e 01       		.uleb128 0x1
 1434 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 42


 1435 0010 17       		.uleb128 0x17
 1436 0011 00       		.byte	0
 1437 0012 00       		.byte	0
 1438 0013 02       		.uleb128 0x2
 1439 0014 24       		.uleb128 0x24
 1440 0015 00       		.byte	0
 1441 0016 0B       		.uleb128 0xb
 1442 0017 0B       		.uleb128 0xb
 1443 0018 3E       		.uleb128 0x3e
 1444 0019 0B       		.uleb128 0xb
 1445 001a 03       		.uleb128 0x3
 1446 001b 0E       		.uleb128 0xe
 1447 001c 00       		.byte	0
 1448 001d 00       		.byte	0
 1449 001e 03       		.uleb128 0x3
 1450 001f 24       		.uleb128 0x24
 1451 0020 00       		.byte	0
 1452 0021 0B       		.uleb128 0xb
 1453 0022 0B       		.uleb128 0xb
 1454 0023 3E       		.uleb128 0x3e
 1455 0024 0B       		.uleb128 0xb
 1456 0025 03       		.uleb128 0x3
 1457 0026 08       		.uleb128 0x8
 1458 0027 00       		.byte	0
 1459 0028 00       		.byte	0
 1460 0029 04       		.uleb128 0x4
 1461 002a 16       		.uleb128 0x16
 1462 002b 00       		.byte	0
 1463 002c 03       		.uleb128 0x3
 1464 002d 0E       		.uleb128 0xe
 1465 002e 3A       		.uleb128 0x3a
 1466 002f 0B       		.uleb128 0xb
 1467 0030 3B       		.uleb128 0x3b
 1468 0031 05       		.uleb128 0x5
 1469 0032 49       		.uleb128 0x49
 1470 0033 13       		.uleb128 0x13
 1471 0034 00       		.byte	0
 1472 0035 00       		.byte	0
 1473 0036 05       		.uleb128 0x5
 1474 0037 35       		.uleb128 0x35
 1475 0038 00       		.byte	0
 1476 0039 49       		.uleb128 0x49
 1477 003a 13       		.uleb128 0x13
 1478 003b 00       		.byte	0
 1479 003c 00       		.byte	0
 1480 003d 06       		.uleb128 0x6
 1481 003e 2E       		.uleb128 0x2e
 1482 003f 01       		.byte	0x1
 1483 0040 3F       		.uleb128 0x3f
 1484 0041 19       		.uleb128 0x19
 1485 0042 03       		.uleb128 0x3
 1486 0043 0E       		.uleb128 0xe
 1487 0044 3A       		.uleb128 0x3a
 1488 0045 0B       		.uleb128 0xb
 1489 0046 3B       		.uleb128 0x3b
 1490 0047 0B       		.uleb128 0xb
 1491 0048 27       		.uleb128 0x27
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 43


 1492 0049 19       		.uleb128 0x19
 1493 004a 11       		.uleb128 0x11
 1494 004b 01       		.uleb128 0x1
 1495 004c 12       		.uleb128 0x12
 1496 004d 06       		.uleb128 0x6
 1497 004e 40       		.uleb128 0x40
 1498 004f 18       		.uleb128 0x18
 1499 0050 9742     		.uleb128 0x2117
 1500 0052 19       		.uleb128 0x19
 1501 0053 01       		.uleb128 0x1
 1502 0054 13       		.uleb128 0x13
 1503 0055 00       		.byte	0
 1504 0056 00       		.byte	0
 1505 0057 07       		.uleb128 0x7
 1506 0058 34       		.uleb128 0x34
 1507 0059 00       		.byte	0
 1508 005a 03       		.uleb128 0x3
 1509 005b 0E       		.uleb128 0xe
 1510 005c 3A       		.uleb128 0x3a
 1511 005d 0B       		.uleb128 0xb
 1512 005e 3B       		.uleb128 0x3b
 1513 005f 0B       		.uleb128 0xb
 1514 0060 49       		.uleb128 0x49
 1515 0061 13       		.uleb128 0x13
 1516 0062 02       		.uleb128 0x2
 1517 0063 17       		.uleb128 0x17
 1518 0064 00       		.byte	0
 1519 0065 00       		.byte	0
 1520 0066 08       		.uleb128 0x8
 1521 0067 898201   		.uleb128 0x4109
 1522 006a 00       		.byte	0
 1523 006b 11       		.uleb128 0x11
 1524 006c 01       		.uleb128 0x1
 1525 006d 31       		.uleb128 0x31
 1526 006e 13       		.uleb128 0x13
 1527 006f 00       		.byte	0
 1528 0070 00       		.byte	0
 1529 0071 09       		.uleb128 0x9
 1530 0072 898201   		.uleb128 0x4109
 1531 0075 01       		.byte	0x1
 1532 0076 11       		.uleb128 0x11
 1533 0077 01       		.uleb128 0x1
 1534 0078 31       		.uleb128 0x31
 1535 0079 13       		.uleb128 0x13
 1536 007a 01       		.uleb128 0x1
 1537 007b 13       		.uleb128 0x13
 1538 007c 00       		.byte	0
 1539 007d 00       		.byte	0
 1540 007e 0A       		.uleb128 0xa
 1541 007f 8A8201   		.uleb128 0x410a
 1542 0082 00       		.byte	0
 1543 0083 02       		.uleb128 0x2
 1544 0084 18       		.uleb128 0x18
 1545 0085 9142     		.uleb128 0x2111
 1546 0087 18       		.uleb128 0x18
 1547 0088 00       		.byte	0
 1548 0089 00       		.byte	0
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 44


 1549 008a 0B       		.uleb128 0xb
 1550 008b 898201   		.uleb128 0x4109
 1551 008e 00       		.byte	0
 1552 008f 11       		.uleb128 0x11
 1553 0090 01       		.uleb128 0x1
 1554 0091 9542     		.uleb128 0x2115
 1555 0093 19       		.uleb128 0x19
 1556 0094 31       		.uleb128 0x31
 1557 0095 13       		.uleb128 0x13
 1558 0096 00       		.byte	0
 1559 0097 00       		.byte	0
 1560 0098 0C       		.uleb128 0xc
 1561 0099 2E       		.uleb128 0x2e
 1562 009a 01       		.byte	0x1
 1563 009b 3F       		.uleb128 0x3f
 1564 009c 19       		.uleb128 0x19
 1565 009d 03       		.uleb128 0x3
 1566 009e 0E       		.uleb128 0xe
 1567 009f 3A       		.uleb128 0x3a
 1568 00a0 0B       		.uleb128 0xb
 1569 00a1 3B       		.uleb128 0x3b
 1570 00a2 05       		.uleb128 0x5
 1571 00a3 27       		.uleb128 0x27
 1572 00a4 19       		.uleb128 0x19
 1573 00a5 11       		.uleb128 0x11
 1574 00a6 01       		.uleb128 0x1
 1575 00a7 12       		.uleb128 0x12
 1576 00a8 06       		.uleb128 0x6
 1577 00a9 40       		.uleb128 0x40
 1578 00aa 18       		.uleb128 0x18
 1579 00ab 9742     		.uleb128 0x2117
 1580 00ad 19       		.uleb128 0x19
 1581 00ae 01       		.uleb128 0x1
 1582 00af 13       		.uleb128 0x13
 1583 00b0 00       		.byte	0
 1584 00b1 00       		.byte	0
 1585 00b2 0D       		.uleb128 0xd
 1586 00b3 05       		.uleb128 0x5
 1587 00b4 00       		.byte	0
 1588 00b5 03       		.uleb128 0x3
 1589 00b6 0E       		.uleb128 0xe
 1590 00b7 3A       		.uleb128 0x3a
 1591 00b8 0B       		.uleb128 0xb
 1592 00b9 3B       		.uleb128 0x3b
 1593 00ba 05       		.uleb128 0x5
 1594 00bb 49       		.uleb128 0x49
 1595 00bc 13       		.uleb128 0x13
 1596 00bd 02       		.uleb128 0x2
 1597 00be 17       		.uleb128 0x17
 1598 00bf 00       		.byte	0
 1599 00c0 00       		.byte	0
 1600 00c1 0E       		.uleb128 0xe
 1601 00c2 34       		.uleb128 0x34
 1602 00c3 00       		.byte	0
 1603 00c4 03       		.uleb128 0x3
 1604 00c5 0E       		.uleb128 0xe
 1605 00c6 3A       		.uleb128 0x3a
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 45


 1606 00c7 0B       		.uleb128 0xb
 1607 00c8 3B       		.uleb128 0x3b
 1608 00c9 05       		.uleb128 0x5
 1609 00ca 49       		.uleb128 0x49
 1610 00cb 13       		.uleb128 0x13
 1611 00cc 02       		.uleb128 0x2
 1612 00cd 17       		.uleb128 0x17
 1613 00ce 00       		.byte	0
 1614 00cf 00       		.byte	0
 1615 00d0 0F       		.uleb128 0xf
 1616 00d1 2E       		.uleb128 0x2e
 1617 00d2 01       		.byte	0x1
 1618 00d3 03       		.uleb128 0x3
 1619 00d4 0E       		.uleb128 0xe
 1620 00d5 3A       		.uleb128 0x3a
 1621 00d6 0B       		.uleb128 0xb
 1622 00d7 3B       		.uleb128 0x3b
 1623 00d8 05       		.uleb128 0x5
 1624 00d9 27       		.uleb128 0x27
 1625 00da 19       		.uleb128 0x19
 1626 00db 20       		.uleb128 0x20
 1627 00dc 0B       		.uleb128 0xb
 1628 00dd 01       		.uleb128 0x1
 1629 00de 13       		.uleb128 0x13
 1630 00df 00       		.byte	0
 1631 00e0 00       		.byte	0
 1632 00e1 10       		.uleb128 0x10
 1633 00e2 05       		.uleb128 0x5
 1634 00e3 00       		.byte	0
 1635 00e4 03       		.uleb128 0x3
 1636 00e5 0E       		.uleb128 0xe
 1637 00e6 3A       		.uleb128 0x3a
 1638 00e7 0B       		.uleb128 0xb
 1639 00e8 3B       		.uleb128 0x3b
 1640 00e9 05       		.uleb128 0x5
 1641 00ea 49       		.uleb128 0x49
 1642 00eb 13       		.uleb128 0x13
 1643 00ec 00       		.byte	0
 1644 00ed 00       		.byte	0
 1645 00ee 11       		.uleb128 0x11
 1646 00ef 34       		.uleb128 0x34
 1647 00f0 00       		.byte	0
 1648 00f1 03       		.uleb128 0x3
 1649 00f2 0E       		.uleb128 0xe
 1650 00f3 3A       		.uleb128 0x3a
 1651 00f4 0B       		.uleb128 0xb
 1652 00f5 3B       		.uleb128 0x3b
 1653 00f6 05       		.uleb128 0x5
 1654 00f7 49       		.uleb128 0x49
 1655 00f8 13       		.uleb128 0x13
 1656 00f9 00       		.byte	0
 1657 00fa 00       		.byte	0
 1658 00fb 12       		.uleb128 0x12
 1659 00fc 1D       		.uleb128 0x1d
 1660 00fd 01       		.byte	0x1
 1661 00fe 31       		.uleb128 0x31
 1662 00ff 13       		.uleb128 0x13
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 46


 1663 0100 52       		.uleb128 0x52
 1664 0101 01       		.uleb128 0x1
 1665 0102 55       		.uleb128 0x55
 1666 0103 17       		.uleb128 0x17
 1667 0104 58       		.uleb128 0x58
 1668 0105 0B       		.uleb128 0xb
 1669 0106 59       		.uleb128 0x59
 1670 0107 05       		.uleb128 0x5
 1671 0108 00       		.byte	0
 1672 0109 00       		.byte	0
 1673 010a 13       		.uleb128 0x13
 1674 010b 05       		.uleb128 0x5
 1675 010c 00       		.byte	0
 1676 010d 31       		.uleb128 0x31
 1677 010e 13       		.uleb128 0x13
 1678 010f 00       		.byte	0
 1679 0110 00       		.byte	0
 1680 0111 14       		.uleb128 0x14
 1681 0112 0B       		.uleb128 0xb
 1682 0113 01       		.byte	0x1
 1683 0114 55       		.uleb128 0x55
 1684 0115 17       		.uleb128 0x17
 1685 0116 00       		.byte	0
 1686 0117 00       		.byte	0
 1687 0118 15       		.uleb128 0x15
 1688 0119 34       		.uleb128 0x34
 1689 011a 00       		.byte	0
 1690 011b 31       		.uleb128 0x31
 1691 011c 13       		.uleb128 0x13
 1692 011d 02       		.uleb128 0x2
 1693 011e 17       		.uleb128 0x17
 1694 011f 00       		.byte	0
 1695 0120 00       		.byte	0
 1696 0121 16       		.uleb128 0x16
 1697 0122 898201   		.uleb128 0x4109
 1698 0125 01       		.byte	0x1
 1699 0126 11       		.uleb128 0x11
 1700 0127 01       		.uleb128 0x1
 1701 0128 31       		.uleb128 0x31
 1702 0129 13       		.uleb128 0x13
 1703 012a 00       		.byte	0
 1704 012b 00       		.byte	0
 1705 012c 17       		.uleb128 0x17
 1706 012d 2E       		.uleb128 0x2e
 1707 012e 00       		.byte	0
 1708 012f 3F       		.uleb128 0x3f
 1709 0130 19       		.uleb128 0x19
 1710 0131 03       		.uleb128 0x3
 1711 0132 0E       		.uleb128 0xe
 1712 0133 3A       		.uleb128 0x3a
 1713 0134 0B       		.uleb128 0xb
 1714 0135 3B       		.uleb128 0x3b
 1715 0136 05       		.uleb128 0x5
 1716 0137 27       		.uleb128 0x27
 1717 0138 19       		.uleb128 0x19
 1718 0139 11       		.uleb128 0x11
 1719 013a 01       		.uleb128 0x1
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 47


 1720 013b 12       		.uleb128 0x12
 1721 013c 06       		.uleb128 0x6
 1722 013d 40       		.uleb128 0x40
 1723 013e 18       		.uleb128 0x18
 1724 013f 9742     		.uleb128 0x2117
 1725 0141 19       		.uleb128 0x19
 1726 0142 00       		.byte	0
 1727 0143 00       		.byte	0
 1728 0144 18       		.uleb128 0x18
 1729 0145 2E       		.uleb128 0x2e
 1730 0146 01       		.byte	0x1
 1731 0147 3F       		.uleb128 0x3f
 1732 0148 19       		.uleb128 0x19
 1733 0149 03       		.uleb128 0x3
 1734 014a 0E       		.uleb128 0xe
 1735 014b 3A       		.uleb128 0x3a
 1736 014c 0B       		.uleb128 0xb
 1737 014d 3B       		.uleb128 0x3b
 1738 014e 05       		.uleb128 0x5
 1739 014f 27       		.uleb128 0x27
 1740 0150 19       		.uleb128 0x19
 1741 0151 49       		.uleb128 0x49
 1742 0152 13       		.uleb128 0x13
 1743 0153 11       		.uleb128 0x11
 1744 0154 01       		.uleb128 0x1
 1745 0155 12       		.uleb128 0x12
 1746 0156 06       		.uleb128 0x6
 1747 0157 40       		.uleb128 0x40
 1748 0158 18       		.uleb128 0x18
 1749 0159 9742     		.uleb128 0x2117
 1750 015b 19       		.uleb128 0x19
 1751 015c 01       		.uleb128 0x1
 1752 015d 13       		.uleb128 0x13
 1753 015e 00       		.byte	0
 1754 015f 00       		.byte	0
 1755 0160 19       		.uleb128 0x19
 1756 0161 2E       		.uleb128 0x2e
 1757 0162 00       		.byte	0
 1758 0163 3F       		.uleb128 0x3f
 1759 0164 19       		.uleb128 0x19
 1760 0165 03       		.uleb128 0x3
 1761 0166 0E       		.uleb128 0xe
 1762 0167 3A       		.uleb128 0x3a
 1763 0168 0B       		.uleb128 0xb
 1764 0169 3B       		.uleb128 0x3b
 1765 016a 05       		.uleb128 0x5
 1766 016b 27       		.uleb128 0x27
 1767 016c 19       		.uleb128 0x19
 1768 016d 49       		.uleb128 0x49
 1769 016e 13       		.uleb128 0x13
 1770 016f 11       		.uleb128 0x11
 1771 0170 01       		.uleb128 0x1
 1772 0171 12       		.uleb128 0x12
 1773 0172 06       		.uleb128 0x6
 1774 0173 40       		.uleb128 0x40
 1775 0174 18       		.uleb128 0x18
 1776 0175 9742     		.uleb128 0x2117
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 48


 1777 0177 19       		.uleb128 0x19
 1778 0178 00       		.byte	0
 1779 0179 00       		.byte	0
 1780 017a 1A       		.uleb128 0x1a
 1781 017b 34       		.uleb128 0x34
 1782 017c 00       		.byte	0
 1783 017d 03       		.uleb128 0x3
 1784 017e 08       		.uleb128 0x8
 1785 017f 3A       		.uleb128 0x3a
 1786 0180 0B       		.uleb128 0xb
 1787 0181 3B       		.uleb128 0x3b
 1788 0182 05       		.uleb128 0x5
 1789 0183 49       		.uleb128 0x49
 1790 0184 13       		.uleb128 0x13
 1791 0185 02       		.uleb128 0x2
 1792 0186 18       		.uleb128 0x18
 1793 0187 00       		.byte	0
 1794 0188 00       		.byte	0
 1795 0189 1B       		.uleb128 0x1b
 1796 018a 05       		.uleb128 0x5
 1797 018b 00       		.byte	0
 1798 018c 03       		.uleb128 0x3
 1799 018d 0E       		.uleb128 0xe
 1800 018e 3A       		.uleb128 0x3a
 1801 018f 0B       		.uleb128 0xb
 1802 0190 3B       		.uleb128 0x3b
 1803 0191 05       		.uleb128 0x5
 1804 0192 49       		.uleb128 0x49
 1805 0193 13       		.uleb128 0x13
 1806 0194 02       		.uleb128 0x2
 1807 0195 18       		.uleb128 0x18
 1808 0196 00       		.byte	0
 1809 0197 00       		.byte	0
 1810 0198 1C       		.uleb128 0x1c
 1811 0199 2E       		.uleb128 0x2e
 1812 019a 01       		.byte	0x1
 1813 019b 3F       		.uleb128 0x3f
 1814 019c 19       		.uleb128 0x19
 1815 019d 03       		.uleb128 0x3
 1816 019e 0E       		.uleb128 0xe
 1817 019f 3A       		.uleb128 0x3a
 1818 01a0 0B       		.uleb128 0xb
 1819 01a1 3B       		.uleb128 0x3b
 1820 01a2 05       		.uleb128 0x5
 1821 01a3 27       		.uleb128 0x27
 1822 01a4 19       		.uleb128 0x19
 1823 01a5 49       		.uleb128 0x49
 1824 01a6 13       		.uleb128 0x13
 1825 01a7 11       		.uleb128 0x11
 1826 01a8 01       		.uleb128 0x1
 1827 01a9 12       		.uleb128 0x12
 1828 01aa 06       		.uleb128 0x6
 1829 01ab 40       		.uleb128 0x40
 1830 01ac 18       		.uleb128 0x18
 1831 01ad 9642     		.uleb128 0x2116
 1832 01af 19       		.uleb128 0x19
 1833 01b0 01       		.uleb128 0x1
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 49


 1834 01b1 13       		.uleb128 0x13
 1835 01b2 00       		.byte	0
 1836 01b3 00       		.byte	0
 1837 01b4 1D       		.uleb128 0x1d
 1838 01b5 34       		.uleb128 0x34
 1839 01b6 00       		.byte	0
 1840 01b7 03       		.uleb128 0x3
 1841 01b8 0E       		.uleb128 0xe
 1842 01b9 3A       		.uleb128 0x3a
 1843 01ba 0B       		.uleb128 0xb
 1844 01bb 3B       		.uleb128 0x3b
 1845 01bc 0B       		.uleb128 0xb
 1846 01bd 49       		.uleb128 0x49
 1847 01be 13       		.uleb128 0x13
 1848 01bf 3F       		.uleb128 0x3f
 1849 01c0 19       		.uleb128 0x19
 1850 01c1 02       		.uleb128 0x2
 1851 01c2 18       		.uleb128 0x18
 1852 01c3 00       		.byte	0
 1853 01c4 00       		.byte	0
 1854 01c5 1E       		.uleb128 0x1e
 1855 01c6 2E       		.uleb128 0x2e
 1856 01c7 00       		.byte	0
 1857 01c8 3F       		.uleb128 0x3f
 1858 01c9 19       		.uleb128 0x19
 1859 01ca 3C       		.uleb128 0x3c
 1860 01cb 19       		.uleb128 0x19
 1861 01cc 6E       		.uleb128 0x6e
 1862 01cd 0E       		.uleb128 0xe
 1863 01ce 03       		.uleb128 0x3
 1864 01cf 0E       		.uleb128 0xe
 1865 01d0 3A       		.uleb128 0x3a
 1866 01d1 0B       		.uleb128 0xb
 1867 01d2 3B       		.uleb128 0x3b
 1868 01d3 0B       		.uleb128 0xb
 1869 01d4 00       		.byte	0
 1870 01d5 00       		.byte	0
 1871 01d6 00       		.byte	0
 1872              		.section	.debug_loc,"",%progbits
 1873              	.Ldebug_loc0:
 1874              	.LLST0:
 1875 0000 24000000 		.4byte	.LVL2
 1876 0004 28000000 		.4byte	.LVL3
 1877 0008 0500     		.2byte	0x5
 1878 000a 73       		.byte	0x73
 1879 000b 00       		.sleb128 0
 1880 000c 32       		.byte	0x32
 1881 000d 21       		.byte	0x21
 1882 000e 9F       		.byte	0x9f
 1883 000f 28000000 		.4byte	.LVL3
 1884 0013 2C000000 		.4byte	.LVL4
 1885 0017 0100     		.2byte	0x1
 1886 0019 53       		.byte	0x53
 1887 001a 2C000000 		.4byte	.LVL4
 1888 001e 2E000000 		.4byte	.LVL5
 1889 0022 0200     		.2byte	0x2
 1890 0024 72       		.byte	0x72
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 50


 1891 0025 00       		.sleb128 0
 1892 0026 2E000000 		.4byte	.LVL5
 1893 002a 30000000 		.4byte	.LVL6
 1894 002e 0500     		.2byte	0x5
 1895 0030 0C       		.byte	0xc
 1896 0031 03590040 		.4byte	0x40005903
 1897 0035 00000000 		.4byte	0
 1898 0039 00000000 		.4byte	0
 1899              	.LLST1:
 1900 003d 0A000000 		.4byte	.LVL1
 1901 0041 6C000000 		.4byte	.LVL8
 1902 0045 0100     		.2byte	0x1
 1903 0047 54       		.byte	0x54
 1904 0048 00000000 		.4byte	0
 1905 004c 00000000 		.4byte	0
 1906              	.LLST2:
 1907 0050 06000000 		.4byte	.LVL10
 1908 0054 2D000000 		.4byte	.LVL11-1
 1909 0058 0100     		.2byte	0x1
 1910 005a 50       		.byte	0x50
 1911 005b 00000000 		.4byte	0
 1912 005f 00000000 		.4byte	0
 1913              	.LLST3:
 1914 0063 00000000 		.4byte	.LVL12
 1915 0067 00000000 		.4byte	.LVL12
 1916 006b 0100     		.2byte	0x1
 1917 006d 50       		.byte	0x50
 1918 006e 00000000 		.4byte	.LVL12
 1919 0072 0C000000 		.4byte	.LVL14
 1920 0076 0500     		.2byte	0x5
 1921 0078 70       		.byte	0x70
 1922 0079 00       		.sleb128 0
 1923 007a 33       		.byte	0x33
 1924 007b 1A       		.byte	0x1a
 1925 007c 9F       		.byte	0x9f
 1926 007d 0C000000 		.4byte	.LVL14
 1927 0081 18000000 		.4byte	.LFE4
 1928 0085 0600     		.2byte	0x6
 1929 0087 F3       		.byte	0xf3
 1930 0088 01       		.uleb128 0x1
 1931 0089 50       		.byte	0x50
 1932 008a 33       		.byte	0x33
 1933 008b 1A       		.byte	0x1a
 1934 008c 9F       		.byte	0x9f
 1935 008d 00000000 		.4byte	0
 1936 0091 00000000 		.4byte	0
 1937              	.LLST4:
 1938 0095 08000000 		.4byte	.LVL13
 1939 0099 0E000000 		.4byte	.LVL15
 1940 009d 0100     		.2byte	0x1
 1941 009f 53       		.byte	0x53
 1942 00a0 0E000000 		.4byte	.LVL15
 1943 00a4 18000000 		.4byte	.LFE4
 1944 00a8 0100     		.2byte	0x1
 1945 00aa 50       		.byte	0x50
 1946 00ab 00000000 		.4byte	0
 1947 00af 00000000 		.4byte	0
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 51


 1948              	.LLST5:
 1949 00b3 00000000 		.4byte	.LVL16
 1950 00b7 12000000 		.4byte	.LVL19
 1951 00bb 0100     		.2byte	0x1
 1952 00bd 50       		.byte	0x50
 1953 00be 12000000 		.4byte	.LVL19
 1954 00c2 60000000 		.4byte	.LFE5
 1955 00c6 0400     		.2byte	0x4
 1956 00c8 F3       		.byte	0xf3
 1957 00c9 01       		.uleb128 0x1
 1958 00ca 50       		.byte	0x50
 1959 00cb 9F       		.byte	0x9f
 1960 00cc 00000000 		.4byte	0
 1961 00d0 00000000 		.4byte	0
 1962              	.LLST6:
 1963 00d4 0E000000 		.4byte	.LVL17
 1964 00d8 10000000 		.4byte	.LVL18
 1965 00dc 0300     		.2byte	0x3
 1966 00de 08       		.byte	0x8
 1967 00df 42       		.byte	0x42
 1968 00e0 9F       		.byte	0x9f
 1969 00e1 00000000 		.4byte	0
 1970 00e5 00000000 		.4byte	0
 1971              	.LLST7:
 1972 00e9 2E000000 		.4byte	.LVL21
 1973 00ed 3A000000 		.4byte	.LVL22
 1974 00f1 0100     		.2byte	0x1
 1975 00f3 51       		.byte	0x51
 1976 00f4 00000000 		.4byte	0
 1977 00f8 00000000 		.4byte	0
 1978              	.LLST8:
 1979 00fc 00000000 		.4byte	.LVL26
 1980 0100 16000000 		.4byte	.LVL29
 1981 0104 0100     		.2byte	0x1
 1982 0106 50       		.byte	0x50
 1983 0107 16000000 		.4byte	.LVL29
 1984 010b 28000000 		.4byte	.LFE8
 1985 010f 0400     		.2byte	0x4
 1986 0111 F3       		.byte	0xf3
 1987 0112 01       		.uleb128 0x1
 1988 0113 50       		.byte	0x50
 1989 0114 9F       		.byte	0x9f
 1990 0115 00000000 		.4byte	0
 1991 0119 00000000 		.4byte	0
 1992              	.LLST9:
 1993 011d 06000000 		.4byte	.LVL27
 1994 0121 0A000000 		.4byte	.LVL28
 1995 0125 0500     		.2byte	0x5
 1996 0127 74       		.byte	0x74
 1997 0128 00       		.sleb128 0
 1998 0129 31       		.byte	0x31
 1999 012a 1A       		.byte	0x1a
 2000 012b 9F       		.byte	0x9f
 2001 012c 00000000 		.4byte	0
 2002 0130 00000000 		.4byte	0
 2003              	.LLST10:
 2004 0134 00000000 		.4byte	.LVL33
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 52


 2005 0138 04000000 		.4byte	.LVL34
 2006 013c 0100     		.2byte	0x1
 2007 013e 50       		.byte	0x50
 2008 013f 04000000 		.4byte	.LVL34
 2009 0143 10000000 		.4byte	.LFE13
 2010 0147 0400     		.2byte	0x4
 2011 0149 F3       		.byte	0xf3
 2012 014a 01       		.uleb128 0x1
 2013 014b 50       		.byte	0x50
 2014 014c 9F       		.byte	0x9f
 2015 014d 00000000 		.4byte	0
 2016 0151 00000000 		.4byte	0
 2017              	.LLST11:
 2018 0155 00000000 		.4byte	.LVL36
 2019 0159 1C000000 		.4byte	.LVL40
 2020 015d 0100     		.2byte	0x1
 2021 015f 50       		.byte	0x50
 2022 0160 1C000000 		.4byte	.LVL40
 2023 0164 22000000 		.4byte	.LVL41
 2024 0168 0400     		.2byte	0x4
 2025 016a F3       		.byte	0xf3
 2026 016b 01       		.uleb128 0x1
 2027 016c 50       		.byte	0x50
 2028 016d 9F       		.byte	0x9f
 2029 016e 22000000 		.4byte	.LVL41
 2030 0172 38000000 		.4byte	.LVL44
 2031 0176 0100     		.2byte	0x1
 2032 0178 50       		.byte	0x50
 2033 0179 00000000 		.4byte	0
 2034 017d 00000000 		.4byte	0
 2035              	.LLST12:
 2036 0181 32000000 		.4byte	.LVL42
 2037 0185 34000000 		.4byte	.LVL43
 2038 0189 0900     		.2byte	0x9
 2039 018b 73       		.byte	0x73
 2040 018c 00       		.sleb128 0
 2041 018d 72       		.byte	0x72
 2042 018e 00       		.sleb128 0
 2043 018f 22       		.byte	0x22
 2044 0190 71       		.byte	0x71
 2045 0191 00       		.sleb128 0
 2046 0192 1B       		.byte	0x1b
 2047 0193 9F       		.byte	0x9f
 2048 0194 00000000 		.4byte	0
 2049 0198 00000000 		.4byte	0
 2050              	.LLST13:
 2051 019c 10000000 		.4byte	.LVL37
 2052 01a0 12000000 		.4byte	.LVL38
 2053 01a4 0100     		.2byte	0x1
 2054 01a6 51       		.byte	0x51
 2055 01a7 16000000 		.4byte	.LVL39
 2056 01ab 48000000 		.4byte	.LFE15
 2057 01af 0100     		.2byte	0x1
 2058 01b1 51       		.byte	0x51
 2059 01b2 00000000 		.4byte	0
 2060 01b6 00000000 		.4byte	0
 2061              	.LLST14:
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 53


 2062 01ba 00000000 		.4byte	.LVL45
 2063 01be 20000000 		.4byte	.LVL49
 2064 01c2 0100     		.2byte	0x1
 2065 01c4 50       		.byte	0x50
 2066 01c5 20000000 		.4byte	.LVL49
 2067 01c9 34000000 		.4byte	.LVL51
 2068 01cd 0100     		.2byte	0x1
 2069 01cf 54       		.byte	0x54
 2070 01d0 00000000 		.4byte	0
 2071 01d4 00000000 		.4byte	0
 2072              	.LLST15:
 2073 01d8 20000000 		.4byte	.LVL49
 2074 01dc 31000000 		.4byte	.LVL50-1
 2075 01e0 1A00     		.2byte	0x1a
 2076 01e2 74       		.byte	0x74
 2077 01e3 00       		.sleb128 0
 2078 01e4 F7       		.byte	0xf7
 2079 01e5 41       		.uleb128 0x41
 2080 01e6 F7       		.byte	0xf7
 2081 01e7 25       		.uleb128 0x25
 2082 01e8 0C       		.byte	0xc
 2083 01e9 80969800 		.4byte	0x989680
 2084 01ed F7       		.byte	0xf7
 2085 01ee 25       		.uleb128 0x25
 2086 01ef 1E       		.byte	0x1e
 2087 01f0 F7       		.byte	0xf7
 2088 01f1 33       		.uleb128 0x33
 2089 01f2 72       		.byte	0x72
 2090 01f3 00       		.sleb128 0
 2091 01f4 F7       		.byte	0xf7
 2092 01f5 3A       		.uleb128 0x3a
 2093 01f6 F7       		.byte	0xf7
 2094 01f7 33       		.uleb128 0x33
 2095 01f8 1B       		.byte	0x1b
 2096 01f9 F7       		.byte	0xf7
 2097 01fa 25       		.uleb128 0x25
 2098 01fb 9F       		.byte	0x9f
 2099 01fc 00000000 		.4byte	0
 2100 0200 00000000 		.4byte	0
 2101              	.LLST16:
 2102 0204 12000000 		.4byte	.LVL46
 2103 0208 14000000 		.4byte	.LVL47
 2104 020c 0100     		.2byte	0x1
 2105 020e 52       		.byte	0x52
 2106 020f 18000000 		.4byte	.LVL48
 2107 0213 31000000 		.4byte	.LVL50-1
 2108 0217 0100     		.2byte	0x1
 2109 0219 52       		.byte	0x52
 2110 021a 00000000 		.4byte	0
 2111 021e 00000000 		.4byte	0
 2112              	.LLST17:
 2113 0222 00000000 		.4byte	.LVL52
 2114 0226 1E000000 		.4byte	.LVL56
 2115 022a 0100     		.2byte	0x1
 2116 022c 50       		.byte	0x50
 2117 022d 1E000000 		.4byte	.LVL56
 2118 0231 23000000 		.4byte	.LVL57-1
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 54


 2119 0235 0100     		.2byte	0x1
 2120 0237 50       		.byte	0x50
 2121 0238 00000000 		.4byte	0
 2122 023c 00000000 		.4byte	0
 2123              	.LLST18:
 2124 0240 1E000000 		.4byte	.LVL56
 2125 0244 23000000 		.4byte	.LVL57-1
 2126 0248 1600     		.2byte	0x16
 2127 024a 70       		.byte	0x70
 2128 024b 00       		.sleb128 0
 2129 024c F7       		.byte	0xf7
 2130 024d 41       		.uleb128 0x41
 2131 024e F7       		.byte	0xf7
 2132 024f 2C       		.uleb128 0x2c
 2133 0250 F4       		.byte	0xf4
 2134 0251 2C       		.uleb128 0x2c
 2135 0252 04       		.byte	0x4
 2136 0253 00002041 		.4byte	0x41200000
 2137 0257 1E       		.byte	0x1e
 2138 0258 74       		.byte	0x74
 2139 0259 00       		.sleb128 0
 2140 025a F7       		.byte	0xf7
 2141 025b 3A       		.uleb128 0x3a
 2142 025c F7       		.byte	0xf7
 2143 025d 2C       		.uleb128 0x2c
 2144 025e 1B       		.byte	0x1b
 2145 025f 9F       		.byte	0x9f
 2146 0260 00000000 		.4byte	0
 2147 0264 00000000 		.4byte	0
 2148              	.LLST19:
 2149 0268 12000000 		.4byte	.LVL53
 2150 026c 14000000 		.4byte	.LVL54
 2151 0270 0100     		.2byte	0x1
 2152 0272 54       		.byte	0x54
 2153 0273 18000000 		.4byte	.LVL55
 2154 0277 3C000000 		.4byte	.LVL61
 2155 027b 0100     		.2byte	0x1
 2156 027d 54       		.byte	0x54
 2157 027e 00000000 		.4byte	0
 2158 0282 00000000 		.4byte	0
 2159              		.section	.debug_aranges,"",%progbits
 2160 0000 9C000000 		.4byte	0x9c
 2161 0004 0200     		.2byte	0x2
 2162 0006 00000000 		.4byte	.Ldebug_info0
 2163 000a 04       		.byte	0x4
 2164 000b 00       		.byte	0
 2165 000c 0000     		.2byte	0
 2166 000e 0000     		.2byte	0
 2167 0010 00000000 		.4byte	.LFB2
 2168 0014 7C000000 		.4byte	.LFE2-.LFB2
 2169 0018 00000000 		.4byte	.LFB3
 2170 001c 34000000 		.4byte	.LFE3-.LFB3
 2171 0020 00000000 		.4byte	.LFB4
 2172 0024 18000000 		.4byte	.LFE4-.LFB4
 2173 0028 00000000 		.4byte	.LFB5
 2174 002c 60000000 		.4byte	.LFE5-.LFB5
 2175 0030 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 55


 2176 0034 24000000 		.4byte	.LFE1-.LFB1
 2177 0038 00000000 		.4byte	.LFB0
 2178 003c 1C000000 		.4byte	.LFE0-.LFB0
 2179 0040 00000000 		.4byte	.LFB6
 2180 0044 10000000 		.4byte	.LFE6-.LFB6
 2181 0048 00000000 		.4byte	.LFB7
 2182 004c 10000000 		.4byte	.LFE7-.LFB7
 2183 0050 00000000 		.4byte	.LFB8
 2184 0054 28000000 		.4byte	.LFE8-.LFB8
 2185 0058 00000000 		.4byte	.LFB9
 2186 005c 18000000 		.4byte	.LFE9-.LFB9
 2187 0060 00000000 		.4byte	.LFB10
 2188 0064 18000000 		.4byte	.LFE10-.LFB10
 2189 0068 00000000 		.4byte	.LFB11
 2190 006c 0C000000 		.4byte	.LFE11-.LFB11
 2191 0070 00000000 		.4byte	.LFB13
 2192 0074 10000000 		.4byte	.LFE13-.LFB13
 2193 0078 00000000 		.4byte	.LFB14
 2194 007c 0C000000 		.4byte	.LFE14-.LFB14
 2195 0080 00000000 		.4byte	.LFB15
 2196 0084 48000000 		.4byte	.LFE15-.LFB15
 2197 0088 00000000 		.4byte	.LFB16
 2198 008c 44000000 		.4byte	.LFE16-.LFB16
 2199 0090 00000000 		.4byte	.LFB17
 2200 0094 4C000000 		.4byte	.LFE17-.LFB17
 2201 0098 00000000 		.4byte	0
 2202 009c 00000000 		.4byte	0
 2203              		.section	.debug_ranges,"",%progbits
 2204              	.Ldebug_ranges0:
 2205 0000 28000000 		.4byte	.LBB4
 2206 0004 2A000000 		.4byte	.LBE4
 2207 0008 2E000000 		.4byte	.LBB7
 2208 000c 60000000 		.4byte	.LBE7
 2209 0010 00000000 		.4byte	0
 2210 0014 00000000 		.4byte	0
 2211 0018 00000000 		.4byte	.LFB2
 2212 001c 7C000000 		.4byte	.LFE2
 2213 0020 00000000 		.4byte	.LFB3
 2214 0024 34000000 		.4byte	.LFE3
 2215 0028 00000000 		.4byte	.LFB4
 2216 002c 18000000 		.4byte	.LFE4
 2217 0030 00000000 		.4byte	.LFB5
 2218 0034 60000000 		.4byte	.LFE5
 2219 0038 00000000 		.4byte	.LFB1
 2220 003c 24000000 		.4byte	.LFE1
 2221 0040 00000000 		.4byte	.LFB0
 2222 0044 1C000000 		.4byte	.LFE0
 2223 0048 00000000 		.4byte	.LFB6
 2224 004c 10000000 		.4byte	.LFE6
 2225 0050 00000000 		.4byte	.LFB7
 2226 0054 10000000 		.4byte	.LFE7
 2227 0058 00000000 		.4byte	.LFB8
 2228 005c 28000000 		.4byte	.LFE8
 2229 0060 00000000 		.4byte	.LFB9
 2230 0064 18000000 		.4byte	.LFE9
 2231 0068 00000000 		.4byte	.LFB10
 2232 006c 18000000 		.4byte	.LFE10
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 56


 2233 0070 00000000 		.4byte	.LFB11
 2234 0074 0C000000 		.4byte	.LFE11
 2235 0078 00000000 		.4byte	.LFB13
 2236 007c 10000000 		.4byte	.LFE13
 2237 0080 00000000 		.4byte	.LFB14
 2238 0084 0C000000 		.4byte	.LFE14
 2239 0088 00000000 		.4byte	.LFB15
 2240 008c 48000000 		.4byte	.LFE15
 2241 0090 00000000 		.4byte	.LFB16
 2242 0094 44000000 		.4byte	.LFE16
 2243 0098 00000000 		.4byte	.LFB17
 2244 009c 4C000000 		.4byte	.LFE17
 2245 00a0 00000000 		.4byte	0
 2246 00a4 00000000 		.4byte	0
 2247              		.section	.debug_line,"",%progbits
 2248              	.Ldebug_line0:
 2249 0000 FD010000 		.section	.debug_str,"MS",%progbits,1
 2249      02005900 
 2249      00000201 
 2249      FB0E0D00 
 2249      01010101 
 2250              	.LASF14:
 2251 0000 75696E74 		.ascii	"uint16\000"
 2251      313600
 2252              	.LASF42:
 2253 0007 61646347 		.ascii	"adcGain\000"
 2253      61696E00 
 2254              	.LASF26:
 2255 000f 506F7465 		.ascii	"Potenciometro_SAR_Stop\000"
 2255      6E63696F 
 2255      6D657472 
 2255      6F5F5341 
 2255      525F5374 
 2256              	.LASF64:
 2257 0026 636F756E 		.ascii	"counts\000"
 2257      747300
 2258              	.LASF61:
 2259 002d 47656E65 		.ascii	"Generated_Source\\PSoC5\\Potenciometro_SAR.c\000"
 2259      72617465 
 2259      645F536F 
 2259      75726365 
 2259      5C50536F 
 2260              	.LASF41:
 2261 0058 506F7465 		.ascii	"Potenciometro_SAR_SetGain\000"
 2261      6E63696F 
 2261      6D657472 
 2261      6F5F5341 
 2261      525F5365 
 2262              	.LASF52:
 2263 0072 506F7465 		.ascii	"Potenciometro_SAR_initVar\000"
 2263      6E63696F 
 2263      6D657472 
 2263      6F5F5341 
 2263      525F696E 
 2264              	.LASF0:
 2265 008c 6C6F6E67 		.ascii	"long long unsigned int\000"
 2265      206C6F6E 
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 57


 2265      6720756E 
 2265      7369676E 
 2265      65642069 
 2266              	.LASF34:
 2267 00a3 506F7465 		.ascii	"Potenciometro_SAR_StopConvert\000"
 2267      6E63696F 
 2267      6D657472 
 2267      6F5F5341 
 2267      525F5374 
 2268              	.LASF2:
 2269 00c1 6C6F6E67 		.ascii	"long long int\000"
 2269      206C6F6E 
 2269      6720696E 
 2269      7400
 2270              	.LASF6:
 2271 00cf 7369676E 		.ascii	"signed char\000"
 2271      65642063 
 2271      68617200 
 2272              	.LASF60:
 2273 00db 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2273      43313120 
 2273      352E342E 
 2273      31203230 
 2273      31363036 
 2274 010e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2274      20726576 
 2274      6973696F 
 2274      6E203233 
 2274      37373135 
 2275 0141 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 2275      66756E63 
 2275      74696F6E 
 2275      2D736563 
 2275      74696F6E 
 2276              	.LASF17:
 2277 0169 696E7433 		.ascii	"int32\000"
 2277      3200
 2278              	.LASF9:
 2279 016f 6C6F6E67 		.ascii	"long int\000"
 2279      20696E74 
 2279      00
 2280              	.LASF22:
 2281 0178 72656731 		.ascii	"reg16\000"
 2281      3600
 2282              	.LASF13:
 2283 017e 75696E74 		.ascii	"uint8\000"
 2283      3800
 2284              	.LASF27:
 2285 0184 506F7465 		.ascii	"Potenciometro_SAR_SetPower\000"
 2285      6E63696F 
 2285      6D657472 
 2285      6F5F5341 
 2285      525F5365 
 2286              	.LASF58:
 2287 019f 43794465 		.ascii	"CyDelayUs\000"
 2287      6C617955 
 2287      7300
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 58


 2288              	.LASF19:
 2289 01a9 646F7562 		.ascii	"double\000"
 2289      6C6500
 2290              	.LASF37:
 2291 01b0 506F7465 		.ascii	"Potenciometro_SAR_IsEndConversion\000"
 2291      6E63696F 
 2291      6D657472 
 2291      6F5F5341 
 2291      525F4973 
 2292              	.LASF47:
 2293 01d2 636F756E 		.ascii	"countsPer10Volt\000"
 2293      74735065 
 2293      72313056 
 2293      6F6C7400 
 2294              	.LASF39:
 2295 01e2 506F7465 		.ascii	"Potenciometro_SAR_SetOffset\000"
 2295      6E63696F 
 2295      6D657472 
 2295      6F5F5341 
 2295      525F5365 
 2296              	.LASF62:
 2297 01fe 453A5C55 		.ascii	"E:\\U\\Lab de Control\\PID Controler-20191011T02191"
 2297      5C4C6162 
 2297      20646520 
 2297      436F6E74 
 2297      726F6C5C 
 2298 022e 395A2D30 		.ascii	"9Z-001\\PID Controler\\Controlador.cydsn\000"
 2298      30315C50 
 2298      49442043 
 2298      6F6E7472 
 2298      6F6C6572 
 2299              	.LASF35:
 2300 0255 7265744D 		.ascii	"retMode\000"
 2300      6F646500 
 2301              	.LASF4:
 2302 025d 756E7369 		.ascii	"unsigned int\000"
 2302      676E6564 
 2302      20696E74 
 2302      00
 2303              	.LASF44:
 2304 026a 506F7465 		.ascii	"Potenciometro_SAR_CountsTo_mVolts\000"
 2304      6E63696F 
 2304      6D657472 
 2304      6F5F5341 
 2304      525F436F 
 2305              	.LASF49:
 2306 028c 75566F6C 		.ascii	"uVolts\000"
 2306      747300
 2307              	.LASF53:
 2308 0293 506F7465 		.ascii	"Potenciometro_SAR_offset\000"
 2308      6E63696F 
 2308      6D657472 
 2308      6F5F5341 
 2308      525F6F66 
 2309              	.LASF10:
 2310 02ac 6C6F6E67 		.ascii	"long unsigned int\000"
 2310      20756E73 
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 59


 2310      69676E65 
 2310      6420696E 
 2310      7400
 2311              	.LASF51:
 2312 02be 766F6C74 		.ascii	"volts\000"
 2312      7300
 2313              	.LASF33:
 2314 02c4 506F7465 		.ascii	"Potenciometro_SAR_StartConvert\000"
 2314      6E63696F 
 2314      6D657472 
 2314      6F5F5341 
 2314      525F5374 
 2315              	.LASF57:
 2316 02e3 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2316      74657243 
 2316      72697469 
 2316      63616C53 
 2316      65637469 
 2317              	.LASF8:
 2318 02fa 73686F72 		.ascii	"short unsigned int\000"
 2318      7420756E 
 2318      7369676E 
 2318      65642069 
 2318      6E7400
 2319              	.LASF56:
 2320 030d 506F7465 		.ascii	"Potenciometro_SAR_shift\000"
 2320      6E63696F 
 2320      6D657472 
 2320      6F5F5341 
 2320      525F7368 
 2321              	.LASF15:
 2322 0325 696E7438 		.ascii	"int8\000"
 2322      00
 2323              	.LASF31:
 2324 032a 506F7465 		.ascii	"Potenciometro_SAR_Init\000"
 2324      6E63696F 
 2324      6D657472 
 2324      6F5F5341 
 2324      525F496E 
 2325              	.LASF54:
 2326 0341 506F7465 		.ascii	"Potenciometro_SAR_countsPerVolt\000"
 2326      6E63696F 
 2326      6D657472 
 2326      6F5F5341 
 2326      525F636F 
 2327              	.LASF25:
 2328 0361 506F7465 		.ascii	"Potenciometro_SAR_Enable\000"
 2328      6E63696F 
 2328      6D657472 
 2328      6F5F5341 
 2328      525F456E 
 2329              	.LASF46:
 2330 037a 6D566F6C 		.ascii	"mVolts\000"
 2330      747300
 2331              	.LASF28:
 2332 0381 506F7465 		.ascii	"Potenciometro_SAR_SetResolution\000"
 2332      6E63696F 
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 60


 2332      6D657472 
 2332      6F5F5341 
 2332      525F5365 
 2333              	.LASF18:
 2334 03a1 666C6F61 		.ascii	"float32\000"
 2334      74333200 
 2335              	.LASF11:
 2336 03a9 73697A65 		.ascii	"sizetype\000"
 2336      74797065 
 2336      00
 2337              	.LASF5:
 2338 03b2 6C6F6E67 		.ascii	"long double\000"
 2338      20646F75 
 2338      626C6500 
 2339              	.LASF20:
 2340 03be 696E7436 		.ascii	"int64\000"
 2340      3400
 2341              	.LASF55:
 2342 03c4 506F7465 		.ascii	"Potenciometro_SAR_countsPer10Volt\000"
 2342      6E63696F 
 2342      6D657472 
 2342      6F5F5341 
 2342      525F636F 
 2343              	.LASF1:
 2344 03e6 666C6F61 		.ascii	"float\000"
 2344      7400
 2345              	.LASF59:
 2346 03ec 43794578 		.ascii	"CyExitCriticalSection\000"
 2346      69744372 
 2346      69746963 
 2346      616C5365 
 2346      6374696F 
 2347              	.LASF32:
 2348 0402 506F7465 		.ascii	"Potenciometro_SAR_Start\000"
 2348      6E63696F 
 2348      6D657472 
 2348      6F5F5341 
 2348      525F5374 
 2349              	.LASF29:
 2350 041a 706F7765 		.ascii	"power\000"
 2350      7200
 2351              	.LASF21:
 2352 0420 72656738 		.ascii	"reg8\000"
 2352      00
 2353              	.LASF7:
 2354 0425 756E7369 		.ascii	"unsigned char\000"
 2354      676E6564 
 2354      20636861 
 2354      7200
 2355              	.LASF3:
 2356 0433 73686F72 		.ascii	"short int\000"
 2356      7420696E 
 2356      7400
 2357              	.LASF63:
 2358 043d 506F7465 		.ascii	"Potenciometro_SAR_CalcGain\000"
 2358      6E63696F 
 2358      6D657472 
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 61


 2358      6F5F5341 
 2358      525F4361 
 2359              	.LASF38:
 2360 0458 506F7465 		.ascii	"Potenciometro_SAR_GetResult16\000"
 2360      6E63696F 
 2360      6D657472 
 2360      6F5F5341 
 2360      525F4765 
 2361              	.LASF30:
 2362 0476 7265736F 		.ascii	"resolution\000"
 2362      6C757469 
 2362      6F6E00
 2363              	.LASF12:
 2364 0481 63686172 		.ascii	"char\000"
 2364      00
 2365              	.LASF40:
 2366 0486 6F666673 		.ascii	"offset\000"
 2366      657400
 2367              	.LASF45:
 2368 048d 61646343 		.ascii	"adcCounts\000"
 2368      6F756E74 
 2368      7300
 2369              	.LASF50:
 2370 0497 506F7465 		.ascii	"Potenciometro_SAR_CountsTo_Volts\000"
 2370      6E63696F 
 2370      6D657472 
 2370      6F5F5341 
 2370      525F436F 
 2371              	.LASF24:
 2372 04b8 656E6162 		.ascii	"enableInterrupts\000"
 2372      6C65496E 
 2372      74657272 
 2372      75707473 
 2372      00
 2373              	.LASF36:
 2374 04c9 73746174 		.ascii	"status\000"
 2374      757300
 2375              	.LASF48:
 2376 04d0 506F7465 		.ascii	"Potenciometro_SAR_CountsTo_uVolts\000"
 2376      6E63696F 
 2376      6D657472 
 2376      6F5F5341 
 2376      525F436F 
 2377              	.LASF16:
 2378 04f2 696E7431 		.ascii	"int16\000"
 2378      3600
 2379              	.LASF43:
 2380 04f8 506F7465 		.ascii	"Potenciometro_SAR_SetScaledGain\000"
 2380      6E63696F 
 2380      6D657472 
 2380      6F5F5341 
 2380      525F5365 
 2381              	.LASF23:
 2382 0518 746D7052 		.ascii	"tmpReg\000"
 2382      656700
 2383              	.LASF65:
 2384 051f 506F7465 		.ascii	"Potenciometro_SAR_GetResult8\000"
ARM GAS  C:\Users\emman\AppData\Local\Temp\cc28O60i.s 			page 62


 2384      6E63696F 
 2384      6D657472 
 2384      6F5F5341 
 2384      525F4765 
 2385              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
