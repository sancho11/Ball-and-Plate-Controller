ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_Y.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_Y_Enable,"ax",%progbits
  20              		.align	1
  21              		.global	PWM_Y_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	PWM_Y_Enable, %function
  25              	PWM_Y_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\PWM_Y.c"
   1:Generated_Source\PSoC5/PWM_Y.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_Y.c **** * File Name: PWM_Y.c
   3:Generated_Source\PSoC5/PWM_Y.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_Y.c **** *
   5:Generated_Source\PSoC5/PWM_Y.c **** * Description:
   6:Generated_Source\PSoC5/PWM_Y.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_Y.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_Y.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_Y.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_Y.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_Y.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_Y.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_Y.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_Y.c **** *
  15:Generated_Source\PSoC5/PWM_Y.c **** * Note:
  16:Generated_Source\PSoC5/PWM_Y.c **** *
  17:Generated_Source\PSoC5/PWM_Y.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_Y.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_Y.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_Y.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_Y.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_Y.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_Y.c **** 
  24:Generated_Source\PSoC5/PWM_Y.c **** #include "PWM_Y.h"
  25:Generated_Source\PSoC5/PWM_Y.c **** 
  26:Generated_Source\PSoC5/PWM_Y.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_Y.c **** #ifdef PWM_Y_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_Y.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_Y.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_Y.c **** #endif /* PWM_Y_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 2


  31:Generated_Source\PSoC5/PWM_Y.c **** 
  32:Generated_Source\PSoC5/PWM_Y.c **** uint8 PWM_Y_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_Y.c **** 
  34:Generated_Source\PSoC5/PWM_Y.c **** 
  35:Generated_Source\PSoC5/PWM_Y.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_Y.c **** * Function Name: PWM_Y_Start
  37:Generated_Source\PSoC5/PWM_Y.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_Y.c **** *
  39:Generated_Source\PSoC5/PWM_Y.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_Y.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_Y.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_Y.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_Y.c **** *
  44:Generated_Source\PSoC5/PWM_Y.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_Y.c **** *  None
  46:Generated_Source\PSoC5/PWM_Y.c **** *
  47:Generated_Source\PSoC5/PWM_Y.c **** * Return:
  48:Generated_Source\PSoC5/PWM_Y.c **** *  None
  49:Generated_Source\PSoC5/PWM_Y.c **** *
  50:Generated_Source\PSoC5/PWM_Y.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_Y.c **** *  PWM_Y_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_Y.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_Y.c **** *
  54:Generated_Source\PSoC5/PWM_Y.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_Y.c **** void PWM_Y_Start(void) 
  56:Generated_Source\PSoC5/PWM_Y.c **** {
  57:Generated_Source\PSoC5/PWM_Y.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_Y.c ****     if(PWM_Y_initVar == 0u)
  59:Generated_Source\PSoC5/PWM_Y.c ****     {
  60:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_Init();
  61:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_initVar = 1u;
  62:Generated_Source\PSoC5/PWM_Y.c ****     }
  63:Generated_Source\PSoC5/PWM_Y.c ****     PWM_Y_Enable();
  64:Generated_Source\PSoC5/PWM_Y.c **** 
  65:Generated_Source\PSoC5/PWM_Y.c **** }
  66:Generated_Source\PSoC5/PWM_Y.c **** 
  67:Generated_Source\PSoC5/PWM_Y.c **** 
  68:Generated_Source\PSoC5/PWM_Y.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_Y.c **** * Function Name: PWM_Y_Init
  70:Generated_Source\PSoC5/PWM_Y.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_Y.c **** *
  72:Generated_Source\PSoC5/PWM_Y.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_Y.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_Y.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_Y.c **** *  PWM_Y_Start().
  76:Generated_Source\PSoC5/PWM_Y.c **** *
  77:Generated_Source\PSoC5/PWM_Y.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_Y.c **** *  None
  79:Generated_Source\PSoC5/PWM_Y.c **** *
  80:Generated_Source\PSoC5/PWM_Y.c **** * Return:
  81:Generated_Source\PSoC5/PWM_Y.c **** *  None
  82:Generated_Source\PSoC5/PWM_Y.c **** *
  83:Generated_Source\PSoC5/PWM_Y.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_Y.c **** void PWM_Y_Init(void) 
  85:Generated_Source\PSoC5/PWM_Y.c **** {
  86:Generated_Source\PSoC5/PWM_Y.c ****     #if (PWM_Y_UsingFixedFunction || PWM_Y_UseControl)
  87:Generated_Source\PSoC5/PWM_Y.c ****         uint8 ctrl;
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 3


  88:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* (PWM_Y_UsingFixedFunction || PWM_Y_UseControl) */
  89:Generated_Source\PSoC5/PWM_Y.c **** 
  90:Generated_Source\PSoC5/PWM_Y.c ****     #if(!PWM_Y_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_Y.c ****         #if(PWM_Y_UseStatus)
  92:Generated_Source\PSoC5/PWM_Y.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_Y.c ****             uint8 PWM_Y_interruptState;
  94:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_UseStatus) */
  95:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* (!PWM_Y_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_Y.c **** 
  97:Generated_Source\PSoC5/PWM_Y.c ****     #if (PWM_Y_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_Y.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_CONTROL |= PWM_Y_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_Y.c ****         #if (PWM_Y_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_CONTROL |= PWM_Y_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_Y.c **** 
 104:Generated_Source\PSoC5/PWM_Y.c ****         ctrl = PWM_Y_CONTROL3 & ((uint8 )(~PWM_Y_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_CONTROL3 = ctrl | PWM_Y_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_Y.c **** 
 107:Generated_Source\PSoC5/PWM_Y.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_RT1 &= ((uint8)(~PWM_Y_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_RT1 |= PWM_Y_SYNC;
 110:Generated_Source\PSoC5/PWM_Y.c **** 
 111:Generated_Source\PSoC5/PWM_Y.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_RT1 &= ((uint8)(~PWM_Y_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_RT1 |= PWM_Y_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_Y.c **** 
 115:Generated_Source\PSoC5/PWM_Y.c ****     #elif (PWM_Y_UseControl)
 116:Generated_Source\PSoC5/PWM_Y.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_Y.c ****         ctrl = PWM_Y_CONTROL & ((uint8)(~PWM_Y_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_Y.c ****                 ((uint8)(~PWM_Y_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_CONTROL = ctrl | PWM_Y_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_Y.c ****                                    PWM_Y_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* (PWM_Y_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_Y.c **** 
 123:Generated_Source\PSoC5/PWM_Y.c ****     #if (!PWM_Y_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_Y.c ****         #if (PWM_Y_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_Y.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_AUX_CONTROLDP0 |= (PWM_Y_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_Y.c ****         #else /* (PWM_Y_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_Y.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_AUX_CONTROLDP0 |= (PWM_Y_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_AUX_CONTROLDP1 |= (PWM_Y_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_Y.c **** 
 133:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_WriteCounter(PWM_Y_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* (!PWM_Y_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_Y.c **** 
 136:Generated_Source\PSoC5/PWM_Y.c ****     PWM_Y_WritePeriod(PWM_Y_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/PWM_Y.c **** 
 138:Generated_Source\PSoC5/PWM_Y.c ****         #if (PWM_Y_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_WriteCompare(PWM_Y_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_Y.c ****         #else
 141:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_WriteCompare1(PWM_Y_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_WriteCompare2(PWM_Y_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_Y.c **** 
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 4


 145:Generated_Source\PSoC5/PWM_Y.c ****         #if (PWM_Y_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_WriteKillTime(PWM_Y_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_Y.c **** 
 149:Generated_Source\PSoC5/PWM_Y.c ****         #if (PWM_Y_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_WriteDeadTime(PWM_Y_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_Y.c **** 
 153:Generated_Source\PSoC5/PWM_Y.c ****     #if (PWM_Y_UseStatus || PWM_Y_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_SetInterruptMode(PWM_Y_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* (PWM_Y_UseStatus || PWM_Y_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_Y.c **** 
 157:Generated_Source\PSoC5/PWM_Y.c ****     #if (PWM_Y_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_Y.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_GLOBAL_ENABLE |= PWM_Y_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_Y.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_CONTROL2 |= PWM_Y_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_Y.c ****     #else
 163:Generated_Source\PSoC5/PWM_Y.c ****         #if(PWM_Y_UseStatus)
 164:Generated_Source\PSoC5/PWM_Y.c **** 
 165:Generated_Source\PSoC5/PWM_Y.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_Y.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_Y.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_STATUS_AUX_CTRL |= PWM_Y_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_Y.c **** 
 171:Generated_Source\PSoC5/PWM_Y.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_Y.c ****             CyExitCriticalSection(PWM_Y_interruptState);
 173:Generated_Source\PSoC5/PWM_Y.c **** 
 174:Generated_Source\PSoC5/PWM_Y.c ****             /* Clear the FIFO to enable the PWM_Y_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_Y.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_UseStatus) */
 178:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* (PWM_Y_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_Y.c **** }
 180:Generated_Source\PSoC5/PWM_Y.c **** 
 181:Generated_Source\PSoC5/PWM_Y.c **** 
 182:Generated_Source\PSoC5/PWM_Y.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_Y.c **** * Function Name: PWM_Y_Enable
 184:Generated_Source\PSoC5/PWM_Y.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_Y.c **** *
 186:Generated_Source\PSoC5/PWM_Y.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_Y.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_Y.c **** *
 189:Generated_Source\PSoC5/PWM_Y.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_Y.c **** *  None
 191:Generated_Source\PSoC5/PWM_Y.c **** *
 192:Generated_Source\PSoC5/PWM_Y.c **** * Return:
 193:Generated_Source\PSoC5/PWM_Y.c **** *  None
 194:Generated_Source\PSoC5/PWM_Y.c **** *
 195:Generated_Source\PSoC5/PWM_Y.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_Y.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_Y.c **** *
 198:Generated_Source\PSoC5/PWM_Y.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_Y.c **** void PWM_Y_Enable(void) 
 200:Generated_Source\PSoC5/PWM_Y.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/PWM_Y.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_Y.c ****     #if (PWM_Y_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_GLOBAL_ENABLE |= PWM_Y_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_GLOBAL_STBY_ENABLE |= PWM_Y_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* (PWM_Y_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_Y.c **** 
 207:Generated_Source\PSoC5/PWM_Y.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_Y.c ****     #if (PWM_Y_UseControl || PWM_Y_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_CONTROL |= PWM_Y_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7D640040 		.word	1073767549
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	PWM_Y_Enable, .-PWM_Y_Enable
  46              		.section	.text.PWM_Y_Stop,"ax",%progbits
  47              		.align	1
  48              		.global	PWM_Y_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	PWM_Y_Stop, %function
  52              	PWM_Y_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* (PWM_Y_UseControl || PWM_Y_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_Y.c **** }
 212:Generated_Source\PSoC5/PWM_Y.c **** 
 213:Generated_Source\PSoC5/PWM_Y.c **** 
 214:Generated_Source\PSoC5/PWM_Y.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_Y.c **** * Function Name: PWM_Y_Stop
 216:Generated_Source\PSoC5/PWM_Y.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_Y.c **** *
 218:Generated_Source\PSoC5/PWM_Y.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_Y.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_Y.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_Y.c **** *
 222:Generated_Source\PSoC5/PWM_Y.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_Y.c **** *  None
 224:Generated_Source\PSoC5/PWM_Y.c **** *
 225:Generated_Source\PSoC5/PWM_Y.c **** * Return:
 226:Generated_Source\PSoC5/PWM_Y.c **** *  None
 227:Generated_Source\PSoC5/PWM_Y.c **** *
 228:Generated_Source\PSoC5/PWM_Y.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_Y.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_Y.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_Y.c **** *
 232:Generated_Source\PSoC5/PWM_Y.c **** *******************************************************************************/
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 6


 233:Generated_Source\PSoC5/PWM_Y.c **** void PWM_Y_Stop(void) 
 234:Generated_Source\PSoC5/PWM_Y.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/PWM_Y.c ****     #if (PWM_Y_UseControl || PWM_Y_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_CONTROL &= ((uint8)(~PWM_Y_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7D640040 		.word	1073767549
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	PWM_Y_Stop, .-PWM_Y_Stop
  72              		.section	.text.PWM_Y_WriteCounter,"ax",%progbits
  73              		.align	1
  74              		.global	PWM_Y_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	PWM_Y_WriteCounter, %function
  78              	PWM_Y_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* (PWM_Y_UseControl || PWM_Y_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_Y.c **** 
 239:Generated_Source\PSoC5/PWM_Y.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_Y.c ****     #if (PWM_Y_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_GLOBAL_ENABLE &= ((uint8)(~PWM_Y_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_Y_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* (PWM_Y_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_Y.c **** }
 245:Generated_Source\PSoC5/PWM_Y.c **** 
 246:Generated_Source\PSoC5/PWM_Y.c **** #if (PWM_Y_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_Y.c ****     #if (PWM_Y_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_Y.c **** 
 249:Generated_Source\PSoC5/PWM_Y.c **** 
 250:Generated_Source\PSoC5/PWM_Y.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_Y.c ****         * Function Name: PWM_Y_SetCompareMode
 252:Generated_Source\PSoC5/PWM_Y.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_Y.c ****         *
 254:Generated_Source\PSoC5/PWM_Y.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_Y.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_Y.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_Y.c ****         *
 258:Generated_Source\PSoC5/PWM_Y.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_Y.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_Y.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_Y.c ****         *
 262:Generated_Source\PSoC5/PWM_Y.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_Y.c ****         *  None
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 7


 264:Generated_Source\PSoC5/PWM_Y.c ****         *
 265:Generated_Source\PSoC5/PWM_Y.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_Y.c ****         void PWM_Y_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_Y.c ****         {
 268:Generated_Source\PSoC5/PWM_Y.c ****             #if(PWM_Y_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_Y.c **** 
 270:Generated_Source\PSoC5/PWM_Y.c ****                 #if(0 != PWM_Y_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_Y.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Y_CTRL_CMPMODE1_SH
 272:Generated_Source\PSoC5/PWM_Y.c ****                 #else
 273:Generated_Source\PSoC5/PWM_Y.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_Y.c ****                 #endif /* (0 != PWM_Y_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_Y.c **** 
 276:Generated_Source\PSoC5/PWM_Y.c ****                 PWM_Y_CONTROL3 &= ((uint8)(~PWM_Y_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/PWM_Y.c ****                 PWM_Y_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_Y.c **** 
 279:Generated_Source\PSoC5/PWM_Y.c ****             #elif (PWM_Y_UseControl)
 280:Generated_Source\PSoC5/PWM_Y.c **** 
 281:Generated_Source\PSoC5/PWM_Y.c ****                 #if(0 != PWM_Y_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_Y.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_Y_CTRL_CMPMODE1_S
 283:Generated_Source\PSoC5/PWM_Y.c ****                                                 PWM_Y_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_Y.c ****                 #else
 285:Generated_Source\PSoC5/PWM_Y.c ****                     uint8 comparemode1masked = comparemode & PWM_Y_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_Y.c ****                 #endif /* (0 != PWM_Y_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_Y.c **** 
 288:Generated_Source\PSoC5/PWM_Y.c ****                 #if(0 != PWM_Y_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_Y.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_Y_CTRL_CMPMODE2_S
 290:Generated_Source\PSoC5/PWM_Y.c ****                                                PWM_Y_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_Y.c ****                 #else
 292:Generated_Source\PSoC5/PWM_Y.c ****                     uint8 comparemode2masked = comparemode & PWM_Y_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_Y.c ****                 #endif /* (0 != PWM_Y_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_Y.c **** 
 295:Generated_Source\PSoC5/PWM_Y.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_Y.c ****                 PWM_Y_CONTROL &= ((uint8)(~(PWM_Y_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_Y.c ****                                             PWM_Y_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_Y.c ****                 PWM_Y_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_Y.c **** 
 300:Generated_Source\PSoC5/PWM_Y.c ****             #else
 301:Generated_Source\PSoC5/PWM_Y.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_Y.c ****             #endif /* (PWM_Y_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_Y.c ****         }
 304:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* PWM_Y_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_Y.c **** 
 306:Generated_Source\PSoC5/PWM_Y.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_Y.c **** 
 308:Generated_Source\PSoC5/PWM_Y.c ****     #if (PWM_Y_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_Y.c **** 
 310:Generated_Source\PSoC5/PWM_Y.c **** 
 311:Generated_Source\PSoC5/PWM_Y.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_Y.c ****         * Function Name: PWM_Y_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_Y.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_Y.c ****         *
 315:Generated_Source\PSoC5/PWM_Y.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_Y.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_Y.c ****         *
 318:Generated_Source\PSoC5/PWM_Y.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_Y.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_Y.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 8


 321:Generated_Source\PSoC5/PWM_Y.c ****         *
 322:Generated_Source\PSoC5/PWM_Y.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_Y.c ****         *  None
 324:Generated_Source\PSoC5/PWM_Y.c ****         *
 325:Generated_Source\PSoC5/PWM_Y.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_Y.c ****         void PWM_Y_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_Y.c ****         {
 328:Generated_Source\PSoC5/PWM_Y.c ****             #if(0 != PWM_Y_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_Y.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Y_CTRL_CMPMODE1_SHIFT)
 330:Generated_Source\PSoC5/PWM_Y.c ****                                            PWM_Y_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_Y.c ****             #else
 332:Generated_Source\PSoC5/PWM_Y.c ****                 uint8 comparemodemasked = comparemode & PWM_Y_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_Y.c ****             #endif /* (0 != PWM_Y_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_Y.c **** 
 335:Generated_Source\PSoC5/PWM_Y.c ****             #if (PWM_Y_UseControl)
 336:Generated_Source\PSoC5/PWM_Y.c ****                 PWM_Y_CONTROL &= ((uint8)(~PWM_Y_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/PWM_Y.c ****                 PWM_Y_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_Y.c ****             #endif /* (PWM_Y_UseControl) */
 339:Generated_Source\PSoC5/PWM_Y.c ****         }
 340:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* PWM_Y_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_Y.c **** 
 342:Generated_Source\PSoC5/PWM_Y.c **** #if (PWM_Y_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_Y.c **** 
 344:Generated_Source\PSoC5/PWM_Y.c **** 
 345:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_Y.c ****     *
 349:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_Y.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_Y.c ****     *
 352:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_Y.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_Y.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_Y.c ****     *
 356:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 358:Generated_Source\PSoC5/PWM_Y.c ****     *
 359:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_Y.c ****     void PWM_Y_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_Y.c ****     {
 362:Generated_Source\PSoC5/PWM_Y.c **** 
 363:Generated_Source\PSoC5/PWM_Y.c ****         #if(0 != PWM_Y_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_Y.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_Y_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/PWM_Y.c ****                                                  PWM_Y_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_Y.c ****         #else
 367:Generated_Source\PSoC5/PWM_Y.c ****             uint8 comparemodemasked = comparemode & PWM_Y_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (0 != PWM_Y_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_Y.c **** 
 370:Generated_Source\PSoC5/PWM_Y.c ****         #if (PWM_Y_UseControl)
 371:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_CONTROL &= ((uint8)(~PWM_Y_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_UseControl) */
 374:Generated_Source\PSoC5/PWM_Y.c ****     }
 375:Generated_Source\PSoC5/PWM_Y.c ****     #endif /*PWM_Y_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_Y.c **** 
 377:Generated_Source\PSoC5/PWM_Y.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 9


 378:Generated_Source\PSoC5/PWM_Y.c **** 
 379:Generated_Source\PSoC5/PWM_Y.c **** 
 380:Generated_Source\PSoC5/PWM_Y.c **** #if (!PWM_Y_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_Y.c **** 
 382:Generated_Source\PSoC5/PWM_Y.c **** 
 383:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_WriteCounter
 385:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_Y.c ****     *
 387:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_Y.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_Y.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_Y.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_Y.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_Y.c ****     *
 393:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_Y.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_Y.c ****     *
 396:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 398:Generated_Source\PSoC5/PWM_Y.c ****     *
 399:Generated_Source\PSoC5/PWM_Y.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_Y.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_Y.c ****     *
 402:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_Y.c ****     void PWM_Y_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC5/PWM_Y.c ****                                        
 405:Generated_Source\PSoC5/PWM_Y.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/PWM_Y.c ****         CY_SET_REG16(PWM_Y_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1880     		strh	r0, [r3]	@ movhi
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 18680040 		.word	1073768472
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	PWM_Y_WriteCounter, .-PWM_Y_WriteCounter
  97              		.section	.text.PWM_Y_ReadCounter,"ax",%progbits
  98              		.align	1
  99              		.global	PWM_Y_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	PWM_Y_ReadCounter, %function
 103              	PWM_Y_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/PWM_Y.c ****     }
 408:Generated_Source\PSoC5/PWM_Y.c **** 
 409:Generated_Source\PSoC5/PWM_Y.c **** 
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 10


 410:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_ReadCounter
 412:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_Y.c ****     *
 414:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_Y.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_Y.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_Y.c ****     *
 418:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 420:Generated_Source\PSoC5/PWM_Y.c ****     *
 421:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_Y.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_Y.c ****     *
 424:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_Y.c ****     uint16 PWM_Y_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_Y.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/PWM_Y.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_Y.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_Y.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_Y.c ****           (void)CY_GET_REG8(PWM_Y_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/PWM_Y.c **** 
 432:Generated_Source\PSoC5/PWM_Y.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_Y.c ****         return (CY_GET_REG16(PWM_Y_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1888     		ldrh	r0, [r3]
 434:Generated_Source\PSoC5/PWM_Y.c ****     }
 116              		.loc 1 434 0
 117 0008 80B2     		uxth	r0, r0
 118 000a 7047     		bx	lr
 119              	.L12:
 120              		.align	2
 121              	.L11:
 122 000c 1C640040 		.word	1073767452
 123 0010 B8680040 		.word	1073768632
 124              		.cfi_endproc
 125              	.LFE5:
 126              		.size	PWM_Y_ReadCounter, .-PWM_Y_ReadCounter
 127              		.section	.text.PWM_Y_ClearFIFO,"ax",%progbits
 128              		.align	1
 129              		.global	PWM_Y_ClearFIFO
 130              		.thumb
 131              		.thumb_func
 132              		.type	PWM_Y_ClearFIFO, %function
 133              	PWM_Y_ClearFIFO:
 134              	.LFB6:
 435:Generated_Source\PSoC5/PWM_Y.c **** 
 436:Generated_Source\PSoC5/PWM_Y.c ****     #if (PWM_Y_UseStatus)
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 11


 437:Generated_Source\PSoC5/PWM_Y.c **** 
 438:Generated_Source\PSoC5/PWM_Y.c **** 
 439:Generated_Source\PSoC5/PWM_Y.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_Y.c ****         * Function Name: PWM_Y_ClearFIFO
 441:Generated_Source\PSoC5/PWM_Y.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_Y.c ****         *
 443:Generated_Source\PSoC5/PWM_Y.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_Y.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_Y.c ****         *
 446:Generated_Source\PSoC5/PWM_Y.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_Y.c ****         *  None
 448:Generated_Source\PSoC5/PWM_Y.c ****         *
 449:Generated_Source\PSoC5/PWM_Y.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_Y.c ****         *  None
 451:Generated_Source\PSoC5/PWM_Y.c ****         *
 452:Generated_Source\PSoC5/PWM_Y.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_Y.c ****         void PWM_Y_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_Y.c ****         {
 135              		.loc 1 454 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LBB16:
 141              	.LBB17:
 455:Generated_Source\PSoC5/PWM_Y.c ****             while(0u != (PWM_Y_ReadStatusRegister() & PWM_Y_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_Y.c ****             {
 457:Generated_Source\PSoC5/PWM_Y.c ****                 (void)PWM_Y_ReadCapture();
 458:Generated_Source\PSoC5/PWM_Y.c ****             }
 459:Generated_Source\PSoC5/PWM_Y.c ****         }
 460:Generated_Source\PSoC5/PWM_Y.c **** 
 461:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* PWM_Y_UseStatus */
 462:Generated_Source\PSoC5/PWM_Y.c **** 
 463:Generated_Source\PSoC5/PWM_Y.c **** #endif /* !PWM_Y_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_Y.c **** 
 465:Generated_Source\PSoC5/PWM_Y.c **** 
 466:Generated_Source\PSoC5/PWM_Y.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_Y.c **** * Function Name: PWM_Y_WritePeriod
 468:Generated_Source\PSoC5/PWM_Y.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_Y.c **** *
 470:Generated_Source\PSoC5/PWM_Y.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_Y.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_Y.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_Y.c **** *
 474:Generated_Source\PSoC5/PWM_Y.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_Y.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_Y.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_Y.c **** *
 478:Generated_Source\PSoC5/PWM_Y.c **** * Return:
 479:Generated_Source\PSoC5/PWM_Y.c **** *  None
 480:Generated_Source\PSoC5/PWM_Y.c **** *
 481:Generated_Source\PSoC5/PWM_Y.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_Y.c **** void PWM_Y_WritePeriod(uint16 period) 
 483:Generated_Source\PSoC5/PWM_Y.c **** {
 484:Generated_Source\PSoC5/PWM_Y.c ****     #if(PWM_Y_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_Y.c ****         CY_SET_REG16(PWM_Y_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_Y.c ****     #else
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 12


 487:Generated_Source\PSoC5/PWM_Y.c ****         CY_SET_REG16(PWM_Y_PERIOD_LSB_PTR, period);
 488:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* (PWM_Y_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_Y.c **** }
 490:Generated_Source\PSoC5/PWM_Y.c **** 
 491:Generated_Source\PSoC5/PWM_Y.c **** #if (PWM_Y_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_Y.c **** 
 493:Generated_Source\PSoC5/PWM_Y.c **** 
 494:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_WriteCompare
 496:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_Y.c ****     *
 498:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_Y.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_Y.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_Y.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_Y.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_Y.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_Y.c ****     *
 505:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_Y.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_Y.c ****     *
 508:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 510:Generated_Source\PSoC5/PWM_Y.c ****     *
 511:Generated_Source\PSoC5/PWM_Y.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_Y.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_Y.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_Y.c ****     *
 515:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_Y.c ****     void PWM_Y_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC5/PWM_Y.c ****                                        
 518:Generated_Source\PSoC5/PWM_Y.c ****     {
 519:Generated_Source\PSoC5/PWM_Y.c ****         #if(PWM_Y_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_Y.c ****             CY_SET_REG16(PWM_Y_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_Y.c ****         #else
 522:Generated_Source\PSoC5/PWM_Y.c ****             CY_SET_REG16(PWM_Y_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_Y.c **** 
 525:Generated_Source\PSoC5/PWM_Y.c ****         #if (PWM_Y_PWMMode == PWM_Y__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_Y.c ****             #if(PWM_Y_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_Y.c ****                 CY_SET_REG16(PWM_Y_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_Y.c ****             #else
 529:Generated_Source\PSoC5/PWM_Y.c ****                 CY_SET_REG16(PWM_Y_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_Y.c ****             #endif /* (PWM_Y_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_PWMMode == PWM_Y__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_Y.c ****     }
 533:Generated_Source\PSoC5/PWM_Y.c **** 
 534:Generated_Source\PSoC5/PWM_Y.c **** 
 535:Generated_Source\PSoC5/PWM_Y.c **** #else
 536:Generated_Source\PSoC5/PWM_Y.c **** 
 537:Generated_Source\PSoC5/PWM_Y.c **** 
 538:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_WriteCompare1
 540:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_Y.c ****     *
 542:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_Y.c ****     *  This funtion is used to change the compare1 value.  The compare output will
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 13


 544:Generated_Source\PSoC5/PWM_Y.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_Y.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_Y.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_Y.c ****     *
 548:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_Y.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_Y.c ****     *
 551:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 553:Generated_Source\PSoC5/PWM_Y.c ****     *
 554:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_Y.c ****     void PWM_Y_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC5/PWM_Y.c ****                                         
 557:Generated_Source\PSoC5/PWM_Y.c ****     {
 558:Generated_Source\PSoC5/PWM_Y.c ****         #if(PWM_Y_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_Y.c ****             CY_SET_REG16(PWM_Y_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_Y.c ****         #else
 561:Generated_Source\PSoC5/PWM_Y.c ****             CY_SET_REG16(PWM_Y_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_Y.c ****     }
 564:Generated_Source\PSoC5/PWM_Y.c **** 
 565:Generated_Source\PSoC5/PWM_Y.c **** 
 566:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_WriteCompare2
 568:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_Y.c ****     *
 570:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_Y.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_Y.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_Y.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_Y.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_Y.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_Y.c ****     *
 577:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_Y.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_Y.c ****     *
 580:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 582:Generated_Source\PSoC5/PWM_Y.c ****     *
 583:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_Y.c ****     void PWM_Y_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC5/PWM_Y.c ****                                         
 586:Generated_Source\PSoC5/PWM_Y.c ****     {
 587:Generated_Source\PSoC5/PWM_Y.c ****         #if(PWM_Y_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_Y.c ****             CY_SET_REG16(PWM_Y_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_Y.c ****         #else
 590:Generated_Source\PSoC5/PWM_Y.c ****             CY_SET_REG16(PWM_Y_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_Y.c ****     }
 593:Generated_Source\PSoC5/PWM_Y.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_Y.c **** 
 595:Generated_Source\PSoC5/PWM_Y.c **** #if (PWM_Y_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_Y.c **** 
 597:Generated_Source\PSoC5/PWM_Y.c **** 
 598:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 14


 601:Generated_Source\PSoC5/PWM_Y.c ****     *
 602:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_Y.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_Y.c ****     *
 605:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_Y.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_Y.c ****     *
 608:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 610:Generated_Source\PSoC5/PWM_Y.c ****     *
 611:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_Y.c ****     void PWM_Y_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_Y.c ****     {
 614:Generated_Source\PSoC5/PWM_Y.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_Y.c ****         #if(!PWM_Y_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_Y.c ****             CY_SET_REG8(PWM_Y_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_Y.c ****         #else
 618:Generated_Source\PSoC5/PWM_Y.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_Y.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_DEADBAND_COUNT &= ((uint8)(~PWM_Y_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_Y.c **** 
 622:Generated_Source\PSoC5/PWM_Y.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_Y.c ****             #if(PWM_Y_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_Y.c ****                 PWM_Y_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_Y_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC5/PWM_Y.c ****                                                     PWM_Y_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_Y.c ****             #else
 627:Generated_Source\PSoC5/PWM_Y.c ****                 PWM_Y_DEADBAND_COUNT |= deadtime & PWM_Y_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_Y.c ****             #endif /* (PWM_Y_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_Y.c **** 
 630:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (!PWM_Y_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_Y.c ****     }
 632:Generated_Source\PSoC5/PWM_Y.c **** 
 633:Generated_Source\PSoC5/PWM_Y.c **** 
 634:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_Y.c ****     *
 638:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_Y.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_Y.c ****     *
 641:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 643:Generated_Source\PSoC5/PWM_Y.c ****     *
 644:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_Y.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_Y.c ****     *
 647:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_Y.c ****     uint8 PWM_Y_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_Y.c ****     {
 650:Generated_Source\PSoC5/PWM_Y.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_Y.c ****         #if(!PWM_Y_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_Y.c ****             return (CY_GET_REG8(PWM_Y_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_Y.c ****         #else
 654:Generated_Source\PSoC5/PWM_Y.c **** 
 655:Generated_Source\PSoC5/PWM_Y.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_Y.c ****             #if(PWM_Y_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_Y.c ****                 return ((uint8)(((uint8)(PWM_Y_DEADBAND_COUNT & PWM_Y_DEADBAND_COUNT_MASK)) >>
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 15


 658:Generated_Source\PSoC5/PWM_Y.c ****                                                                            PWM_Y_DEADBAND_COUNT_SHI
 659:Generated_Source\PSoC5/PWM_Y.c ****             #else
 660:Generated_Source\PSoC5/PWM_Y.c ****                 return (PWM_Y_DEADBAND_COUNT & PWM_Y_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_Y.c ****             #endif /* (PWM_Y_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (!PWM_Y_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_Y.c ****     }
 664:Generated_Source\PSoC5/PWM_Y.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_Y.c **** 
 666:Generated_Source\PSoC5/PWM_Y.c **** #if (PWM_Y_UseStatus || PWM_Y_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_Y.c **** 
 668:Generated_Source\PSoC5/PWM_Y.c **** 
 669:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_Y.c ****     *
 673:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_Y.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_Y.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_Y.c ****     *
 677:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_Y.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_Y.c ****     *
 680:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 682:Generated_Source\PSoC5/PWM_Y.c ****     *
 683:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_Y.c ****     void PWM_Y_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_Y.c ****     {
 686:Generated_Source\PSoC5/PWM_Y.c ****         CY_SET_REG8(PWM_Y_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC5/PWM_Y.c ****     }
 688:Generated_Source\PSoC5/PWM_Y.c **** 
 689:Generated_Source\PSoC5/PWM_Y.c **** 
 690:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_Y.c ****     *
 694:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_Y.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_Y.c ****     *
 697:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 699:Generated_Source\PSoC5/PWM_Y.c ****     *
 700:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_Y.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_Y.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_Y.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_Y.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_Y.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_Y.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_Y.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_Y.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_Y.c ****     *
 710:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_Y.c ****     uint8 PWM_Y_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_Y.c ****     {
 713:Generated_Source\PSoC5/PWM_Y.c ****         return (CY_GET_REG8(PWM_Y_STATUS_PTR));
 142              		.loc 1 713 0
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 16


 143 0000 034A     		ldr	r2, .L18
 144              	.LBE17:
 145              	.LBE16:
 146              	.LBB19:
 147              	.LBB20:
 714:Generated_Source\PSoC5/PWM_Y.c ****     }
 715:Generated_Source\PSoC5/PWM_Y.c **** 
 716:Generated_Source\PSoC5/PWM_Y.c **** #endif /* (PWM_Y_UseStatus || PWM_Y_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_Y.c **** 
 718:Generated_Source\PSoC5/PWM_Y.c **** 
 719:Generated_Source\PSoC5/PWM_Y.c **** #if (PWM_Y_UseControl)
 720:Generated_Source\PSoC5/PWM_Y.c **** 
 721:Generated_Source\PSoC5/PWM_Y.c **** 
 722:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_Y.c ****     *
 726:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_Y.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_Y.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_Y.c ****     *
 730:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 732:Generated_Source\PSoC5/PWM_Y.c ****     *
 733:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_Y.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_Y.c ****     *
 736:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_Y.c ****     uint8 PWM_Y_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_Y.c ****     {
 739:Generated_Source\PSoC5/PWM_Y.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_Y.c **** 
 741:Generated_Source\PSoC5/PWM_Y.c ****         result = CY_GET_REG8(PWM_Y_CONTROL_PTR);
 742:Generated_Source\PSoC5/PWM_Y.c ****         return (result);
 743:Generated_Source\PSoC5/PWM_Y.c ****     }
 744:Generated_Source\PSoC5/PWM_Y.c **** 
 745:Generated_Source\PSoC5/PWM_Y.c **** 
 746:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_Y.c ****     *
 750:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_Y.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_Y.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_Y.c ****     *
 754:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_Y.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_Y.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_Y.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_Y.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_Y.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_Y.c ****     *
 761:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 763:Generated_Source\PSoC5/PWM_Y.c ****     *
 764:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_Y.c ****     void PWM_Y_WriteControlRegister(uint8 control) 
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 17


 766:Generated_Source\PSoC5/PWM_Y.c ****     {
 767:Generated_Source\PSoC5/PWM_Y.c ****         CY_SET_REG8(PWM_Y_CONTROL_PTR, control);
 768:Generated_Source\PSoC5/PWM_Y.c ****     }
 769:Generated_Source\PSoC5/PWM_Y.c **** 
 770:Generated_Source\PSoC5/PWM_Y.c **** #endif /* (PWM_Y_UseControl) */
 771:Generated_Source\PSoC5/PWM_Y.c **** 
 772:Generated_Source\PSoC5/PWM_Y.c **** 
 773:Generated_Source\PSoC5/PWM_Y.c **** #if (!PWM_Y_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_Y.c **** 
 775:Generated_Source\PSoC5/PWM_Y.c **** 
 776:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_ReadCapture
 778:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_Y.c ****     *
 780:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_Y.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_Y.c ****     *
 783:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 785:Generated_Source\PSoC5/PWM_Y.c ****     *
 786:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_Y.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_Y.c ****     *
 789:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_Y.c ****     uint16 PWM_Y_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_Y.c ****     {
 792:Generated_Source\PSoC5/PWM_Y.c ****         return (CY_GET_REG16(PWM_Y_CAPTURE_LSB_PTR));
 148              		.loc 1 792 0
 149 0002 0449     		ldr	r1, .L18+4
 150              	.L14:
 151              	.LBE20:
 152              	.LBE19:
 153              	.LBB22:
 154              	.LBB18:
 713:Generated_Source\PSoC5/PWM_Y.c ****     }
 155              		.loc 1 713 0
 156 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 157              	.LBE18:
 158              	.LBE22:
 455:Generated_Source\PSoC5/PWM_Y.c ****             while(0u != (PWM_Y_ReadStatusRegister() & PWM_Y_STATUS_FIFONEMPTY))
 159              		.loc 1 455 0
 160 0006 DB06     		lsls	r3, r3, #27
 161 0008 01D5     		bpl	.L17
 162              	.LBB23:
 163              	.LBB21:
 164              		.loc 1 792 0
 165 000a 0B88     		ldrh	r3, [r1]
 166 000c FAE7     		b	.L14
 167              	.L17:
 168              	.LBE21:
 169              	.LBE23:
 459:Generated_Source\PSoC5/PWM_Y.c **** 
 170              		.loc 1 459 0
 171 000e 7047     		bx	lr
 172              	.L19:
 173              		.align	2
 174              	.L18:
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 18


 175 0010 6D640040 		.word	1073767533
 176 0014 B8680040 		.word	1073768632
 177              		.cfi_endproc
 178              	.LFE6:
 179              		.size	PWM_Y_ClearFIFO, .-PWM_Y_ClearFIFO
 180              		.section	.text.PWM_Y_Init,"ax",%progbits
 181              		.align	1
 182              		.global	PWM_Y_Init
 183              		.thumb
 184              		.thumb_func
 185              		.type	PWM_Y_Init, %function
 186              	PWM_Y_Init:
 187              	.LFB1:
  85:Generated_Source\PSoC5/PWM_Y.c ****     #if (PWM_Y_UsingFixedFunction || PWM_Y_UseControl)
 188              		.loc 1 85 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/PWM_Y.c ****                 ((uint8)(~PWM_Y_CTRL_CMPMODE1_MASK));
 196              		.loc 1 117 0
 197 0002 164A     		ldr	r2, .L21
 130:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_Resolution == 8) */
 198              		.loc 1 130 0
 199 0004 164C     		ldr	r4, .L21+4
 117:Generated_Source\PSoC5/PWM_Y.c ****                 ((uint8)(~PWM_Y_CTRL_CMPMODE1_MASK));
 200              		.loc 1 117 0
 201 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 202              	.LVL1:
 119:Generated_Source\PSoC5/PWM_Y.c ****                                    PWM_Y_DEFAULT_COMPARE1_MODE;
 203              		.loc 1 119 0
 204 0008 03F0C003 		and	r3, r3, #192
 205              	.LVL2:
 206 000c 43F00103 		orr	r3, r3, #1
 207 0010 1370     		strb	r3, [r2]
 129:Generated_Source\PSoC5/PWM_Y.c ****             PWM_Y_AUX_CONTROLDP1 |= (PWM_Y_AUX_CTRL_FIFO0_CLR);
 208              		.loc 1 129 0
 209 0012 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 210 0014 43F00103 		orr	r3, r3, #1
 211 0018 D377     		strb	r3, [r2, #31]
 130:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_Resolution == 8) */
 212              		.loc 1 130 0
 213 001a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 214 001c 43F00103 		orr	r3, r3, #1
 215 0020 2370     		strb	r3, [r4]
 216              	.LVL3:
 217              	.LBB24:
 218              	.LBB25:
 406:Generated_Source\PSoC5/PWM_Y.c ****     }
 219              		.loc 1 406 0
 220 0022 44F61F63 		movw	r3, #19999
 221 0026 A2F89B33 		strh	r3, [r2, #923]	@ movhi
 222              	.LVL4:
 223              	.LBE25:
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 19


 224              	.LBE24:
 225              	.LBB26:
 226              	.LBB27:
 487:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* (PWM_Y_UsingFixedFunction) */
 227              		.loc 1 487 0
 228 002a A2F81B34 		strh	r3, [r2, #1051]	@ movhi
 229              	.LVL5:
 230              	.LBE27:
 231              	.LBE26:
 232              	.LBB28:
 233              	.LBB29:
 561:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_UsingFixedFunction) */
 234              		.loc 1 561 0
 235 002e 0D4B     		ldr	r3, .L21+8
 236 0030 4FF4B862 		mov	r2, #1472
 237 0034 1A80     		strh	r2, [r3]	@ movhi
 238              	.LVL6:
 239              	.LBE29:
 240              	.LBE28:
 241              	.LBB30:
 242              	.LBB31:
 590:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_UsingFixedFunction) */
 243              		.loc 1 590 0
 244 0036 4FF42F62 		mov	r2, #2800
 245 003a 1A84     		strh	r2, [r3, #32]	@ movhi
 246              	.LVL7:
 247              	.LBE31:
 248              	.LBE30:
 249              	.LBB32:
 250              	.LBB33:
 686:Generated_Source\PSoC5/PWM_Y.c ****     }
 251              		.loc 1 686 0
 252 003c 0022     		movs	r2, #0
 253 003e A3F2CB33 		subw	r3, r3, #971
 254 0042 1A70     		strb	r2, [r3]
 255              	.LVL8:
 256              	.LBE33:
 257              	.LBE32:
 167:Generated_Source\PSoC5/PWM_Y.c ****             /* Use the interrupt output of the status register for IRQ output */
 258              		.loc 1 167 0
 259 0044 FFF7FEFF 		bl	CyEnterCriticalSection
 260              	.LVL9:
 169:Generated_Source\PSoC5/PWM_Y.c **** 
 261              		.loc 1 169 0
 262 0048 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 263 004a 43F01003 		orr	r3, r3, #16
 264 004e 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC5/PWM_Y.c **** 
 265              		.loc 1 172 0
 266 0050 FFF7FEFF 		bl	CyExitCriticalSection
 267              	.LVL10:
 179:Generated_Source\PSoC5/PWM_Y.c **** 
 268              		.loc 1 179 0
 269 0054 BDE81040 		pop	{r4, lr}
 270              		.cfi_restore 14
 271              		.cfi_restore 4
 272              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 20


 176:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_UseStatus) */
 273              		.loc 1 176 0
 274 0058 FFF7FEBF 		b	PWM_Y_ClearFIFO
 275              	.LVL11:
 276              	.L22:
 277              		.align	2
 278              	.L21:
 279 005c 7D640040 		.word	1073767549
 280 0060 9D640040 		.word	1073767581
 281 0064 58680040 		.word	1073768536
 282              		.cfi_endproc
 283              	.LFE1:
 284              		.size	PWM_Y_Init, .-PWM_Y_Init
 285              		.section	.text.PWM_Y_Start,"ax",%progbits
 286              		.align	1
 287              		.global	PWM_Y_Start
 288              		.thumb
 289              		.thumb_func
 290              		.type	PWM_Y_Start, %function
 291              	PWM_Y_Start:
 292              	.LFB0:
  56:Generated_Source\PSoC5/PWM_Y.c ****     /* If not Initialized then initialize all required hardware and software */
 293              		.loc 1 56 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297 0000 10B5     		push	{r4, lr}
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 4, -8
 300              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/PWM_Y.c ****     {
 301              		.loc 1 58 0
 302 0002 054C     		ldr	r4, .L25
 303 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 304 0006 1BB9     		cbnz	r3, .L24
  60:Generated_Source\PSoC5/PWM_Y.c ****         PWM_Y_initVar = 1u;
 305              		.loc 1 60 0
 306 0008 FFF7FEFF 		bl	PWM_Y_Init
 307              	.LVL12:
  61:Generated_Source\PSoC5/PWM_Y.c ****     }
 308              		.loc 1 61 0
 309 000c 0123     		movs	r3, #1
 310 000e 2370     		strb	r3, [r4]
 311              	.L24:
  65:Generated_Source\PSoC5/PWM_Y.c **** 
 312              		.loc 1 65 0
 313 0010 BDE81040 		pop	{r4, lr}
 314              		.cfi_restore 14
 315              		.cfi_restore 4
 316              		.cfi_def_cfa_offset 0
  63:Generated_Source\PSoC5/PWM_Y.c **** 
 317              		.loc 1 63 0
 318 0014 FFF7FEBF 		b	PWM_Y_Enable
 319              	.LVL13:
 320              	.L26:
 321              		.align	2
 322              	.L25:
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 21


 323 0018 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE0:
 326              		.size	PWM_Y_Start, .-PWM_Y_Start
 327              		.section	.text.PWM_Y_WritePeriod,"ax",%progbits
 328              		.align	1
 329              		.global	PWM_Y_WritePeriod
 330              		.thumb
 331              		.thumb_func
 332              		.type	PWM_Y_WritePeriod, %function
 333              	PWM_Y_WritePeriod:
 334              	.LFB7:
 483:Generated_Source\PSoC5/PWM_Y.c ****     #if(PWM_Y_UsingFixedFunction)
 335              		.loc 1 483 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 340              	.LVL14:
 487:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* (PWM_Y_UsingFixedFunction) */
 341              		.loc 1 487 0
 342 0000 014B     		ldr	r3, .L28
 343 0002 1880     		strh	r0, [r3]	@ movhi
 344 0004 7047     		bx	lr
 345              	.L29:
 346 0006 00BF     		.align	2
 347              	.L28:
 348 0008 98680040 		.word	1073768600
 349              		.cfi_endproc
 350              	.LFE7:
 351              		.size	PWM_Y_WritePeriod, .-PWM_Y_WritePeriod
 352              		.section	.text.PWM_Y_WriteCompare1,"ax",%progbits
 353              		.align	1
 354              		.global	PWM_Y_WriteCompare1
 355              		.thumb
 356              		.thumb_func
 357              		.type	PWM_Y_WriteCompare1, %function
 358              	PWM_Y_WriteCompare1:
 359              	.LFB8:
 557:Generated_Source\PSoC5/PWM_Y.c ****         #if(PWM_Y_UsingFixedFunction)
 360              		.loc 1 557 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              		@ link register save eliminated.
 365              	.LVL15:
 561:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_UsingFixedFunction) */
 366              		.loc 1 561 0
 367 0000 014B     		ldr	r3, .L31
 368 0002 1880     		strh	r0, [r3]	@ movhi
 369 0004 7047     		bx	lr
 370              	.L32:
 371 0006 00BF     		.align	2
 372              	.L31:
 373 0008 58680040 		.word	1073768536
 374              		.cfi_endproc
 375              	.LFE8:
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 22


 376              		.size	PWM_Y_WriteCompare1, .-PWM_Y_WriteCompare1
 377              		.section	.text.PWM_Y_WriteCompare2,"ax",%progbits
 378              		.align	1
 379              		.global	PWM_Y_WriteCompare2
 380              		.thumb
 381              		.thumb_func
 382              		.type	PWM_Y_WriteCompare2, %function
 383              	PWM_Y_WriteCompare2:
 384              	.LFB9:
 586:Generated_Source\PSoC5/PWM_Y.c ****         #if(PWM_Y_UsingFixedFunction)
 385              		.loc 1 586 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 390              	.LVL16:
 590:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_UsingFixedFunction) */
 391              		.loc 1 590 0
 392 0000 014B     		ldr	r3, .L34
 393 0002 1880     		strh	r0, [r3]	@ movhi
 394 0004 7047     		bx	lr
 395              	.L35:
 396 0006 00BF     		.align	2
 397              	.L34:
 398 0008 78680040 		.word	1073768568
 399              		.cfi_endproc
 400              	.LFE9:
 401              		.size	PWM_Y_WriteCompare2, .-PWM_Y_WriteCompare2
 402              		.section	.text.PWM_Y_SetInterruptMode,"ax",%progbits
 403              		.align	1
 404              		.global	PWM_Y_SetInterruptMode
 405              		.thumb
 406              		.thumb_func
 407              		.type	PWM_Y_SetInterruptMode, %function
 408              	PWM_Y_SetInterruptMode:
 409              	.LFB10:
 685:Generated_Source\PSoC5/PWM_Y.c ****         CY_SET_REG8(PWM_Y_STATUS_MASK_PTR, interruptMode);
 410              		.loc 1 685 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415              	.LVL17:
 686:Generated_Source\PSoC5/PWM_Y.c ****     }
 416              		.loc 1 686 0
 417 0000 014B     		ldr	r3, .L37
 418 0002 1870     		strb	r0, [r3]
 419 0004 7047     		bx	lr
 420              	.L38:
 421 0006 00BF     		.align	2
 422              	.L37:
 423 0008 8D640040 		.word	1073767565
 424              		.cfi_endproc
 425              	.LFE10:
 426              		.size	PWM_Y_SetInterruptMode, .-PWM_Y_SetInterruptMode
 427              		.section	.text.PWM_Y_ReadStatusRegister,"ax",%progbits
 428              		.align	1
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 23


 429              		.global	PWM_Y_ReadStatusRegister
 430              		.thumb
 431              		.thumb_func
 432              		.type	PWM_Y_ReadStatusRegister, %function
 433              	PWM_Y_ReadStatusRegister:
 434              	.LFB11:
 712:Generated_Source\PSoC5/PWM_Y.c ****         return (CY_GET_REG8(PWM_Y_STATUS_PTR));
 435              		.loc 1 712 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              		@ link register save eliminated.
 713:Generated_Source\PSoC5/PWM_Y.c ****     }
 440              		.loc 1 713 0
 441 0000 014B     		ldr	r3, .L40
 442 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/PWM_Y.c **** 
 443              		.loc 1 714 0
 444 0004 7047     		bx	lr
 445              	.L41:
 446 0006 00BF     		.align	2
 447              	.L40:
 448 0008 6D640040 		.word	1073767533
 449              		.cfi_endproc
 450              	.LFE11:
 451              		.size	PWM_Y_ReadStatusRegister, .-PWM_Y_ReadStatusRegister
 452              		.section	.text.PWM_Y_ReadControlRegister,"ax",%progbits
 453              		.align	1
 454              		.global	PWM_Y_ReadControlRegister
 455              		.thumb
 456              		.thumb_func
 457              		.type	PWM_Y_ReadControlRegister, %function
 458              	PWM_Y_ReadControlRegister:
 459              	.LFB12:
 738:Generated_Source\PSoC5/PWM_Y.c ****         uint8 result;
 460              		.loc 1 738 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              		@ link register save eliminated.
 741:Generated_Source\PSoC5/PWM_Y.c ****         return (result);
 465              		.loc 1 741 0
 466 0000 014B     		ldr	r3, .L43
 467 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 468              	.LVL18:
 743:Generated_Source\PSoC5/PWM_Y.c **** 
 469              		.loc 1 743 0
 470 0004 7047     		bx	lr
 471              	.L44:
 472 0006 00BF     		.align	2
 473              	.L43:
 474 0008 7D640040 		.word	1073767549
 475              		.cfi_endproc
 476              	.LFE12:
 477              		.size	PWM_Y_ReadControlRegister, .-PWM_Y_ReadControlRegister
 478              		.section	.text.PWM_Y_WriteControlRegister,"ax",%progbits
 479              		.align	1
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 24


 480              		.global	PWM_Y_WriteControlRegister
 481              		.thumb
 482              		.thumb_func
 483              		.type	PWM_Y_WriteControlRegister, %function
 484              	PWM_Y_WriteControlRegister:
 485              	.LFB13:
 766:Generated_Source\PSoC5/PWM_Y.c ****         CY_SET_REG8(PWM_Y_CONTROL_PTR, control);
 486              		.loc 1 766 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 491              	.LVL19:
 767:Generated_Source\PSoC5/PWM_Y.c ****     }
 492              		.loc 1 767 0
 493 0000 014B     		ldr	r3, .L46
 494 0002 1870     		strb	r0, [r3]
 495 0004 7047     		bx	lr
 496              	.L47:
 497 0006 00BF     		.align	2
 498              	.L46:
 499 0008 7D640040 		.word	1073767549
 500              		.cfi_endproc
 501              	.LFE13:
 502              		.size	PWM_Y_WriteControlRegister, .-PWM_Y_WriteControlRegister
 503              		.section	.text.PWM_Y_ReadCapture,"ax",%progbits
 504              		.align	1
 505              		.global	PWM_Y_ReadCapture
 506              		.thumb
 507              		.thumb_func
 508              		.type	PWM_Y_ReadCapture, %function
 509              	PWM_Y_ReadCapture:
 510              	.LFB14:
 791:Generated_Source\PSoC5/PWM_Y.c ****         return (CY_GET_REG16(PWM_Y_CAPTURE_LSB_PTR));
 511              		.loc 1 791 0
 512              		.cfi_startproc
 513              		@ args = 0, pretend = 0, frame = 0
 514              		@ frame_needed = 0, uses_anonymous_args = 0
 515              		@ link register save eliminated.
 516              		.loc 1 792 0
 517 0000 014B     		ldr	r3, .L49
 518 0002 1888     		ldrh	r0, [r3]
 793:Generated_Source\PSoC5/PWM_Y.c ****     }
 519              		.loc 1 793 0
 520 0004 80B2     		uxth	r0, r0
 521 0006 7047     		bx	lr
 522              	.L50:
 523              		.align	2
 524              	.L49:
 525 0008 B8680040 		.word	1073768632
 526              		.cfi_endproc
 527              	.LFE14:
 528              		.size	PWM_Y_ReadCapture, .-PWM_Y_ReadCapture
 529              		.section	.text.PWM_Y_ReadCompare1,"ax",%progbits
 530              		.align	1
 531              		.global	PWM_Y_ReadCompare1
 532              		.thumb
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 25


 533              		.thumb_func
 534              		.type	PWM_Y_ReadCompare1, %function
 535              	PWM_Y_ReadCompare1:
 536              	.LFB15:
 794:Generated_Source\PSoC5/PWM_Y.c **** 
 795:Generated_Source\PSoC5/PWM_Y.c **** #endif /* (!PWM_Y_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_Y.c **** 
 797:Generated_Source\PSoC5/PWM_Y.c **** 
 798:Generated_Source\PSoC5/PWM_Y.c **** #if (PWM_Y_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_Y.c **** 
 800:Generated_Source\PSoC5/PWM_Y.c **** 
 801:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_ReadCompare
 803:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_Y.c ****     *
 805:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_Y.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_Y.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_Y.c ****     *
 809:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 811:Generated_Source\PSoC5/PWM_Y.c ****     *
 812:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_Y.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_Y.c ****     *
 815:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_Y.c ****     uint16 PWM_Y_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_Y.c ****     {
 818:Generated_Source\PSoC5/PWM_Y.c ****         #if(PWM_Y_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_Y.c ****             return ((uint16)CY_GET_REG16(PWM_Y_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_Y.c ****         #else
 821:Generated_Source\PSoC5/PWM_Y.c ****             return (CY_GET_REG16(PWM_Y_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM_Y.c ****         #endif /* (PWM_Y_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_Y.c ****     }
 824:Generated_Source\PSoC5/PWM_Y.c **** 
 825:Generated_Source\PSoC5/PWM_Y.c **** #else
 826:Generated_Source\PSoC5/PWM_Y.c **** 
 827:Generated_Source\PSoC5/PWM_Y.c **** 
 828:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_ReadCompare1
 830:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_Y.c ****     *
 832:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_Y.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_Y.c ****     *
 835:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 837:Generated_Source\PSoC5/PWM_Y.c ****     *
 838:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_Y.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_Y.c ****     *
 841:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_Y.c ****     uint16 PWM_Y_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_Y.c ****     {
 537              		.loc 1 843 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 26


 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 844:Generated_Source\PSoC5/PWM_Y.c ****         return (CY_GET_REG16(PWM_Y_COMPARE1_LSB_PTR));
 542              		.loc 1 844 0
 543 0000 014B     		ldr	r3, .L52
 544 0002 1888     		ldrh	r0, [r3]
 845:Generated_Source\PSoC5/PWM_Y.c ****     }
 545              		.loc 1 845 0
 546 0004 80B2     		uxth	r0, r0
 547 0006 7047     		bx	lr
 548              	.L53:
 549              		.align	2
 550              	.L52:
 551 0008 58680040 		.word	1073768536
 552              		.cfi_endproc
 553              	.LFE15:
 554              		.size	PWM_Y_ReadCompare1, .-PWM_Y_ReadCompare1
 555              		.section	.text.PWM_Y_ReadCompare2,"ax",%progbits
 556              		.align	1
 557              		.global	PWM_Y_ReadCompare2
 558              		.thumb
 559              		.thumb_func
 560              		.type	PWM_Y_ReadCompare2, %function
 561              	PWM_Y_ReadCompare2:
 562              	.LFB16:
 846:Generated_Source\PSoC5/PWM_Y.c **** 
 847:Generated_Source\PSoC5/PWM_Y.c **** 
 848:Generated_Source\PSoC5/PWM_Y.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_Y.c ****     * Function Name: PWM_Y_ReadCompare2
 850:Generated_Source\PSoC5/PWM_Y.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_Y.c ****     *
 852:Generated_Source\PSoC5/PWM_Y.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_Y.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_Y.c ****     *
 855:Generated_Source\PSoC5/PWM_Y.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_Y.c ****     *  None
 857:Generated_Source\PSoC5/PWM_Y.c ****     *
 858:Generated_Source\PSoC5/PWM_Y.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_Y.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_Y.c ****     *
 861:Generated_Source\PSoC5/PWM_Y.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_Y.c ****     uint16 PWM_Y_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_Y.c ****     {
 563              		.loc 1 863 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 864:Generated_Source\PSoC5/PWM_Y.c ****         return (CY_GET_REG16(PWM_Y_COMPARE2_LSB_PTR));
 568              		.loc 1 864 0
 569 0000 014B     		ldr	r3, .L55
 570 0002 1888     		ldrh	r0, [r3]
 865:Generated_Source\PSoC5/PWM_Y.c ****     }
 571              		.loc 1 865 0
 572 0004 80B2     		uxth	r0, r0
 573 0006 7047     		bx	lr
 574              	.L56:
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 27


 575              		.align	2
 576              	.L55:
 577 0008 78680040 		.word	1073768568
 578              		.cfi_endproc
 579              	.LFE16:
 580              		.size	PWM_Y_ReadCompare2, .-PWM_Y_ReadCompare2
 581              		.section	.text.PWM_Y_ReadPeriod,"ax",%progbits
 582              		.align	1
 583              		.global	PWM_Y_ReadPeriod
 584              		.thumb
 585              		.thumb_func
 586              		.type	PWM_Y_ReadPeriod, %function
 587              	PWM_Y_ReadPeriod:
 588              	.LFB17:
 866:Generated_Source\PSoC5/PWM_Y.c **** 
 867:Generated_Source\PSoC5/PWM_Y.c **** #endif /* (PWM_Y_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_Y.c **** 
 869:Generated_Source\PSoC5/PWM_Y.c **** 
 870:Generated_Source\PSoC5/PWM_Y.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_Y.c **** * Function Name: PWM_Y_ReadPeriod
 872:Generated_Source\PSoC5/PWM_Y.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_Y.c **** *
 874:Generated_Source\PSoC5/PWM_Y.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_Y.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_Y.c **** *
 877:Generated_Source\PSoC5/PWM_Y.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_Y.c **** *  None
 879:Generated_Source\PSoC5/PWM_Y.c **** *
 880:Generated_Source\PSoC5/PWM_Y.c **** * Return:
 881:Generated_Source\PSoC5/PWM_Y.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_Y.c **** *
 883:Generated_Source\PSoC5/PWM_Y.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_Y.c **** uint16 PWM_Y_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_Y.c **** {
 589              		.loc 1 885 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 886:Generated_Source\PSoC5/PWM_Y.c ****     #if(PWM_Y_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_Y.c ****         return ((uint16)CY_GET_REG16(PWM_Y_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_Y.c ****     #else
 889:Generated_Source\PSoC5/PWM_Y.c ****         return (CY_GET_REG16(PWM_Y_PERIOD_LSB_PTR));
 594              		.loc 1 889 0
 595 0000 014B     		ldr	r3, .L58
 596 0002 1888     		ldrh	r0, [r3]
 890:Generated_Source\PSoC5/PWM_Y.c ****     #endif /* (PWM_Y_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_Y.c **** }
 597              		.loc 1 891 0
 598 0004 80B2     		uxth	r0, r0
 599 0006 7047     		bx	lr
 600              	.L59:
 601              		.align	2
 602              	.L58:
 603 0008 98680040 		.word	1073768600
 604              		.cfi_endproc
 605              	.LFE17:
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 28


 606              		.size	PWM_Y_ReadPeriod, .-PWM_Y_ReadPeriod
 607              		.global	PWM_Y_initVar
 608              		.bss
 609              		.set	.LANCHOR0,. + 0
 610              		.type	PWM_Y_initVar, %object
 611              		.size	PWM_Y_initVar, 1
 612              	PWM_Y_initVar:
 613 0000 00       		.space	1
 614              		.text
 615              	.Letext0:
 616              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 617              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 618              		.section	.debug_info,"",%progbits
 619              	.Ldebug_info0:
 620 0000 34040000 		.4byte	0x434
 621 0004 0400     		.2byte	0x4
 622 0006 00000000 		.4byte	.Ldebug_abbrev0
 623 000a 04       		.byte	0x4
 624 000b 01       		.uleb128 0x1
 625 000c E8000000 		.4byte	.LASF44
 626 0010 0C       		.byte	0xc
 627 0011 7D030000 		.4byte	.LASF45
 628 0015 74020000 		.4byte	.LASF46
 629 0019 30000000 		.4byte	.Ldebug_ranges0+0x30
 630 001d 00000000 		.4byte	0
 631 0021 00000000 		.4byte	.Ldebug_line0
 632 0025 02       		.uleb128 0x2
 633 0026 01       		.byte	0x1
 634 0027 06       		.byte	0x6
 635 0028 69030000 		.4byte	.LASF0
 636 002c 02       		.uleb128 0x2
 637 002d 01       		.byte	0x1
 638 002e 08       		.byte	0x8
 639 002f D5000000 		.4byte	.LASF1
 640 0033 02       		.uleb128 0x2
 641 0034 02       		.byte	0x2
 642 0035 05       		.byte	0x5
 643 0036 8B010000 		.4byte	.LASF2
 644 003a 02       		.uleb128 0x2
 645 003b 02       		.byte	0x2
 646 003c 07       		.byte	0x7
 647 003d 47000000 		.4byte	.LASF3
 648 0041 02       		.uleb128 0x2
 649 0042 04       		.byte	0x4
 650 0043 05       		.byte	0x5
 651 0044 3D030000 		.4byte	.LASF4
 652 0048 02       		.uleb128 0x2
 653 0049 04       		.byte	0x4
 654 004a 07       		.byte	0x7
 655 004b F1010000 		.4byte	.LASF5
 656 004f 02       		.uleb128 0x2
 657 0050 08       		.byte	0x8
 658 0051 05       		.byte	0x5
 659 0052 E0020000 		.4byte	.LASF6
 660 0056 02       		.uleb128 0x2
 661 0057 08       		.byte	0x8
 662 0058 07       		.byte	0x7
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 29


 663 0059 BE000000 		.4byte	.LASF7
 664 005d 03       		.uleb128 0x3
 665 005e 04       		.byte	0x4
 666 005f 05       		.byte	0x5
 667 0060 696E7400 		.ascii	"int\000"
 668 0064 02       		.uleb128 0x2
 669 0065 04       		.byte	0x4
 670 0066 07       		.byte	0x7
 671 0067 03020000 		.4byte	.LASF8
 672 006b 04       		.uleb128 0x4
 673 006c 76010000 		.4byte	.LASF9
 674 0070 02       		.byte	0x2
 675 0071 E401     		.2byte	0x1e4
 676 0073 2C000000 		.4byte	0x2c
 677 0077 04       		.uleb128 0x4
 678 0078 9C010000 		.4byte	.LASF10
 679 007c 02       		.byte	0x2
 680 007d E501     		.2byte	0x1e5
 681 007f 3A000000 		.4byte	0x3a
 682 0083 02       		.uleb128 0x2
 683 0084 04       		.byte	0x4
 684 0085 04       		.byte	0x4
 685 0086 B0000000 		.4byte	.LASF11
 686 008a 02       		.uleb128 0x2
 687 008b 08       		.byte	0x8
 688 008c 04       		.byte	0x4
 689 008d 84010000 		.4byte	.LASF12
 690 0091 02       		.uleb128 0x2
 691 0092 01       		.byte	0x1
 692 0093 08       		.byte	0x8
 693 0094 46030000 		.4byte	.LASF13
 694 0098 04       		.uleb128 0x4
 695 0099 E3000000 		.4byte	.LASF14
 696 009d 02       		.byte	0x2
 697 009e 8E02     		.2byte	0x28e
 698 00a0 A4000000 		.4byte	0xa4
 699 00a4 05       		.uleb128 0x5
 700 00a5 6B000000 		.4byte	0x6b
 701 00a9 04       		.uleb128 0x4
 702 00aa 00000000 		.4byte	.LASF15
 703 00ae 02       		.byte	0x2
 704 00af 8F02     		.2byte	0x28f
 705 00b1 B5000000 		.4byte	0xb5
 706 00b5 05       		.uleb128 0x5
 707 00b6 77000000 		.4byte	0x77
 708 00ba 02       		.uleb128 0x2
 709 00bb 08       		.byte	0x8
 710 00bc 04       		.byte	0x4
 711 00bd CB020000 		.4byte	.LASF16
 712 00c1 02       		.uleb128 0x2
 713 00c2 04       		.byte	0x4
 714 00c3 07       		.byte	0x7
 715 00c4 D7020000 		.4byte	.LASF17
 716 00c8 06       		.uleb128 0x6
 717 00c9 20000000 		.4byte	.LASF18
 718 00cd 01       		.byte	0x1
 719 00ce 1603     		.2byte	0x316
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 30


 720 00d0 77000000 		.4byte	0x77
 721 00d4 01       		.byte	0x1
 722 00d5 06       		.uleb128 0x6
 723 00d6 A3010000 		.4byte	.LASF19
 724 00da 01       		.byte	0x1
 725 00db C702     		.2byte	0x2c7
 726 00dd 6B000000 		.4byte	0x6b
 727 00e1 01       		.byte	0x1
 728 00e2 07       		.uleb128 0x7
 729 00e3 0C030000 		.4byte	.LASF20
 730 00e7 01       		.byte	0x1
 731 00e8 AC02     		.2byte	0x2ac
 732 00ea 01       		.byte	0x1
 733 00eb FC000000 		.4byte	0xfc
 734 00ef 08       		.uleb128 0x8
 735 00f0 EE020000 		.4byte	.LASF22
 736 00f4 01       		.byte	0x1
 737 00f5 AC02     		.2byte	0x2ac
 738 00f7 6B000000 		.4byte	0x6b
 739 00fb 00       		.byte	0
 740 00fc 07       		.uleb128 0x7
 741 00fd 9C000000 		.4byte	.LASF21
 742 0101 01       		.byte	0x1
 743 0102 4802     		.2byte	0x248
 744 0104 01       		.byte	0x1
 745 0105 16010000 		.4byte	0x116
 746 0109 08       		.uleb128 0x8
 747 010a 75030000 		.4byte	.LASF23
 748 010e 01       		.byte	0x1
 749 010f 4802     		.2byte	0x248
 750 0111 77000000 		.4byte	0x77
 751 0115 00       		.byte	0
 752 0116 07       		.uleb128 0x7
 753 0117 88000000 		.4byte	.LASF24
 754 011b 01       		.byte	0x1
 755 011c 2B02     		.2byte	0x22b
 756 011e 01       		.byte	0x1
 757 011f 30010000 		.4byte	0x130
 758 0123 08       		.uleb128 0x8
 759 0124 75030000 		.4byte	.LASF23
 760 0128 01       		.byte	0x1
 761 0129 2B02     		.2byte	0x22b
 762 012b 77000000 		.4byte	0x77
 763 012f 00       		.byte	0
 764 0130 07       		.uleb128 0x7
 765 0131 76000000 		.4byte	.LASF25
 766 0135 01       		.byte	0x1
 767 0136 E201     		.2byte	0x1e2
 768 0138 01       		.byte	0x1
 769 0139 4A010000 		.4byte	0x14a
 770 013d 08       		.uleb128 0x8
 771 013e 40000000 		.4byte	.LASF26
 772 0142 01       		.byte	0x1
 773 0143 E201     		.2byte	0x1e2
 774 0145 77000000 		.4byte	0x77
 775 0149 00       		.byte	0
 776 014a 07       		.uleb128 0x7
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 31


 777 014b C7010000 		.4byte	.LASF27
 778 014f 01       		.byte	0x1
 779 0150 9301     		.2byte	0x193
 780 0152 01       		.byte	0x1
 781 0153 64010000 		.4byte	0x164
 782 0157 08       		.uleb128 0x8
 783 0158 B6000000 		.4byte	.LASF28
 784 015c 01       		.byte	0x1
 785 015d 9301     		.2byte	0x193
 786 015f 77000000 		.4byte	0x77
 787 0163 00       		.byte	0
 788 0164 09       		.uleb128 0x9
 789 0165 10020000 		.4byte	.LASF29
 790 0169 01       		.byte	0x1
 791 016a C7       		.byte	0xc7
 792 016b 00000000 		.4byte	.LFB2
 793 016f 10000000 		.4byte	.LFE2-.LFB2
 794 0173 01       		.uleb128 0x1
 795 0174 9C       		.byte	0x9c
 796 0175 09       		.uleb128 0x9
 797 0176 BC010000 		.4byte	.LASF30
 798 017a 01       		.byte	0x1
 799 017b E9       		.byte	0xe9
 800 017c 00000000 		.4byte	.LFB3
 801 0180 10000000 		.4byte	.LFE3-.LFB3
 802 0184 01       		.uleb128 0x1
 803 0185 9C       		.byte	0x9c
 804 0186 0A       		.uleb128 0xa
 805 0187 4A010000 		.4byte	0x14a
 806 018b 00000000 		.4byte	.LFB4
 807 018f 0C000000 		.4byte	.LFE4-.LFB4
 808 0193 01       		.uleb128 0x1
 809 0194 9C       		.byte	0x9c
 810 0195 A1010000 		.4byte	0x1a1
 811 0199 0B       		.uleb128 0xb
 812 019a 57010000 		.4byte	0x157
 813 019e 01       		.uleb128 0x1
 814 019f 50       		.byte	0x50
 815 01a0 00       		.byte	0
 816 01a1 0C       		.uleb128 0xc
 817 01a2 4B030000 		.4byte	.LASF38
 818 01a6 01       		.byte	0x1
 819 01a7 A901     		.2byte	0x1a9
 820 01a9 77000000 		.4byte	0x77
 821 01ad 00000000 		.4byte	.LFB5
 822 01b1 14000000 		.4byte	.LFE5-.LFB5
 823 01b5 01       		.uleb128 0x1
 824 01b6 9C       		.byte	0x9c
 825 01b7 0D       		.uleb128 0xd
 826 01b8 FC020000 		.4byte	.LASF31
 827 01bc 01       		.byte	0x1
 828 01bd C501     		.2byte	0x1c5
 829 01bf 00000000 		.4byte	.LFB6
 830 01c3 18000000 		.4byte	.LFE6-.LFB6
 831 01c7 01       		.uleb128 0x1
 832 01c8 9C       		.byte	0x9c
 833 01c9 EE010000 		.4byte	0x1ee
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 32


 834 01cd 0E       		.uleb128 0xe
 835 01ce D5000000 		.4byte	0xd5
 836 01d2 00000000 		.4byte	.LBB16
 837 01d6 00000000 		.4byte	.Ldebug_ranges0+0
 838 01da 01       		.byte	0x1
 839 01db C701     		.2byte	0x1c7
 840 01dd 0E       		.uleb128 0xe
 841 01de C8000000 		.4byte	0xc8
 842 01e2 02000000 		.4byte	.LBB19
 843 01e6 18000000 		.4byte	.Ldebug_ranges0+0x18
 844 01ea 01       		.byte	0x1
 845 01eb C901     		.2byte	0x1c9
 846 01ed 00       		.byte	0
 847 01ee 0F       		.uleb128 0xf
 848 01ef 6B000000 		.4byte	.LASF32
 849 01f3 01       		.byte	0x1
 850 01f4 54       		.byte	0x54
 851 01f5 00000000 		.4byte	.LFB1
 852 01f9 68000000 		.4byte	.LFE1-.LFB1
 853 01fd 01       		.uleb128 0x1
 854 01fe 9C       		.byte	0x9c
 855 01ff CE020000 		.4byte	0x2ce
 856 0203 10       		.uleb128 0x10
 857 0204 23030000 		.4byte	.LASF33
 858 0208 01       		.byte	0x1
 859 0209 57       		.byte	0x57
 860 020a 6B000000 		.4byte	0x6b
 861 020e 00000000 		.4byte	.LLST0
 862 0212 10       		.uleb128 0x10
 863 0213 28030000 		.4byte	.LASF34
 864 0217 01       		.byte	0x1
 865 0218 5D       		.byte	0x5d
 866 0219 6B000000 		.4byte	0x6b
 867 021d 18000000 		.4byte	.LLST1
 868 0221 11       		.uleb128 0x11
 869 0222 4A010000 		.4byte	0x14a
 870 0226 22000000 		.4byte	.LBB24
 871 022a 08000000 		.4byte	.LBE24-.LBB24
 872 022e 01       		.byte	0x1
 873 022f 85       		.byte	0x85
 874 0230 3E020000 		.4byte	0x23e
 875 0234 12       		.uleb128 0x12
 876 0235 57010000 		.4byte	0x157
 877 0239 2B000000 		.4byte	.LLST2
 878 023d 00       		.byte	0
 879 023e 11       		.uleb128 0x11
 880 023f 30010000 		.4byte	0x130
 881 0243 2A000000 		.4byte	.LBB26
 882 0247 04000000 		.4byte	.LBE26-.LBB26
 883 024b 01       		.byte	0x1
 884 024c 88       		.byte	0x88
 885 024d 5B020000 		.4byte	0x25b
 886 0251 12       		.uleb128 0x12
 887 0252 3D010000 		.4byte	0x13d
 888 0256 41000000 		.4byte	.LLST3
 889 025a 00       		.byte	0
 890 025b 11       		.uleb128 0x11
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 33


 891 025c 16010000 		.4byte	0x116
 892 0260 2E000000 		.4byte	.LBB28
 893 0264 08000000 		.4byte	.LBE28-.LBB28
 894 0268 01       		.byte	0x1
 895 0269 8D       		.byte	0x8d
 896 026a 78020000 		.4byte	0x278
 897 026e 12       		.uleb128 0x12
 898 026f 23010000 		.4byte	0x123
 899 0273 57000000 		.4byte	.LLST4
 900 0277 00       		.byte	0
 901 0278 11       		.uleb128 0x11
 902 0279 FC000000 		.4byte	0xfc
 903 027d 36000000 		.4byte	.LBB30
 904 0281 06000000 		.4byte	.LBE30-.LBB30
 905 0285 01       		.byte	0x1
 906 0286 8E       		.byte	0x8e
 907 0287 95020000 		.4byte	0x295
 908 028b 12       		.uleb128 0x12
 909 028c 09010000 		.4byte	0x109
 910 0290 6D000000 		.4byte	.LLST5
 911 0294 00       		.byte	0
 912 0295 11       		.uleb128 0x11
 913 0296 E2000000 		.4byte	0xe2
 914 029a 3C000000 		.4byte	.LBB32
 915 029e 08000000 		.4byte	.LBE32-.LBB32
 916 02a2 01       		.byte	0x1
 917 02a3 9A       		.byte	0x9a
 918 02a4 B2020000 		.4byte	0x2b2
 919 02a8 12       		.uleb128 0x12
 920 02a9 EF000000 		.4byte	0xef
 921 02ad 83000000 		.4byte	.LLST6
 922 02b1 00       		.byte	0
 923 02b2 13       		.uleb128 0x13
 924 02b3 48000000 		.4byte	.LVL9
 925 02b7 21040000 		.4byte	0x421
 926 02bb 13       		.uleb128 0x13
 927 02bc 54000000 		.4byte	.LVL10
 928 02c0 2C040000 		.4byte	0x42c
 929 02c4 14       		.uleb128 0x14
 930 02c5 5C000000 		.4byte	.LVL11
 931 02c9 B7010000 		.4byte	0x1b7
 932 02cd 00       		.byte	0
 933 02ce 0F       		.uleb128 0xf
 934 02cf 5D030000 		.4byte	.LASF35
 935 02d3 01       		.byte	0x1
 936 02d4 37       		.byte	0x37
 937 02d5 00000000 		.4byte	.LFB0
 938 02d9 1C000000 		.4byte	.LFE0-.LFB0
 939 02dd 01       		.uleb128 0x1
 940 02de 9C       		.byte	0x9c
 941 02df F6020000 		.4byte	0x2f6
 942 02e3 13       		.uleb128 0x13
 943 02e4 0C000000 		.4byte	.LVL12
 944 02e8 EE010000 		.4byte	0x1ee
 945 02ec 14       		.uleb128 0x14
 946 02ed 18000000 		.4byte	.LVL13
 947 02f1 64010000 		.4byte	0x164
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 34


 948 02f5 00       		.byte	0
 949 02f6 0A       		.uleb128 0xa
 950 02f7 30010000 		.4byte	0x130
 951 02fb 00000000 		.4byte	.LFB7
 952 02ff 0C000000 		.4byte	.LFE7-.LFB7
 953 0303 01       		.uleb128 0x1
 954 0304 9C       		.byte	0x9c
 955 0305 11030000 		.4byte	0x311
 956 0309 0B       		.uleb128 0xb
 957 030a 3D010000 		.4byte	0x13d
 958 030e 01       		.uleb128 0x1
 959 030f 50       		.byte	0x50
 960 0310 00       		.byte	0
 961 0311 0A       		.uleb128 0xa
 962 0312 16010000 		.4byte	0x116
 963 0316 00000000 		.4byte	.LFB8
 964 031a 0C000000 		.4byte	.LFE8-.LFB8
 965 031e 01       		.uleb128 0x1
 966 031f 9C       		.byte	0x9c
 967 0320 2C030000 		.4byte	0x32c
 968 0324 0B       		.uleb128 0xb
 969 0325 23010000 		.4byte	0x123
 970 0329 01       		.uleb128 0x1
 971 032a 50       		.byte	0x50
 972 032b 00       		.byte	0
 973 032c 0A       		.uleb128 0xa
 974 032d FC000000 		.4byte	0xfc
 975 0331 00000000 		.4byte	.LFB9
 976 0335 0C000000 		.4byte	.LFE9-.LFB9
 977 0339 01       		.uleb128 0x1
 978 033a 9C       		.byte	0x9c
 979 033b 47030000 		.4byte	0x347
 980 033f 0B       		.uleb128 0xb
 981 0340 09010000 		.4byte	0x109
 982 0344 01       		.uleb128 0x1
 983 0345 50       		.byte	0x50
 984 0346 00       		.byte	0
 985 0347 0A       		.uleb128 0xa
 986 0348 E2000000 		.4byte	0xe2
 987 034c 00000000 		.4byte	.LFB10
 988 0350 0C000000 		.4byte	.LFE10-.LFB10
 989 0354 01       		.uleb128 0x1
 990 0355 9C       		.byte	0x9c
 991 0356 62030000 		.4byte	0x362
 992 035a 0B       		.uleb128 0xb
 993 035b EF000000 		.4byte	0xef
 994 035f 01       		.uleb128 0x1
 995 0360 50       		.byte	0x50
 996 0361 00       		.byte	0
 997 0362 15       		.uleb128 0x15
 998 0363 D5000000 		.4byte	0xd5
 999 0367 00000000 		.4byte	.LFB11
 1000 036b 0C000000 		.4byte	.LFE11-.LFB11
 1001 036f 01       		.uleb128 0x1
 1002 0370 9C       		.byte	0x9c
 1003 0371 16       		.uleb128 0x16
 1004 0372 06000000 		.4byte	.LASF47
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 35


 1005 0376 01       		.byte	0x1
 1006 0377 E102     		.2byte	0x2e1
 1007 0379 6B000000 		.4byte	0x6b
 1008 037d 00000000 		.4byte	.LFB12
 1009 0381 0C000000 		.4byte	.LFE12-.LFB12
 1010 0385 01       		.uleb128 0x1
 1011 0386 9C       		.byte	0x9c
 1012 0387 9A030000 		.4byte	0x39a
 1013 038b 17       		.uleb128 0x17
 1014 038c 95010000 		.4byte	.LASF36
 1015 0390 01       		.byte	0x1
 1016 0391 E302     		.2byte	0x2e3
 1017 0393 6B000000 		.4byte	0x6b
 1018 0397 01       		.uleb128 0x1
 1019 0398 50       		.byte	0x50
 1020 0399 00       		.byte	0
 1021 039a 0D       		.uleb128 0xd
 1022 039b 59020000 		.4byte	.LASF37
 1023 039f 01       		.byte	0x1
 1024 03a0 FD02     		.2byte	0x2fd
 1025 03a2 00000000 		.4byte	.LFB13
 1026 03a6 0C000000 		.4byte	.LFE13-.LFB13
 1027 03aa 01       		.uleb128 0x1
 1028 03ab 9C       		.byte	0x9c
 1029 03ac BF030000 		.4byte	0x3bf
 1030 03b0 18       		.uleb128 0x18
 1031 03b1 7C010000 		.4byte	.LASF48
 1032 03b5 01       		.byte	0x1
 1033 03b6 FD02     		.2byte	0x2fd
 1034 03b8 6B000000 		.4byte	0x6b
 1035 03bc 01       		.uleb128 0x1
 1036 03bd 50       		.byte	0x50
 1037 03be 00       		.byte	0
 1038 03bf 15       		.uleb128 0x15
 1039 03c0 C8000000 		.4byte	0xc8
 1040 03c4 00000000 		.4byte	.LFB14
 1041 03c8 0C000000 		.4byte	.LFE14-.LFB14
 1042 03cc 01       		.uleb128 0x1
 1043 03cd 9C       		.byte	0x9c
 1044 03ce 0C       		.uleb128 0xc
 1045 03cf 33020000 		.4byte	.LASF39
 1046 03d3 01       		.byte	0x1
 1047 03d4 4A03     		.2byte	0x34a
 1048 03d6 77000000 		.4byte	0x77
 1049 03da 00000000 		.4byte	.LFB15
 1050 03de 0C000000 		.4byte	.LFE15-.LFB15
 1051 03e2 01       		.uleb128 0x1
 1052 03e3 9C       		.byte	0x9c
 1053 03e4 0C       		.uleb128 0xc
 1054 03e5 46020000 		.4byte	.LASF40
 1055 03e9 01       		.byte	0x1
 1056 03ea 5E03     		.2byte	0x35e
 1057 03ec 77000000 		.4byte	0x77
 1058 03f0 00000000 		.4byte	.LFB16
 1059 03f4 0C000000 		.4byte	.LFE16-.LFB16
 1060 03f8 01       		.uleb128 0x1
 1061 03f9 9C       		.byte	0x9c
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 36


 1062 03fa 0C       		.uleb128 0xc
 1063 03fb 5A000000 		.4byte	.LASF41
 1064 03ff 01       		.byte	0x1
 1065 0400 7403     		.2byte	0x374
 1066 0402 77000000 		.4byte	0x77
 1067 0406 00000000 		.4byte	.LFB17
 1068 040a 0C000000 		.4byte	.LFE17-.LFB17
 1069 040e 01       		.uleb128 0x1
 1070 040f 9C       		.byte	0x9c
 1071 0410 19       		.uleb128 0x19
 1072 0411 32000000 		.4byte	.LASF49
 1073 0415 01       		.byte	0x1
 1074 0416 20       		.byte	0x20
 1075 0417 6B000000 		.4byte	0x6b
 1076 041b 05       		.uleb128 0x5
 1077 041c 03       		.byte	0x3
 1078 041d 00000000 		.4byte	PWM_Y_initVar
 1079 0421 1A       		.uleb128 0x1a
 1080 0422 DA010000 		.4byte	.LASF42
 1081 0426 DA010000 		.4byte	.LASF42
 1082 042a 03       		.byte	0x3
 1083 042b 7D       		.byte	0x7d
 1084 042c 1A       		.uleb128 0x1a
 1085 042d 1D020000 		.4byte	.LASF43
 1086 0431 1D020000 		.4byte	.LASF43
 1087 0435 03       		.byte	0x3
 1088 0436 7E       		.byte	0x7e
 1089 0437 00       		.byte	0
 1090              		.section	.debug_abbrev,"",%progbits
 1091              	.Ldebug_abbrev0:
 1092 0000 01       		.uleb128 0x1
 1093 0001 11       		.uleb128 0x11
 1094 0002 01       		.byte	0x1
 1095 0003 25       		.uleb128 0x25
 1096 0004 0E       		.uleb128 0xe
 1097 0005 13       		.uleb128 0x13
 1098 0006 0B       		.uleb128 0xb
 1099 0007 03       		.uleb128 0x3
 1100 0008 0E       		.uleb128 0xe
 1101 0009 1B       		.uleb128 0x1b
 1102 000a 0E       		.uleb128 0xe
 1103 000b 55       		.uleb128 0x55
 1104 000c 17       		.uleb128 0x17
 1105 000d 11       		.uleb128 0x11
 1106 000e 01       		.uleb128 0x1
 1107 000f 10       		.uleb128 0x10
 1108 0010 17       		.uleb128 0x17
 1109 0011 00       		.byte	0
 1110 0012 00       		.byte	0
 1111 0013 02       		.uleb128 0x2
 1112 0014 24       		.uleb128 0x24
 1113 0015 00       		.byte	0
 1114 0016 0B       		.uleb128 0xb
 1115 0017 0B       		.uleb128 0xb
 1116 0018 3E       		.uleb128 0x3e
 1117 0019 0B       		.uleb128 0xb
 1118 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 37


 1119 001b 0E       		.uleb128 0xe
 1120 001c 00       		.byte	0
 1121 001d 00       		.byte	0
 1122 001e 03       		.uleb128 0x3
 1123 001f 24       		.uleb128 0x24
 1124 0020 00       		.byte	0
 1125 0021 0B       		.uleb128 0xb
 1126 0022 0B       		.uleb128 0xb
 1127 0023 3E       		.uleb128 0x3e
 1128 0024 0B       		.uleb128 0xb
 1129 0025 03       		.uleb128 0x3
 1130 0026 08       		.uleb128 0x8
 1131 0027 00       		.byte	0
 1132 0028 00       		.byte	0
 1133 0029 04       		.uleb128 0x4
 1134 002a 16       		.uleb128 0x16
 1135 002b 00       		.byte	0
 1136 002c 03       		.uleb128 0x3
 1137 002d 0E       		.uleb128 0xe
 1138 002e 3A       		.uleb128 0x3a
 1139 002f 0B       		.uleb128 0xb
 1140 0030 3B       		.uleb128 0x3b
 1141 0031 05       		.uleb128 0x5
 1142 0032 49       		.uleb128 0x49
 1143 0033 13       		.uleb128 0x13
 1144 0034 00       		.byte	0
 1145 0035 00       		.byte	0
 1146 0036 05       		.uleb128 0x5
 1147 0037 35       		.uleb128 0x35
 1148 0038 00       		.byte	0
 1149 0039 49       		.uleb128 0x49
 1150 003a 13       		.uleb128 0x13
 1151 003b 00       		.byte	0
 1152 003c 00       		.byte	0
 1153 003d 06       		.uleb128 0x6
 1154 003e 2E       		.uleb128 0x2e
 1155 003f 00       		.byte	0
 1156 0040 3F       		.uleb128 0x3f
 1157 0041 19       		.uleb128 0x19
 1158 0042 03       		.uleb128 0x3
 1159 0043 0E       		.uleb128 0xe
 1160 0044 3A       		.uleb128 0x3a
 1161 0045 0B       		.uleb128 0xb
 1162 0046 3B       		.uleb128 0x3b
 1163 0047 05       		.uleb128 0x5
 1164 0048 27       		.uleb128 0x27
 1165 0049 19       		.uleb128 0x19
 1166 004a 49       		.uleb128 0x49
 1167 004b 13       		.uleb128 0x13
 1168 004c 20       		.uleb128 0x20
 1169 004d 0B       		.uleb128 0xb
 1170 004e 00       		.byte	0
 1171 004f 00       		.byte	0
 1172 0050 07       		.uleb128 0x7
 1173 0051 2E       		.uleb128 0x2e
 1174 0052 01       		.byte	0x1
 1175 0053 3F       		.uleb128 0x3f
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 38


 1176 0054 19       		.uleb128 0x19
 1177 0055 03       		.uleb128 0x3
 1178 0056 0E       		.uleb128 0xe
 1179 0057 3A       		.uleb128 0x3a
 1180 0058 0B       		.uleb128 0xb
 1181 0059 3B       		.uleb128 0x3b
 1182 005a 05       		.uleb128 0x5
 1183 005b 27       		.uleb128 0x27
 1184 005c 19       		.uleb128 0x19
 1185 005d 20       		.uleb128 0x20
 1186 005e 0B       		.uleb128 0xb
 1187 005f 01       		.uleb128 0x1
 1188 0060 13       		.uleb128 0x13
 1189 0061 00       		.byte	0
 1190 0062 00       		.byte	0
 1191 0063 08       		.uleb128 0x8
 1192 0064 05       		.uleb128 0x5
 1193 0065 00       		.byte	0
 1194 0066 03       		.uleb128 0x3
 1195 0067 0E       		.uleb128 0xe
 1196 0068 3A       		.uleb128 0x3a
 1197 0069 0B       		.uleb128 0xb
 1198 006a 3B       		.uleb128 0x3b
 1199 006b 05       		.uleb128 0x5
 1200 006c 49       		.uleb128 0x49
 1201 006d 13       		.uleb128 0x13
 1202 006e 00       		.byte	0
 1203 006f 00       		.byte	0
 1204 0070 09       		.uleb128 0x9
 1205 0071 2E       		.uleb128 0x2e
 1206 0072 00       		.byte	0
 1207 0073 3F       		.uleb128 0x3f
 1208 0074 19       		.uleb128 0x19
 1209 0075 03       		.uleb128 0x3
 1210 0076 0E       		.uleb128 0xe
 1211 0077 3A       		.uleb128 0x3a
 1212 0078 0B       		.uleb128 0xb
 1213 0079 3B       		.uleb128 0x3b
 1214 007a 0B       		.uleb128 0xb
 1215 007b 27       		.uleb128 0x27
 1216 007c 19       		.uleb128 0x19
 1217 007d 11       		.uleb128 0x11
 1218 007e 01       		.uleb128 0x1
 1219 007f 12       		.uleb128 0x12
 1220 0080 06       		.uleb128 0x6
 1221 0081 40       		.uleb128 0x40
 1222 0082 18       		.uleb128 0x18
 1223 0083 9742     		.uleb128 0x2117
 1224 0085 19       		.uleb128 0x19
 1225 0086 00       		.byte	0
 1226 0087 00       		.byte	0
 1227 0088 0A       		.uleb128 0xa
 1228 0089 2E       		.uleb128 0x2e
 1229 008a 01       		.byte	0x1
 1230 008b 31       		.uleb128 0x31
 1231 008c 13       		.uleb128 0x13
 1232 008d 11       		.uleb128 0x11
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 39


 1233 008e 01       		.uleb128 0x1
 1234 008f 12       		.uleb128 0x12
 1235 0090 06       		.uleb128 0x6
 1236 0091 40       		.uleb128 0x40
 1237 0092 18       		.uleb128 0x18
 1238 0093 9742     		.uleb128 0x2117
 1239 0095 19       		.uleb128 0x19
 1240 0096 01       		.uleb128 0x1
 1241 0097 13       		.uleb128 0x13
 1242 0098 00       		.byte	0
 1243 0099 00       		.byte	0
 1244 009a 0B       		.uleb128 0xb
 1245 009b 05       		.uleb128 0x5
 1246 009c 00       		.byte	0
 1247 009d 31       		.uleb128 0x31
 1248 009e 13       		.uleb128 0x13
 1249 009f 02       		.uleb128 0x2
 1250 00a0 18       		.uleb128 0x18
 1251 00a1 00       		.byte	0
 1252 00a2 00       		.byte	0
 1253 00a3 0C       		.uleb128 0xc
 1254 00a4 2E       		.uleb128 0x2e
 1255 00a5 00       		.byte	0
 1256 00a6 3F       		.uleb128 0x3f
 1257 00a7 19       		.uleb128 0x19
 1258 00a8 03       		.uleb128 0x3
 1259 00a9 0E       		.uleb128 0xe
 1260 00aa 3A       		.uleb128 0x3a
 1261 00ab 0B       		.uleb128 0xb
 1262 00ac 3B       		.uleb128 0x3b
 1263 00ad 05       		.uleb128 0x5
 1264 00ae 27       		.uleb128 0x27
 1265 00af 19       		.uleb128 0x19
 1266 00b0 49       		.uleb128 0x49
 1267 00b1 13       		.uleb128 0x13
 1268 00b2 11       		.uleb128 0x11
 1269 00b3 01       		.uleb128 0x1
 1270 00b4 12       		.uleb128 0x12
 1271 00b5 06       		.uleb128 0x6
 1272 00b6 40       		.uleb128 0x40
 1273 00b7 18       		.uleb128 0x18
 1274 00b8 9742     		.uleb128 0x2117
 1275 00ba 19       		.uleb128 0x19
 1276 00bb 00       		.byte	0
 1277 00bc 00       		.byte	0
 1278 00bd 0D       		.uleb128 0xd
 1279 00be 2E       		.uleb128 0x2e
 1280 00bf 01       		.byte	0x1
 1281 00c0 3F       		.uleb128 0x3f
 1282 00c1 19       		.uleb128 0x19
 1283 00c2 03       		.uleb128 0x3
 1284 00c3 0E       		.uleb128 0xe
 1285 00c4 3A       		.uleb128 0x3a
 1286 00c5 0B       		.uleb128 0xb
 1287 00c6 3B       		.uleb128 0x3b
 1288 00c7 05       		.uleb128 0x5
 1289 00c8 27       		.uleb128 0x27
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 40


 1290 00c9 19       		.uleb128 0x19
 1291 00ca 11       		.uleb128 0x11
 1292 00cb 01       		.uleb128 0x1
 1293 00cc 12       		.uleb128 0x12
 1294 00cd 06       		.uleb128 0x6
 1295 00ce 40       		.uleb128 0x40
 1296 00cf 18       		.uleb128 0x18
 1297 00d0 9742     		.uleb128 0x2117
 1298 00d2 19       		.uleb128 0x19
 1299 00d3 01       		.uleb128 0x1
 1300 00d4 13       		.uleb128 0x13
 1301 00d5 00       		.byte	0
 1302 00d6 00       		.byte	0
 1303 00d7 0E       		.uleb128 0xe
 1304 00d8 1D       		.uleb128 0x1d
 1305 00d9 00       		.byte	0
 1306 00da 31       		.uleb128 0x31
 1307 00db 13       		.uleb128 0x13
 1308 00dc 52       		.uleb128 0x52
 1309 00dd 01       		.uleb128 0x1
 1310 00de 55       		.uleb128 0x55
 1311 00df 17       		.uleb128 0x17
 1312 00e0 58       		.uleb128 0x58
 1313 00e1 0B       		.uleb128 0xb
 1314 00e2 59       		.uleb128 0x59
 1315 00e3 05       		.uleb128 0x5
 1316 00e4 00       		.byte	0
 1317 00e5 00       		.byte	0
 1318 00e6 0F       		.uleb128 0xf
 1319 00e7 2E       		.uleb128 0x2e
 1320 00e8 01       		.byte	0x1
 1321 00e9 3F       		.uleb128 0x3f
 1322 00ea 19       		.uleb128 0x19
 1323 00eb 03       		.uleb128 0x3
 1324 00ec 0E       		.uleb128 0xe
 1325 00ed 3A       		.uleb128 0x3a
 1326 00ee 0B       		.uleb128 0xb
 1327 00ef 3B       		.uleb128 0x3b
 1328 00f0 0B       		.uleb128 0xb
 1329 00f1 27       		.uleb128 0x27
 1330 00f2 19       		.uleb128 0x19
 1331 00f3 11       		.uleb128 0x11
 1332 00f4 01       		.uleb128 0x1
 1333 00f5 12       		.uleb128 0x12
 1334 00f6 06       		.uleb128 0x6
 1335 00f7 40       		.uleb128 0x40
 1336 00f8 18       		.uleb128 0x18
 1337 00f9 9742     		.uleb128 0x2117
 1338 00fb 19       		.uleb128 0x19
 1339 00fc 01       		.uleb128 0x1
 1340 00fd 13       		.uleb128 0x13
 1341 00fe 00       		.byte	0
 1342 00ff 00       		.byte	0
 1343 0100 10       		.uleb128 0x10
 1344 0101 34       		.uleb128 0x34
 1345 0102 00       		.byte	0
 1346 0103 03       		.uleb128 0x3
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 41


 1347 0104 0E       		.uleb128 0xe
 1348 0105 3A       		.uleb128 0x3a
 1349 0106 0B       		.uleb128 0xb
 1350 0107 3B       		.uleb128 0x3b
 1351 0108 0B       		.uleb128 0xb
 1352 0109 49       		.uleb128 0x49
 1353 010a 13       		.uleb128 0x13
 1354 010b 02       		.uleb128 0x2
 1355 010c 17       		.uleb128 0x17
 1356 010d 00       		.byte	0
 1357 010e 00       		.byte	0
 1358 010f 11       		.uleb128 0x11
 1359 0110 1D       		.uleb128 0x1d
 1360 0111 01       		.byte	0x1
 1361 0112 31       		.uleb128 0x31
 1362 0113 13       		.uleb128 0x13
 1363 0114 11       		.uleb128 0x11
 1364 0115 01       		.uleb128 0x1
 1365 0116 12       		.uleb128 0x12
 1366 0117 06       		.uleb128 0x6
 1367 0118 58       		.uleb128 0x58
 1368 0119 0B       		.uleb128 0xb
 1369 011a 59       		.uleb128 0x59
 1370 011b 0B       		.uleb128 0xb
 1371 011c 01       		.uleb128 0x1
 1372 011d 13       		.uleb128 0x13
 1373 011e 00       		.byte	0
 1374 011f 00       		.byte	0
 1375 0120 12       		.uleb128 0x12
 1376 0121 05       		.uleb128 0x5
 1377 0122 00       		.byte	0
 1378 0123 31       		.uleb128 0x31
 1379 0124 13       		.uleb128 0x13
 1380 0125 02       		.uleb128 0x2
 1381 0126 17       		.uleb128 0x17
 1382 0127 00       		.byte	0
 1383 0128 00       		.byte	0
 1384 0129 13       		.uleb128 0x13
 1385 012a 898201   		.uleb128 0x4109
 1386 012d 00       		.byte	0
 1387 012e 11       		.uleb128 0x11
 1388 012f 01       		.uleb128 0x1
 1389 0130 31       		.uleb128 0x31
 1390 0131 13       		.uleb128 0x13
 1391 0132 00       		.byte	0
 1392 0133 00       		.byte	0
 1393 0134 14       		.uleb128 0x14
 1394 0135 898201   		.uleb128 0x4109
 1395 0138 00       		.byte	0
 1396 0139 11       		.uleb128 0x11
 1397 013a 01       		.uleb128 0x1
 1398 013b 9542     		.uleb128 0x2115
 1399 013d 19       		.uleb128 0x19
 1400 013e 31       		.uleb128 0x31
 1401 013f 13       		.uleb128 0x13
 1402 0140 00       		.byte	0
 1403 0141 00       		.byte	0
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 42


 1404 0142 15       		.uleb128 0x15
 1405 0143 2E       		.uleb128 0x2e
 1406 0144 00       		.byte	0
 1407 0145 31       		.uleb128 0x31
 1408 0146 13       		.uleb128 0x13
 1409 0147 11       		.uleb128 0x11
 1410 0148 01       		.uleb128 0x1
 1411 0149 12       		.uleb128 0x12
 1412 014a 06       		.uleb128 0x6
 1413 014b 40       		.uleb128 0x40
 1414 014c 18       		.uleb128 0x18
 1415 014d 9742     		.uleb128 0x2117
 1416 014f 19       		.uleb128 0x19
 1417 0150 00       		.byte	0
 1418 0151 00       		.byte	0
 1419 0152 16       		.uleb128 0x16
 1420 0153 2E       		.uleb128 0x2e
 1421 0154 01       		.byte	0x1
 1422 0155 3F       		.uleb128 0x3f
 1423 0156 19       		.uleb128 0x19
 1424 0157 03       		.uleb128 0x3
 1425 0158 0E       		.uleb128 0xe
 1426 0159 3A       		.uleb128 0x3a
 1427 015a 0B       		.uleb128 0xb
 1428 015b 3B       		.uleb128 0x3b
 1429 015c 05       		.uleb128 0x5
 1430 015d 27       		.uleb128 0x27
 1431 015e 19       		.uleb128 0x19
 1432 015f 49       		.uleb128 0x49
 1433 0160 13       		.uleb128 0x13
 1434 0161 11       		.uleb128 0x11
 1435 0162 01       		.uleb128 0x1
 1436 0163 12       		.uleb128 0x12
 1437 0164 06       		.uleb128 0x6
 1438 0165 40       		.uleb128 0x40
 1439 0166 18       		.uleb128 0x18
 1440 0167 9742     		.uleb128 0x2117
 1441 0169 19       		.uleb128 0x19
 1442 016a 01       		.uleb128 0x1
 1443 016b 13       		.uleb128 0x13
 1444 016c 00       		.byte	0
 1445 016d 00       		.byte	0
 1446 016e 17       		.uleb128 0x17
 1447 016f 34       		.uleb128 0x34
 1448 0170 00       		.byte	0
 1449 0171 03       		.uleb128 0x3
 1450 0172 0E       		.uleb128 0xe
 1451 0173 3A       		.uleb128 0x3a
 1452 0174 0B       		.uleb128 0xb
 1453 0175 3B       		.uleb128 0x3b
 1454 0176 05       		.uleb128 0x5
 1455 0177 49       		.uleb128 0x49
 1456 0178 13       		.uleb128 0x13
 1457 0179 02       		.uleb128 0x2
 1458 017a 18       		.uleb128 0x18
 1459 017b 00       		.byte	0
 1460 017c 00       		.byte	0
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 43


 1461 017d 18       		.uleb128 0x18
 1462 017e 05       		.uleb128 0x5
 1463 017f 00       		.byte	0
 1464 0180 03       		.uleb128 0x3
 1465 0181 0E       		.uleb128 0xe
 1466 0182 3A       		.uleb128 0x3a
 1467 0183 0B       		.uleb128 0xb
 1468 0184 3B       		.uleb128 0x3b
 1469 0185 05       		.uleb128 0x5
 1470 0186 49       		.uleb128 0x49
 1471 0187 13       		.uleb128 0x13
 1472 0188 02       		.uleb128 0x2
 1473 0189 18       		.uleb128 0x18
 1474 018a 00       		.byte	0
 1475 018b 00       		.byte	0
 1476 018c 19       		.uleb128 0x19
 1477 018d 34       		.uleb128 0x34
 1478 018e 00       		.byte	0
 1479 018f 03       		.uleb128 0x3
 1480 0190 0E       		.uleb128 0xe
 1481 0191 3A       		.uleb128 0x3a
 1482 0192 0B       		.uleb128 0xb
 1483 0193 3B       		.uleb128 0x3b
 1484 0194 0B       		.uleb128 0xb
 1485 0195 49       		.uleb128 0x49
 1486 0196 13       		.uleb128 0x13
 1487 0197 3F       		.uleb128 0x3f
 1488 0198 19       		.uleb128 0x19
 1489 0199 02       		.uleb128 0x2
 1490 019a 18       		.uleb128 0x18
 1491 019b 00       		.byte	0
 1492 019c 00       		.byte	0
 1493 019d 1A       		.uleb128 0x1a
 1494 019e 2E       		.uleb128 0x2e
 1495 019f 00       		.byte	0
 1496 01a0 3F       		.uleb128 0x3f
 1497 01a1 19       		.uleb128 0x19
 1498 01a2 3C       		.uleb128 0x3c
 1499 01a3 19       		.uleb128 0x19
 1500 01a4 6E       		.uleb128 0x6e
 1501 01a5 0E       		.uleb128 0xe
 1502 01a6 03       		.uleb128 0x3
 1503 01a7 0E       		.uleb128 0xe
 1504 01a8 3A       		.uleb128 0x3a
 1505 01a9 0B       		.uleb128 0xb
 1506 01aa 3B       		.uleb128 0x3b
 1507 01ab 0B       		.uleb128 0xb
 1508 01ac 00       		.byte	0
 1509 01ad 00       		.byte	0
 1510 01ae 00       		.byte	0
 1511              		.section	.debug_loc,"",%progbits
 1512              	.Ldebug_loc0:
 1513              	.LLST0:
 1514 0000 08000000 		.4byte	.LVL1
 1515 0004 0C000000 		.4byte	.LVL2
 1516 0008 0600     		.2byte	0x6
 1517 000a 73       		.byte	0x73
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 44


 1518 000b 00       		.sleb128 0
 1519 000c 09       		.byte	0x9
 1520 000d C0       		.byte	0xc0
 1521 000e 1A       		.byte	0x1a
 1522 000f 9F       		.byte	0x9f
 1523 0010 00000000 		.4byte	0
 1524 0014 00000000 		.4byte	0
 1525              	.LLST1:
 1526 0018 48000000 		.4byte	.LVL9
 1527 001c 53000000 		.4byte	.LVL10-1
 1528 0020 0100     		.2byte	0x1
 1529 0022 50       		.byte	0x50
 1530 0023 00000000 		.4byte	0
 1531 0027 00000000 		.4byte	0
 1532              	.LLST2:
 1533 002b 22000000 		.4byte	.LVL3
 1534 002f 2A000000 		.4byte	.LVL4
 1535 0033 0400     		.2byte	0x4
 1536 0035 0A       		.byte	0xa
 1537 0036 1F4E     		.2byte	0x4e1f
 1538 0038 9F       		.byte	0x9f
 1539 0039 00000000 		.4byte	0
 1540 003d 00000000 		.4byte	0
 1541              	.LLST3:
 1542 0041 2A000000 		.4byte	.LVL4
 1543 0045 2E000000 		.4byte	.LVL5
 1544 0049 0400     		.2byte	0x4
 1545 004b 0A       		.byte	0xa
 1546 004c 1F4E     		.2byte	0x4e1f
 1547 004e 9F       		.byte	0x9f
 1548 004f 00000000 		.4byte	0
 1549 0053 00000000 		.4byte	0
 1550              	.LLST4:
 1551 0057 2E000000 		.4byte	.LVL5
 1552 005b 36000000 		.4byte	.LVL6
 1553 005f 0400     		.2byte	0x4
 1554 0061 0A       		.byte	0xa
 1555 0062 C005     		.2byte	0x5c0
 1556 0064 9F       		.byte	0x9f
 1557 0065 00000000 		.4byte	0
 1558 0069 00000000 		.4byte	0
 1559              	.LLST5:
 1560 006d 36000000 		.4byte	.LVL6
 1561 0071 3C000000 		.4byte	.LVL7
 1562 0075 0400     		.2byte	0x4
 1563 0077 0A       		.byte	0xa
 1564 0078 F00A     		.2byte	0xaf0
 1565 007a 9F       		.byte	0x9f
 1566 007b 00000000 		.4byte	0
 1567 007f 00000000 		.4byte	0
 1568              	.LLST6:
 1569 0083 3C000000 		.4byte	.LVL7
 1570 0087 44000000 		.4byte	.LVL8
 1571 008b 0200     		.2byte	0x2
 1572 008d 30       		.byte	0x30
 1573 008e 9F       		.byte	0x9f
 1574 008f 00000000 		.4byte	0
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 45


 1575 0093 00000000 		.4byte	0
 1576              		.section	.debug_aranges,"",%progbits
 1577 0000 A4000000 		.4byte	0xa4
 1578 0004 0200     		.2byte	0x2
 1579 0006 00000000 		.4byte	.Ldebug_info0
 1580 000a 04       		.byte	0x4
 1581 000b 00       		.byte	0
 1582 000c 0000     		.2byte	0
 1583 000e 0000     		.2byte	0
 1584 0010 00000000 		.4byte	.LFB2
 1585 0014 10000000 		.4byte	.LFE2-.LFB2
 1586 0018 00000000 		.4byte	.LFB3
 1587 001c 10000000 		.4byte	.LFE3-.LFB3
 1588 0020 00000000 		.4byte	.LFB4
 1589 0024 0C000000 		.4byte	.LFE4-.LFB4
 1590 0028 00000000 		.4byte	.LFB5
 1591 002c 14000000 		.4byte	.LFE5-.LFB5
 1592 0030 00000000 		.4byte	.LFB6
 1593 0034 18000000 		.4byte	.LFE6-.LFB6
 1594 0038 00000000 		.4byte	.LFB1
 1595 003c 68000000 		.4byte	.LFE1-.LFB1
 1596 0040 00000000 		.4byte	.LFB0
 1597 0044 1C000000 		.4byte	.LFE0-.LFB0
 1598 0048 00000000 		.4byte	.LFB7
 1599 004c 0C000000 		.4byte	.LFE7-.LFB7
 1600 0050 00000000 		.4byte	.LFB8
 1601 0054 0C000000 		.4byte	.LFE8-.LFB8
 1602 0058 00000000 		.4byte	.LFB9
 1603 005c 0C000000 		.4byte	.LFE9-.LFB9
 1604 0060 00000000 		.4byte	.LFB10
 1605 0064 0C000000 		.4byte	.LFE10-.LFB10
 1606 0068 00000000 		.4byte	.LFB11
 1607 006c 0C000000 		.4byte	.LFE11-.LFB11
 1608 0070 00000000 		.4byte	.LFB12
 1609 0074 0C000000 		.4byte	.LFE12-.LFB12
 1610 0078 00000000 		.4byte	.LFB13
 1611 007c 0C000000 		.4byte	.LFE13-.LFB13
 1612 0080 00000000 		.4byte	.LFB14
 1613 0084 0C000000 		.4byte	.LFE14-.LFB14
 1614 0088 00000000 		.4byte	.LFB15
 1615 008c 0C000000 		.4byte	.LFE15-.LFB15
 1616 0090 00000000 		.4byte	.LFB16
 1617 0094 0C000000 		.4byte	.LFE16-.LFB16
 1618 0098 00000000 		.4byte	.LFB17
 1619 009c 0C000000 		.4byte	.LFE17-.LFB17
 1620 00a0 00000000 		.4byte	0
 1621 00a4 00000000 		.4byte	0
 1622              		.section	.debug_ranges,"",%progbits
 1623              	.Ldebug_ranges0:
 1624 0000 00000000 		.4byte	.LBB16
 1625 0004 02000000 		.4byte	.LBE16
 1626 0008 04000000 		.4byte	.LBB22
 1627 000c 06000000 		.4byte	.LBE22
 1628 0010 00000000 		.4byte	0
 1629 0014 00000000 		.4byte	0
 1630 0018 02000000 		.4byte	.LBB19
 1631 001c 04000000 		.4byte	.LBE19
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 46


 1632 0020 0A000000 		.4byte	.LBB23
 1633 0024 0E000000 		.4byte	.LBE23
 1634 0028 00000000 		.4byte	0
 1635 002c 00000000 		.4byte	0
 1636 0030 00000000 		.4byte	.LFB2
 1637 0034 10000000 		.4byte	.LFE2
 1638 0038 00000000 		.4byte	.LFB3
 1639 003c 10000000 		.4byte	.LFE3
 1640 0040 00000000 		.4byte	.LFB4
 1641 0044 0C000000 		.4byte	.LFE4
 1642 0048 00000000 		.4byte	.LFB5
 1643 004c 14000000 		.4byte	.LFE5
 1644 0050 00000000 		.4byte	.LFB6
 1645 0054 18000000 		.4byte	.LFE6
 1646 0058 00000000 		.4byte	.LFB1
 1647 005c 68000000 		.4byte	.LFE1
 1648 0060 00000000 		.4byte	.LFB0
 1649 0064 1C000000 		.4byte	.LFE0
 1650 0068 00000000 		.4byte	.LFB7
 1651 006c 0C000000 		.4byte	.LFE7
 1652 0070 00000000 		.4byte	.LFB8
 1653 0074 0C000000 		.4byte	.LFE8
 1654 0078 00000000 		.4byte	.LFB9
 1655 007c 0C000000 		.4byte	.LFE9
 1656 0080 00000000 		.4byte	.LFB10
 1657 0084 0C000000 		.4byte	.LFE10
 1658 0088 00000000 		.4byte	.LFB11
 1659 008c 0C000000 		.4byte	.LFE11
 1660 0090 00000000 		.4byte	.LFB12
 1661 0094 0C000000 		.4byte	.LFE12
 1662 0098 00000000 		.4byte	.LFB13
 1663 009c 0C000000 		.4byte	.LFE13
 1664 00a0 00000000 		.4byte	.LFB14
 1665 00a4 0C000000 		.4byte	.LFE14
 1666 00a8 00000000 		.4byte	.LFB15
 1667 00ac 0C000000 		.4byte	.LFE15
 1668 00b0 00000000 		.4byte	.LFB16
 1669 00b4 0C000000 		.4byte	.LFE16
 1670 00b8 00000000 		.4byte	.LFB17
 1671 00bc 0C000000 		.4byte	.LFE17
 1672 00c0 00000000 		.4byte	0
 1673 00c4 00000000 		.4byte	0
 1674              		.section	.debug_line,"",%progbits
 1675              	.Ldebug_line0:
 1676 0000 D1010000 		.section	.debug_str,"MS",%progbits,1
 1676      02004D00 
 1676      00000201 
 1676      FB0E0D00 
 1676      01010101 
 1677              	.LASF15:
 1678 0000 72656731 		.ascii	"reg16\000"
 1678      3600
 1679              	.LASF47:
 1680 0006 50574D5F 		.ascii	"PWM_Y_ReadControlRegister\000"
 1680      595F5265 
 1680      6164436F 
 1680      6E74726F 
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 47


 1680      6C526567 
 1681              	.LASF18:
 1682 0020 50574D5F 		.ascii	"PWM_Y_ReadCapture\000"
 1682      595F5265 
 1682      61644361 
 1682      70747572 
 1682      6500
 1683              	.LASF49:
 1684 0032 50574D5F 		.ascii	"PWM_Y_initVar\000"
 1684      595F696E 
 1684      69745661 
 1684      7200
 1685              	.LASF26:
 1686 0040 70657269 		.ascii	"period\000"
 1686      6F6400
 1687              	.LASF3:
 1688 0047 73686F72 		.ascii	"short unsigned int\000"
 1688      7420756E 
 1688      7369676E 
 1688      65642069 
 1688      6E7400
 1689              	.LASF41:
 1690 005a 50574D5F 		.ascii	"PWM_Y_ReadPeriod\000"
 1690      595F5265 
 1690      61645065 
 1690      72696F64 
 1690      00
 1691              	.LASF32:
 1692 006b 50574D5F 		.ascii	"PWM_Y_Init\000"
 1692      595F496E 
 1692      697400
 1693              	.LASF25:
 1694 0076 50574D5F 		.ascii	"PWM_Y_WritePeriod\000"
 1694      595F5772 
 1694      69746550 
 1694      6572696F 
 1694      6400
 1695              	.LASF24:
 1696 0088 50574D5F 		.ascii	"PWM_Y_WriteCompare1\000"
 1696      595F5772 
 1696      69746543 
 1696      6F6D7061 
 1696      72653100 
 1697              	.LASF21:
 1698 009c 50574D5F 		.ascii	"PWM_Y_WriteCompare2\000"
 1698      595F5772 
 1698      69746543 
 1698      6F6D7061 
 1698      72653200 
 1699              	.LASF11:
 1700 00b0 666C6F61 		.ascii	"float\000"
 1700      7400
 1701              	.LASF28:
 1702 00b6 636F756E 		.ascii	"counter\000"
 1702      74657200 
 1703              	.LASF7:
 1704 00be 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 48


 1704      206C6F6E 
 1704      6720756E 
 1704      7369676E 
 1704      65642069 
 1705              	.LASF1:
 1706 00d5 756E7369 		.ascii	"unsigned char\000"
 1706      676E6564 
 1706      20636861 
 1706      7200
 1707              	.LASF14:
 1708 00e3 72656738 		.ascii	"reg8\000"
 1708      00
 1709              	.LASF44:
 1710 00e8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1710      43313120 
 1710      352E342E 
 1710      31203230 
 1710      31363036 
 1711 011b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1711      20726576 
 1711      6973696F 
 1711      6E203233 
 1711      37373135 
 1712 014e 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1712      66756E63 
 1712      74696F6E 
 1712      2D736563 
 1712      74696F6E 
 1713              	.LASF9:
 1714 0176 75696E74 		.ascii	"uint8\000"
 1714      3800
 1715              	.LASF48:
 1716 017c 636F6E74 		.ascii	"control\000"
 1716      726F6C00 
 1717              	.LASF12:
 1718 0184 646F7562 		.ascii	"double\000"
 1718      6C6500
 1719              	.LASF2:
 1720 018b 73686F72 		.ascii	"short int\000"
 1720      7420696E 
 1720      7400
 1721              	.LASF36:
 1722 0195 72657375 		.ascii	"result\000"
 1722      6C7400
 1723              	.LASF10:
 1724 019c 75696E74 		.ascii	"uint16\000"
 1724      313600
 1725              	.LASF19:
 1726 01a3 50574D5F 		.ascii	"PWM_Y_ReadStatusRegister\000"
 1726      595F5265 
 1726      61645374 
 1726      61747573 
 1726      52656769 
 1727              	.LASF30:
 1728 01bc 50574D5F 		.ascii	"PWM_Y_Stop\000"
 1728      595F5374 
 1728      6F7000
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 49


 1729              	.LASF27:
 1730 01c7 50574D5F 		.ascii	"PWM_Y_WriteCounter\000"
 1730      595F5772 
 1730      69746543 
 1730      6F756E74 
 1730      657200
 1731              	.LASF42:
 1732 01da 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1732      74657243 
 1732      72697469 
 1732      63616C53 
 1732      65637469 
 1733              	.LASF5:
 1734 01f1 6C6F6E67 		.ascii	"long unsigned int\000"
 1734      20756E73 
 1734      69676E65 
 1734      6420696E 
 1734      7400
 1735              	.LASF8:
 1736 0203 756E7369 		.ascii	"unsigned int\000"
 1736      676E6564 
 1736      20696E74 
 1736      00
 1737              	.LASF29:
 1738 0210 50574D5F 		.ascii	"PWM_Y_Enable\000"
 1738      595F456E 
 1738      61626C65 
 1738      00
 1739              	.LASF43:
 1740 021d 43794578 		.ascii	"CyExitCriticalSection\000"
 1740      69744372 
 1740      69746963 
 1740      616C5365 
 1740      6374696F 
 1741              	.LASF39:
 1742 0233 50574D5F 		.ascii	"PWM_Y_ReadCompare1\000"
 1742      595F5265 
 1742      6164436F 
 1742      6D706172 
 1742      653100
 1743              	.LASF40:
 1744 0246 50574D5F 		.ascii	"PWM_Y_ReadCompare2\000"
 1744      595F5265 
 1744      6164436F 
 1744      6D706172 
 1744      653200
 1745              	.LASF37:
 1746 0259 50574D5F 		.ascii	"PWM_Y_WriteControlRegister\000"
 1746      595F5772 
 1746      69746543 
 1746      6F6E7472 
 1746      6F6C5265 
 1747              	.LASF46:
 1748 0274 453A5C55 		.ascii	"E:\\U\\Lab de Control\\PID Controler-20191011T02191"
 1748      5C4C6162 
 1748      20646520 
 1748      436F6E74 
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 50


 1748      726F6C5C 
 1749 02a4 395A2D30 		.ascii	"9Z-001\\PID Controler\\Controlador.cydsn\000"
 1749      30315C50 
 1749      49442043 
 1749      6F6E7472 
 1749      6F6C6572 
 1750              	.LASF16:
 1751 02cb 6C6F6E67 		.ascii	"long double\000"
 1751      20646F75 
 1751      626C6500 
 1752              	.LASF17:
 1753 02d7 73697A65 		.ascii	"sizetype\000"
 1753      74797065 
 1753      00
 1754              	.LASF6:
 1755 02e0 6C6F6E67 		.ascii	"long long int\000"
 1755      206C6F6E 
 1755      6720696E 
 1755      7400
 1756              	.LASF22:
 1757 02ee 696E7465 		.ascii	"interruptMode\000"
 1757      72727570 
 1757      744D6F64 
 1757      6500
 1758              	.LASF31:
 1759 02fc 50574D5F 		.ascii	"PWM_Y_ClearFIFO\000"
 1759      595F436C 
 1759      65617246 
 1759      49464F00 
 1760              	.LASF20:
 1761 030c 50574D5F 		.ascii	"PWM_Y_SetInterruptMode\000"
 1761      595F5365 
 1761      74496E74 
 1761      65727275 
 1761      70744D6F 
 1762              	.LASF33:
 1763 0323 6374726C 		.ascii	"ctrl\000"
 1763      00
 1764              	.LASF34:
 1765 0328 50574D5F 		.ascii	"PWM_Y_interruptState\000"
 1765      595F696E 
 1765      74657272 
 1765      75707453 
 1765      74617465 
 1766              	.LASF4:
 1767 033d 6C6F6E67 		.ascii	"long int\000"
 1767      20696E74 
 1767      00
 1768              	.LASF13:
 1769 0346 63686172 		.ascii	"char\000"
 1769      00
 1770              	.LASF38:
 1771 034b 50574D5F 		.ascii	"PWM_Y_ReadCounter\000"
 1771      595F5265 
 1771      6164436F 
 1771      756E7465 
 1771      7200
ARM GAS  C:\Users\emman\AppData\Local\Temp\ccTfFs6Y.s 			page 51


 1772              	.LASF35:
 1773 035d 50574D5F 		.ascii	"PWM_Y_Start\000"
 1773      595F5374 
 1773      61727400 
 1774              	.LASF0:
 1775 0369 7369676E 		.ascii	"signed char\000"
 1775      65642063 
 1775      68617200 
 1776              	.LASF23:
 1777 0375 636F6D70 		.ascii	"compare\000"
 1777      61726500 
 1778              	.LASF45:
 1779 037d 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_Y.c\000"
 1779      72617465 
 1779      645F536F 
 1779      75726365 
 1779      5C50536F 
 1780              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
